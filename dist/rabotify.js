(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Rabotify"] = factory();
	else
		root["Rabotify"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 133);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["d"] = createSimpleFunctional;
/* harmony export (immutable) */ __webpack_exports__["e"] = createSimpleTransition;
/* harmony export (immutable) */ __webpack_exports__["f"] = createSimpleTransitionGroup;
/* harmony export (immutable) */ __webpack_exports__["c"] = createJavaScriptTransition;
/* unused harmony export directiveConfig */
/* harmony export (immutable) */ __webpack_exports__["a"] = addOnceEventListener;
/* harmony export (immutable) */ __webpack_exports__["s"] = getObjectValueByPath;
/* unused harmony export createRange */
/* harmony export (immutable) */ __webpack_exports__["u"] = getZIndex;
/* unused harmony export tagsToReplace */
/* harmony export (immutable) */ __webpack_exports__["i"] = escapeHTML;
/* harmony export (immutable) */ __webpack_exports__["k"] = filterObjectOnKeys;
/* unused harmony export filterChildren */
/* harmony export (immutable) */ __webpack_exports__["x"] = isServer;
/* unused harmony export isBrowser */
/* harmony export (immutable) */ __webpack_exports__["o"] = getElementOffset;
/* harmony export (immutable) */ __webpack_exports__["p"] = getElementRelativeOffset;
/* harmony export (immutable) */ __webpack_exports__["m"] = getDocumentHeight;
/* harmony export (immutable) */ __webpack_exports__["t"] = getWindowHeight;
/* unused harmony export isVueComponent */
/* harmony export (immutable) */ __webpack_exports__["n"] = getElementHeight;
/* harmony export (immutable) */ __webpack_exports__["r"] = getElementWidth;
/* harmony export (immutable) */ __webpack_exports__["q"] = getElementScrollHeight;
/* unused harmony export getElementScrollWidth */
/* harmony export (immutable) */ __webpack_exports__["z"] = resolveElement;
/* harmony export (immutable) */ __webpack_exports__["j"] = extractVNodeText;
/* harmony export (immutable) */ __webpack_exports__["b"] = clampNumber;
/* harmony export (immutable) */ __webpack_exports__["g"] = ensureNumber;
/* harmony export (immutable) */ __webpack_exports__["h"] = ensureString;
/* harmony export (immutable) */ __webpack_exports__["y"] = normalizeClassName;
/* harmony export (immutable) */ __webpack_exports__["w"] = isObject;
/* harmony export (immutable) */ __webpack_exports__["v"] = isBrowserSafari;
/* harmony export (immutable) */ __webpack_exports__["l"] = generateNumber;
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * @param {string} c
 * @param {string|*} el
 * @param {string} name
 * @return {Object}
 */
function createSimpleFunctional(c) {
  var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'div';
  var name = arguments[2];

  name = name || c.replace(/__/g, '-');

  return {
    name: 'r-' + name,
    functional: true,

    render: function render(h, _ref) {
      var data = _ref.data,
          children = _ref.children;

      data.staticClass = normalizeClassName(c + ' ' + (data.staticClass || ''));

      return h(el, data, children);
    }
  };
}

/**
 * @param {string} name
 * @param {string} origin
 * @param {string} mode
 * @param {boolean} isGroup
 * @return {Object}
 */
function createSimpleTransition(name) {
  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top center 0';
  var mode = arguments[2];
  var isGroup = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

  return {
    name: name,

    functional: true,

    props: {
      origin: {
        type: String,
        default: origin
      }
    },

    render: function render(h, context) {
      context.data = context.data || {};
      context.data.props = { name: name };
      context.data.on = context.data.on || {};
      if (!Object.isExtensible(context.data.on)) {
        context.data.on = _extends({}, context.data.on);
      }

      if (mode) {
        context.data.props.mode = mode;
      }

      context.data.on.beforeEnter = function (el) {
        el.style.transformOrigin = context.props.origin;
        el.style.webkitTransformOrigin = context.props.origin;
      };

      var component = isGroup ? 'transition-group' : 'transition';

      return h(component, context.data, context.children);
    }
  };
}

/**
 * @param {string} name
 * @param {string} origin
 * @param {string} mode
 * @return {{name, functional, props, render}}
 */
function createSimpleTransitionGroup(name) {
  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top center 0';
  var mode = arguments[2];

  return createSimpleTransition(name + '-group', origin, mode, true);
}

function createJavaScriptTransition(name, functions) {
  var css = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
  var mode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'in-out';
  var isGroup = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  return {
    name: name,

    functional: true,

    props: {
      css: {
        type: Boolean,
        default: css
      },
      mode: {
        type: String,
        default: mode
      }
    },

    render: function render(h, context) {
      var data = {
        props: _extends({}, context.props, {
          name: name
        }),
        on: functions
      };

      var component = isGroup ? 'transition-group' : 'transition';

      return h(component, data, context.children);
    }
  };
}

/**
 * @param binding
 * @param defaults
 * @return {Object}
 */
function directiveConfig(binding) {
  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  return Object.assign({}, defaults, binding.modifiers, { value: binding.arg }, binding.value || {});
}

/**
 * @param {Element} el
 * @param {string} event
 * @param {Function} cb
 */
function addOnceEventListener(el, event, cb) {
  var once = function once() {
    cb();
    el.removeEventListener(event, once, false);
  };

  el.addEventListener(event, once, false);
}

/**
 * @param {Object} obj
 * @param {string} path
 * @return {*}
 */
function getObjectValueByPath(obj, path) {
  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621
  if (!path || path.constructor !== String) {
    return;
  }
  path = path.replace(/\[(\w+)\]/g, '.$1'); // convert indexes to properties
  path = path.replace(/^\./, ''); // strip a leading dot
  var a = path.split('.');
  for (var i = 0, n = a.length; i < n; ++i) {
    var k = a[i];
    if (obj != null) {
      obj = obj[k];
    } else {
      return;
    }
  }
  return obj;
}

/**
 * @param {number} length
 * @return {Array<number>}
 */
function createRange(length) {
  return [].concat(_toConsumableArray(Array.from({ length: length }, function (v, k) {
    return k;
  })));
}

/**
 * @param {Element|*} el
 * @return {number}
 */
function getZIndex(el) {
  if (!el || el.nodeType !== Node.ELEMENT_NODE) {
    return 0;
  }

  var zi = document.defaultView.getComputedStyle(el).getPropertyValue('z-index');
  if (isNaN(zi)) {
    return getZIndex(el.parentNode);
  }

  return zi;
}

var tagsToReplace = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;'
};

/**
 * @param {string} str
 * @return {string}
 */
function escapeHTML(str) {
  return str.replace(/[&<>]/g, function (tag) {
    return tagsToReplace[tag] || tag;
  });
}

/**
 * @param {Object} obj
 * @param {Array} keys
 */
function filterObjectOnKeys(obj, keys) {
  var filtered = {};
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (typeof obj[key] !== 'undefined') {
      filtered[key] = obj[key];
    }
  }
  return filtered;
}

/**
 * @param {Array} array
 * @param {string|*} tag
 * @return {Array}
 */
function filterChildren() {
  var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var tag = arguments[1];

  return array.filter(function (child) {
    return child.componentOptions && child.componentOptions.Ctor && child.componentOptions.Ctor.options && child.componentOptions.Ctor.options.name === tag;
  });
}

/**
 * @return {boolean}
 */
function isServer() {
  return typeof window === 'undefined';
}

/**
 * @return {boolean}
 */
function isBrowser() {
  return typeof window !== 'undefined';
}

/**
 * @param {Element} element
 * @return {{top: number, left: number}}
 */
function getElementOffset(element) {
  if (!element || isServer()) {
    return { top: 0, left: 0 };
  }

  // Return zeros for disconnected and hidden (display: none) elements
  // Support: IE <= 11 only
  // Running getBoundingClientRect on a
  // disconnected node in IE throws an error
  if (element.getClientRects && !element.getClientRects().length) {
    return { top: 0, left: 0 };
  }

  // Get document-relative position by adding viewport scroll to viewport-relative gBCR
  var rect = element.getBoundingClientRect();
  var win = element.ownerDocument.defaultView;
  return {
    top: rect.top + win.pageYOffset,
    left: rect.left + win.pageXOffset
  };
}

/**
 * @param {Element} targetElement
 * @param {Element} relativeElement
 * @return {{ top: number, left: number }}
 */
function getElementRelativeOffset(targetElement, relativeElement) {
  var targetOffset = getElementOffset(targetElement);
  var relativeOffset = getElementOffset(relativeElement);

  return {
    top: targetOffset.top - relativeOffset.top + relativeElement.scrollTop,
    left: targetOffset.left - relativeOffset.left + relativeElement.scrollLeft
  };
}

/**
 * @returns {number}
 */
function getDocumentHeight() {
  return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight);
}

/**
 * @returns {number}
 */
function getWindowHeight() {
  return window.innerHeight || (document.documentElement || document.body).clientHeight;
}

/**
 * @param {*} obj
 * @returns {boolean}
 */
function isVueComponent(obj) {
  return !!(obj && obj.$el);
}

/**
 * @param {Element} element
 * @returns {number}
 */
function getElementHeight(element) {
  return element.innerHeight || element.clientHeight;
}

/**
 * @param {Element} element
 * @returns {number}
 */
function getElementWidth(element) {
  return element.innerWidth || element.clientWidth;
}

/**
 * @param {Element} element
 * @returns {number}
 */
function getElementScrollHeight(element) {
  return Math.max(element.scrollHeight, element.offsetHeight, element.clientHeight);
}

/**
 * @param {Element} element
 * @returns {number}
 */
function getElementScrollWidth(element) {
  return Math.max(element.scrollWidth, element.offsetWidth, element.clientWidth);
}

/**
 * @param {*} target
 * @returns {Element}
 */
function resolveElement(target) {
  if (target instanceof Element) {
    return target;
  } else if (isVueComponent(target)) {
    return target.$el;
  } else if (typeof target === 'string') {
    return document && document.querySelector(target);
  } else {
    return target;
  }
}

/**
 * @param {Array<VNode>|VNode} vnodes
 * @param {boolean} deep
 */
function extractVNodeText(vnodes) {
  var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (!vnodes) {
    return '';
  }

  return [].concat(vnodes).reduce(function (result, vnode) {
    // if we have native element
    // then return inner text content
    var elm = vnode.$el;
    var elmText = elm && (elm.innerText || elm.textContent);

    if (elmText) {
      return result + ' ' + ensureString(elmText).trim();
    }

    if (vnode.text) {
      result += ' ' + ensureString(vnode.text).trim();
    }

    if (deep && vnode.children && vnode.children.length) {
      result += ' ' + extractVNodeText(vnode.children);
    }

    return result;
  }, '');
}

/**
 * @param {number} number
 * @param {number} min
 * @param {number} max
 * @returns {number}
 */
function clampNumber(number) {
  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -Infinity;
  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;

  if (min > max) {
    var _ref2 = [max, min];
    min = _ref2[0];
    max = _ref2[1];
  }

  return Math.min(Math.max(ensureNumber(number), min), max);
}

/**
 * @param {*} value
 * @returns {number}
 */
function ensureNumber(value) {
  value = Number(value);

  return !Number.isNaN(value) ? value : 0;
}

/**
 * @param {string|*} value
 * @returns {string}
 */
function ensureString(value) {
  if (typeof value === 'string') {
    return value;
  }

  return (value || '').toString();
}

/**
 * @param {string} className
 * @return {string}
 */
function normalizeClassName(className) {
  var whitespaceRegexp = /(\s+(?=\s))/gi;
  return (className || '').toString().replace(whitespaceRegexp, '').trim();
}

/**
 * @param {*} value
 * @returns {boolean}
 */
function isObject(value) {
  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;
}

/**
 * @returns {boolean}
 */
function isBrowserSafari() {
  if (isServer()) {
    return false;
  }

  return (/^((?!chrome|android|crios|fxios).)*safari/i.test(navigator.userAgent)
  );
}

/**
 * @param {number} min
 * @param {number} max
 * @return {number}
 */
function generateNumber() {
  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e9;

  min = Math.ceil(min);
  max |= 0;

  return Math.floor(Math.random() * (max - min + 1)) + min;
}

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    color: String
  },

  data: function data() {
    return {
      defaultColor: null
    };
  },


  computed: {
    computedColor: function computedColor() {
      return this.color || this.defaultColor;
    }
  },

  methods: {
    addBackgroundColorClassChecks: function addBackgroundColorClassChecks() {
      var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'computedColor';

      var classes = Object.assign({}, obj);

      if (prop && this[prop]) {
        classes[this[prop]] = true;
      }

      return classes;
    },
    addTextColorClassChecks: function addTextColorClassChecks() {
      var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'computedColor';

      var classes = Object.assign({}, obj);

      if (prop && this[prop]) {
        var parts = this[prop].trim().split(' ');

        var color = 'text_' + parts[0];

        if (parts.length > 1) {
          color += ' text_' + parts[1];
        }

        classes[color] = !!this[prop];
      }

      return classes;
    }
  }
});

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = inject;
/* harmony export (immutable) */ __webpack_exports__["b"] = provide;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_console__ = __webpack_require__(15);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



function generateWarning(child, parent) {
  return function () {
    return Object(__WEBPACK_IMPORTED_MODULE_0__util_console__["b" /* consoleWarn */])('The ' + child + ' component must be used inside a ' + parent + '.');
  };
}

function inject(namespace, child, parent) {
  var defaultImpl = child && parent ? {
    register: generateWarning(child, parent),
    unregister: generateWarning(child, parent)
  } : null;

  return {
    inject: _defineProperty({}, namespace, {
      default: defaultImpl
    })
  };
}

function provide(namespace) {
  return {
    methods: {
      register: null,
      unregister: null
    },
    provide: function provide() {
      return _defineProperty({}, namespace, {
        register: this.register,
        unregister: this.unregister
      });
    }
  };
}

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RBtn_vue__ = __webpack_require__(37);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(148)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RBtn_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = factory;
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function factory() {
  var _watch;

  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';
  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input';

  return {
    name: 'toggleable',

    model: { prop: prop, event: event },

    props: _defineProperty({}, prop, { required: false }),

    data: function data() {
      return {
        isActive: !!this[prop]
      };
    },


    watch: (_watch = {}, _defineProperty(_watch, prop, function (val) {
      this.isActive = !!val;
    }), _defineProperty(_watch, 'isActive', function isActive(val) {
      !!val !== this[prop] && this.$emit(event, val);
    }), _watch)
  };
}

var Toggleable = factory();

/* harmony default export */ __webpack_exports__["a"] = (Toggleable);

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdClose_vue__ = __webpack_require__(41);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdClose_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdClose_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdClose_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export RDialogTransition */
/* unused harmony export RDialogTopTransition */
/* unused harmony export RDialogBottomTransition */
/* unused harmony export RDialogLeftTransition */
/* unused harmony export RDialogRightTransition */
/* unused harmony export RBottomSheetTranstion */
/* unused harmony export RCarouselTransition */
/* unused harmony export RCarouselReverseTransition */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return RTabTransition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return RTabReverseTransition; });
/* unused harmony export RMenuTransition */
/* unused harmony export RFabTransition */
/* unused harmony export RToastTransition */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return RFadeTransition; });
/* unused harmony export RScaleTransition */
/* unused harmony export RSlideXTransition */
/* unused harmony export RSlideXReverseTransition */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return RSlideYTransition; });
/* unused harmony export RSlideYReverseTransition */
/* unused harmony export RFadeTransitionGroup */
/* unused harmony export RSlideXTransitionGroup */
/* unused harmony export RSlideXReverseTransitionGroup */
/* unused harmony export RSlideYTransitionGroup */
/* unused harmony export RSlideYReverseTransitionGroup */
/* unused harmony export RScaleTransitionGroup */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RExpandTransition; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__expand_transition__ = __webpack_require__(155);




// Component specific transitions
var RDialogTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('dialog-transition');
var RDialogTopTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('dialog-top-transition');
var RDialogBottomTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('dialog-bottom-transition');
var RDialogLeftTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('dialog-left-transition');
var RDialogRightTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('dialog-right-transition');

var RBottomSheetTranstion = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('bottom-sheet-transition');
var RCarouselTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('carousel-transition');
var RCarouselReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('carousel-reverse-transition');
var RTabTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('tab-transition');
var RTabReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('tab-reverse-transition');
var RMenuTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('menu-transition');
var RFabTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('fab-transition', 'center center', 'out-in');
var RToastTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('toast-transition', 'center center', 'out-in');

// Generic transitions
var RFadeTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('fade-transition');
var RScaleTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('scale-transition');
var RSlideXTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('slide-x-transition');
var RSlideXReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('slide-x-reverse-transition');
var RSlideYTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('slide-y-transition');
var RSlideYReverseTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["e" /* createSimpleTransition */])('slide-y-reverse-transition');

// Generic transitions' groups
var RFadeTransitionGroup = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["f" /* createSimpleTransitionGroup */])('fade-transition');
var RSlideXTransitionGroup = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["f" /* createSimpleTransitionGroup */])('slide-x-transition');
var RSlideXReverseTransitionGroup = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["f" /* createSimpleTransitionGroup */])('slide-x-reverse-transition');
var RSlideYTransitionGroup = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["f" /* createSimpleTransitionGroup */])('slide-y-transition');
var RSlideYReverseTransitionGroup = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["f" /* createSimpleTransitionGroup */])('slide-y-reverse-transition');
var RScaleTransitionGroup = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["f" /* createSimpleTransitionGroup */])('scale-transition');

// JavaScript transitions
var RExpandTransition = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["c" /* createJavaScriptTransition */])('expand-transition', Object(__WEBPACK_IMPORTED_MODULE_1__expand_transition__["a" /* default */])());

/* istanbul ignore next */
// eslint-disable-next-line max-statements
function install(Vue) {
  // Component transitions
  Vue.component('r-bottom-sheet-transition', RBottomSheetTranstion);
  Vue.component('r-carousel-transition', RCarouselTransition);
  Vue.component('r-carousel-reverse-transition', RCarouselReverseTransition);
  Vue.component('r-dialog-transition', RDialogTransition);
  Vue.component('r-dialog-top-transition', RDialogTopTransition);
  Vue.component('r-dialog-bottom-transition', RDialogBottomTransition);
  Vue.component('r-dialog-left-transition', RDialogLeftTransition);
  Vue.component('r-dialog-right-transition', RDialogRightTransition);
  Vue.component('r-tab-reverse-transition', RTabReverseTransition);
  Vue.component('r-tab-transition', RTabTransition);
  Vue.component('r-fab-transition', RFabTransition);
  Vue.component('r-menu-transition', RMenuTransition);

  // Generic transitions
  Vue.component('r-fade-transition', RFadeTransition);
  Vue.component('r-scale-transition', RScaleTransition);
  Vue.component('r-slide-x-transition', RSlideXTransition);
  Vue.component('r-slide-x-reverse-transition', RSlideXReverseTransition);
  Vue.component('r-slide-y-transition', RSlideYTransition);
  Vue.component('r-slide-y-reverse-transition', RSlideYReverseTransition);

  // Generic group transitions
  Vue.component('r-fade-transition-group', RFadeTransitionGroup);
  Vue.component('r-slide-x-transition-group', RSlideXTransitionGroup);
  Vue.component('r-slide-x-reverse-transition-group', RSlideXReverseTransitionGroup);
  Vue.component('r-slide-y-transition-group', RSlideYTransitionGroup);
  Vue.component('r-slide-y-reverse-transition-group', RSlideYReverseTransitionGroup);
  Vue.component('r-scale-transition-group', RScaleTransitionGroup);

  // JavaScript transitions
  Vue.component('r-expand-transition', RExpandTransition);
}

/* harmony default export */ __webpack_exports__["f"] = (install);

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function inserted(el, binding) {
  var callback = binding.value;
  var options = binding.options || { passive: true };

  window.addEventListener('resize', callback, options);
  el._onResize = {
    callback: callback,
    options: options
  };

  if (!binding.modifiers || !binding.modifiers.quiet) {
    callback();
  }
}

function unbind(el, binding) {
  var _el$_onResize = el._onResize,
      callback = _el$_onResize.callback,
      options = _el$_onResize.options;


  window.removeEventListener('resize', callback, options);
  delete el._onResize;
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'resize',
  inserted: inserted,
  unbind: unbind
});

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _touchstart = function _touchstart(event, wrapper) {
  var touch = event.changedTouches[0];
  wrapper.touchstartX = touch.clientX;
  wrapper.touchstartY = touch.clientY;

  wrapper.start && wrapper.start(Object.assign(event, wrapper));
};

var _touchend = function _touchend(event, wrapper) {
  var touch = event.changedTouches[0];
  wrapper.touchendX = touch.clientX;
  wrapper.touchendY = touch.clientY;

  wrapper.end && wrapper.end(Object.assign(event, wrapper));

  handleGesture(wrapper);
};

var _touchmove = function _touchmove(event, wrapper) {
  var touch = event.changedTouches[0];
  wrapper.touchmoveX = touch.clientX;
  wrapper.touchmoveY = touch.clientY;

  wrapper.move && wrapper.move(Object.assign(event, wrapper));
};

var handleGesture = function handleGesture(wrapper) {
  var touchstartX = wrapper.touchstartX,
      touchendX = wrapper.touchendX,
      touchstartY = wrapper.touchstartY,
      touchendY = wrapper.touchendY;

  var dirRatio = 0.5;
  var minDistance = 16;
  wrapper.offsetX = touchendX - touchstartX;
  wrapper.offsetY = touchendY - touchstartY;

  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {
    wrapper.left && touchendX < touchstartX - minDistance && wrapper.left(wrapper);
    wrapper.right && touchendX > touchstartX + minDistance && wrapper.right(wrapper);
  }

  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {
    wrapper.up && touchendY < touchstartY - minDistance && wrapper.up(wrapper);
    wrapper.down && touchendY > touchstartY + minDistance && wrapper.down(wrapper);
  }
};

function inserted(el, _ref, _ref2) {
  var value = _ref.value;
  var context = _ref2.context;

  var wrapper = {
    touchstartX: 0,
    touchstartY: 0,
    touchendX: 0,
    touchendY: 0,
    touchmoveX: 0,
    touchmoveY: 0,
    offsetX: 0,
    offsetY: 0,
    left: value.left,
    right: value.right,
    up: value.up,
    down: value.down,
    start: value.start,
    move: value.move,
    end: value.end
  };

  var target = value.parent ? el.parentNode : el;
  var options = value.options || { passive: true };

  // Needed to pass unit tests
  if (!target) {
    return;
  }

  var handlers = {
    touchstart: function touchstart(e) {
      return _touchstart(e, wrapper);
    },
    touchend: function touchend(e) {
      return _touchend(e, wrapper);
    },
    touchmove: function touchmove(e) {
      return _touchmove(e, wrapper);
    }
  };
  target._touchHandlers = Object.assign(Object(target._touchHandlers), _defineProperty({}, context._uid, handlers));
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = Object.keys(handlers)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var eventName = _step.value;

      target.addEventListener(eventName, handlers[eventName], options);
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
}

function unbind(el, _ref3, _ref4) {
  var value = _ref3.value;
  var context = _ref4.context;

  var target = value.parent ? el.parentNode : el;

  if (!target) {
    return;
  }

  var handlers = target._touchHandlers[context._uid];
  var _iteratorNormalCompletion2 = true;
  var _didIteratorError2 = false;
  var _iteratorError2 = undefined;

  try {
    for (var _iterator2 = Object.keys(handlers)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
      var eventName = _step2.value;

      target.removeEventListener(eventName, handlers[eventName]);
    }
  } catch (err) {
    _didIteratorError2 = true;
    _iteratorError2 = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion2 && _iterator2.return) {
        _iterator2.return();
      }
    } finally {
      if (_didIteratorError2) {
        throw _iteratorError2;
      }
    }
  }

  delete target._touchHandlers[context._uid];
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'touch',
  inserted: inserted,
  unbind: unbind
});

/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_ripple__ = __webpack_require__(20);


/** @mixin */
/* harmony default export */ __webpack_exports__["a"] = ({
  directives: { Ripple: __WEBPACK_IMPORTED_MODULE_0__directives_ripple__["a" /* default */] },

  props: {
    ripple: {
      type: [Boolean, Object],
      default: false
    }
  },

  methods: {
    genRipple: function genRipple() {
      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { directives: [] };

      data.class = this.rippleClasses || 'input-group_selection-controls__ripple';
      data.directives.push({
        name: 'ripple',
        value: this.ripple && !this.disabled && { center: true }
      });
      data.on = Object.assign({
        click: this.toggle
      }, this.$listeners);

      return this.$createElement('div', data);
    }
  }
});

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__loadable__ = __webpack_require__(156);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__validatable__ = __webpack_require__(157);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rabota_md_svg_vue_dist_navigation_MdClose_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_RBtn_RBtn_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_transitions__ = __webpack_require__(7);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




// Icons


// Components


// Transitions


/* harmony default export */ __webpack_exports__["a"] = ({
  components: {
    MdClose: __WEBPACK_IMPORTED_MODULE_2__rabota_md_svg_vue_dist_navigation_MdClose_vue__["default"],
    RBtn: __WEBPACK_IMPORTED_MODULE_3__components_RBtn_RBtn_vue__["a" /* default */],
    RExpandTransition: __WEBPACK_IMPORTED_MODULE_4__components_transitions__["a" /* RExpandTransition */],
    RSlideYTransition: __WEBPACK_IMPORTED_MODULE_4__components_transitions__["c" /* RSlideYTransition */]
  },

  mixins: [__WEBPACK_IMPORTED_MODULE_0__loadable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__validatable__["a" /* default */]],

  data: function data() {
    return {
      isFocused: false,
      tabFocused: false,
      internalTabIndex: null,
      lazyValue: this.value
    };
  },


  props: {
    appendIcon: [Object, String],
    appendIconCb: Function,
    disabled: Boolean,
    hint: String,
    hideDetails: Boolean,
    label: String,
    staticLabel: {
      type: Boolean,
      default: false
    },
    persistentHint: Boolean,
    preserveDetails: Boolean,
    placeholder: String,
    prependIcon: [Object, String],
    prependIconCb: Function,
    readonly: Boolean,
    required: Boolean,
    optional: Boolean,
    tabindex: {
      default: 0
    },
    toggleKeys: {
      type: Array,
      default: function _default() {
        return [13, 32];
      }
    },
    value: {
      required: false
    }
  },

  computed: {
    inputGroupClasses: function inputGroupClasses() {
      return Object.assign({
        'input-group': true,
        'input-group_async-loading': this.loading !== false,
        'input-group_focused': this.isFocused,
        'input-group_dirty': this.isDirty,
        'input-group_tab-focused': this.tabFocused,
        'input-group_disabled': this.disabled,
        'input-group_readonly': this.readonly,
        'input-group_error': this.hasError,
        'input-group_append-icon': this.appendIcon || this.$slots.appendIcon,
        'input-group_prepend-icon': this.prependIcon || this.$slots.prependIcon,
        'input-group_required': this.required,
        'input-group_required-slot': this.required && this.$slots.required,
        'input-group_optional': this.optional,
        'input-group_optional-slot': this.optional && this.$slots.optional,
        'input-group_hide-details': this.hideDetails,
        'input-group_placeholder': !!this.placeholder,
        'input-group_label': !!this.label || this.$slots.label,
        'input-group_static-label': (!!this.label || this.$slots.label) && this.staticLabel
      }, this.classes);
    },
    isDirty: function isDirty() {
      return !!this.inputValue;
    },
    hasDetailsContent: function hasDetailsContent() {
      return this.hint && this.isFocused || this.hint && this.persistentHint || this.validations.length || this.counter;
    },
    isDetailsHidden: function isDetailsHidden() {
      return this.hideDetails || !this.preserveDetails && !this.hasDetailsContent;
    },
    isDetailsAlwaysShowing: function isDetailsAlwaysShowing() {
      return !this.hideDetails && (this.preserveDetails || this.hint && this.persistentHint || this.counter);
    }
  },

  methods: {
    groupFocus: function groupFocus(e) {},
    groupBlur: function groupBlur(e) {
      this.tabFocused = false;
    },
    genLabel: function genLabel() {
      var children = [this.$slots.label || this.label];
      if (this.optional && this.$slots.optional) {
        children.push(this.$slots.optional);
      }
      if (this.required && this.$slots.required) {
        children.push(this.$slots.required);
      }
      return this.$createElement('label', {
        attrs: {
          for: this.$attrs.id
        }
      }, children);
    },
    genMessages: function genMessages() {
      var messages = null;

      if ((this.hint && this.isFocused || this.hint && this.persistentHint) && this.validations.length === 0) {
        messages = [this.genHint()];
      } else if (this.validations.length) {
        messages = [this.genError(this.validations[0])];
      }

      return this.$createElement('r-slide-y-transition', messages);
    },
    genHint: function genHint() {
      return this.$createElement('div', {
        'class': 'input-group__messages input-group__hint',
        domProps: { innerHTML: this.hint }
      });
    },
    genError: function genError(error) {
      return this.$createElement('div', {
        'class': 'input-group__messages input-group__error'
      }, error);
    },
    genIcon: function genIcon(type) {
      var _class;

      var defaultCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      var shouldMenuArrowHide = type === 'append' && typeof this.menu !== 'undefined' && this.menu === false;

      if (shouldMenuArrowHide) {
        return null;
      }

      var shouldClear = type === 'append' && this.clearable && this.isDirty;
      var icon = shouldClear ? 'md-close' : this[type + 'Icon'] || this.$slots[type + 'Icon'];
      var slotMode = !!this.$slots[type + 'Icon'];

      if (!icon) {
        return null;
      }
      var key = typeof icon === 'string' ? icon : type + 'Icon';
      var callback = shouldClear ? this.clearableCallback : this[type + 'IconCb'] || defaultCallback;

      var wrapTag = shouldClear ? 'r-btn' : 'span';
      var props = shouldClear ? {
        disabled: this.disabled,
        icon: true,
        ripple: true,
        flat: true,
        round: true,
        small: true
      } : {
        disabled: this.disabled
      };
      return this.$createElement(wrapTag, {
        'class': (_class = {}, _defineProperty(_class, 'input-group__' + type + '-icon', true), _defineProperty(_class, 'input-group__icon-cb', !!callback), _defineProperty(_class, 'input-group__icon-clearable', shouldClear), _class),
        attrs: {
          tabindex: '-1'
        },
        props: props,
        on: {
          click: function click(e) {
            if (!callback) {
              return;
            }
            e.stopPropagation();
            callback();
          }
        }
      }, [slotMode ? icon : this.$createElement(icon, { key: key })]);
    },

    // eslint-disable-next-line max-statements
    genInputGroup: function genInputGroup(input) {
      var _this = this;

      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var defaultAppendCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      var children = [];
      var wrapperChildren = [];
      var detailsChildren = [];

      data = Object.assign({}, {
        'class': this.inputGroupClasses,
        attrs: {
          tabindex: this.disabled ? -1 : this.internalTabIndex || this.tabindex
        },
        ref: 'inputGroup',
        on: {
          focus: this.groupFocus,
          blur: this.groupBlur,
          click: function click() {
            return _this.tabFocused = false;
          },
          keyup: function keyup(e) {
            if ([9, 16].includes(e.keyCode)) {
              _this.tabFocused = true;
            }
          },
          keydown: function keydown(e) {
            if (!_this.toggle) {
              return;
            }

            if (_this.toggleKeys.includes(e.keyCode)) {
              e.preventDefault();
              _this.toggle();
            }
          }
        }
      }, data);

      if (this.$slots.label || this.label) {
        if (!this.staticLabel) {
          children.push(this.genLabel());
        } else if (Array.isArray(input) && this.staticLabel) {
          input.push(this.genLabel());
        }
      }

      wrapperChildren.push(input);

      if (this.prependIcon || this.$slots.prependIcon) {
        wrapperChildren.unshift(this.genIcon('prepend'));
      }

      if (this.appendIcon || this.$slots.appendIcon || this.clearable) {
        wrapperChildren.push(this.genIcon('append', defaultAppendCallback));
      }

      var progress = this.genProgress();
      progress && detailsChildren.push(progress);

      children.push(this.$createElement('div', {
        'class': 'input-group__input'
      }, wrapperChildren));

      !this.hideDetails && detailsChildren.push(this.genMessages());

      if (this.counter) {
        detailsChildren.push(this.genCounter());
      }

      var detailsDirectives = [];
      if (!this.isDetailsAlwaysShowing && !this.hideDetails) {
        detailsDirectives.push({
          name: 'show',
          value: !this.isDetailsHidden
        });
      }

      var detailsContainer = this.$createElement('div', {
        'class': 'input-group__details',
        directives: detailsDirectives,
        key: 'details'
      }, detailsChildren);

      children.push(!this.preserveDetails ? this.$createElement('r-expand-transition', {
        attrs: {
          mode: 'out-in'
        }
      }, [detailsContainer]) : detailsContainer);

      // if component is RSelect we could add static container to attach menu
      // after all elements
      this.staticAttach && children.push(this.genStaticMenuContainer());

      return this.$createElement('div', data, children);
    }
  }
});

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function searchChildren(children) {
  var results = [];
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var child = _step.value;

      if (child.isActive && child.isDependent) {
        results.push(child);
      } else {
        results.push.apply(results, _toConsumableArray(searchChildren(child.$children)));
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return results;
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'dependent',

  data: function data() {
    return {
      closeDependents: true,
      isDependent: true
    };
  },


  methods: {
    getOpenDependents: function getOpenDependents() {
      if (this.closeDependents) {
        return searchChildren(this.$children);
      }

      return [];
    },
    getOpenDependentElements: function getOpenDependentElements() {
      var result = [];

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.getOpenDependents()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var dependent = _step2.value;

          result.push.apply(result, _toConsumableArray(dependent.getClickableDependentElements()));
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return result;
    },
    getClickableDependentElements: function getClickableDependentElements() {
      var result = [this.$el];
      if (this.$refs.content) {
        result.push(this.$refs.content);
      }
      result.push.apply(result, _toConsumableArray(this.getOpenDependentElements()));

      return result;
    }
  },

  watch: {
    isActive: function isActive(val) {
      if (val) {
        return;
      }

      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.getOpenDependents()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var dependent = _step3.value;

          dependent.isActive = false;
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    }
  }
});

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);


function closeConditional() {
  return false;
}

function directive(e, el, binding) {
  // Args may not always be supplied
  binding.args = binding.args || {};

  // If no closeConditional was supplied assign a default
  var isActive = binding.args.closeConditional || binding.value.closeConditional || closeConditional;

  // The include element callbacks below can be expensive
  // so we should avoid calling them when we're not active.
  // Explicitly check for false to allow fallback compatibility
  // with non-toggleable components
  if (!e || isActive(e) === false) {
    return;
  }

  // If click was triggered programmaticaly (domEl.click()) then
  // it shouldn't be treated as click-outside
  // Chrome/Firefox support isTrusted property
  // IE/Edge support pointerType property (empty if not triggered
  // by pointing device)
  if ('isTrusted' in e && !e.isTrusted || 'pointerType' in e && !e.pointerType) {
    return;
  }

  // Check if additional elements were passed to be included in check
  // (click must be outside all included elements, if any)
  var elements = (binding.args.include || binding.value.include || function () {
    return [];
  })();
  // Add the root element for the component this directive was defined on
  elements.push(el);

  var callback = binding.args.callback || binding.value.callback || binding.value;

  // Check if it's a click outside our elements, and then if our callback returns true.
  // Non-toggleable components should take action in their callback and return falsy.
  // Toggleable can return true if it wants to deactivate.
  // Note that, because we're in the capture phase, this callback will occure before
  // the bubbling click event on any outside elements.
  // !clickedInEls(e, elements) && isActive(e) && binding.value();

  !clickedInEls(e, elements) && requestAnimationFrame(function () {
    isActive(e) && callback();
  });
}

function clickedInEls(e, elements) {
  // Get position of click
  var x = e.clientX,
      y = e.clientY;
  // Loop over all included elements to see if click was in any of them

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var el = _step.value;

      if (clickedInEl(el, x, y)) {
        return true;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
}

function clickedInEl(el, x, y) {
  if (!el) {
    return;
  }
  el = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["z" /* resolveElement */])(el);
  // Get bounding rect for element
  // (we're in capturing event and we want to check for multiple elements,
  //  so can't use target.)
  var b = el.getBoundingClientRect();
  // Check if the click was in the element's bounding rect

  return x >= b.left && x <= b.right && y >= b.top && y <= b.bottom;
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'click-outside',

  // [data-app] may not be found
  // if using bind, inserted makes
  // sure that the root element is
  // available, iOS does not support
  // clicks on body
  inserted: function inserted(el, binding) {
    var onClick = function onClick(e) {
      return directive(e, el, binding);
    };
    // iOS does not recognize click events on document
    // or body, this is the entire purpose of the v-app
    // component and [data-app], stop removing this
    var app = document.querySelector('[data-app]') || document.body; // This is only for unit tests
    app.addEventListener('click', onClick, true);
    el._clickOutside = onClick;
  },
  unbind: function unbind(el) {
    var app = document.querySelector('[data-app]') || document.body; // This is only for unit tests
    app && app.removeEventListener('click', el._clickOutside, true);
    delete el._clickOutside;
  }
});

/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function inserted(el, binding) {
  var callback = typeof binding.value === 'function' ? binding.value : binding.value.callback;
  var options = binding.value.options || { passive: true };
  var target = binding.value.target || window;
  if (!callback || target === 'undefined') {
    return;
  }

  if (target !== window) {
    target = document.querySelector(target);
  }

  target.addEventListener('scroll', callback, options);

  el._onScroll = {
    callback: callback,
    options: options,
    target: target
  };
}

function unbind(el, binding) {
  var _el$_onScroll = el._onScroll,
      callback = _el$_onScroll.callback,
      options = _el$_onScroll.options,
      target = _el$_onScroll.target;


  target.removeEventListener('scroll', callback, options);
  delete el._onScroll;
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'scroll',
  inserted: inserted,
  unbind: unbind
});

/***/ }),
/* 15 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = consoleWarn;
/* harmony export (immutable) */ __webpack_exports__["a"] = consoleError;
function createMessage(message, componentInstance) {
  var componentInfo = componentInstance ? ' in "' + componentInstance.$options.name + '"' : '';
  return '[Rabotify] ' + message + componentInfo;
}

function consoleWarn(message) {
  var componentInstance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  console.warn(createMessage(message, componentInstance));
}

function consoleError(message) {
  var componentInstance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  console.error(createMessage(message, componentInstance));
}

/***/ }),
/* 16 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RLoading_vue__ = __webpack_require__(36);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(146)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RLoading_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["b"] = factory;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);


function factory() {
  var selected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  var props = {
    absolute: Boolean,
    bottom: Boolean,
    fixed: Boolean,
    left: Boolean,
    right: Boolean,
    top: Boolean
  };

  return {
    name: 'positionable',
    props: selected.length ? Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["k" /* filterObjectOnKeys */])(props, selected) : props
  };
}

/* harmony default export */ __webpack_exports__["a"] = (factory());

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_ripple__ = __webpack_require__(20);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_helpers__ = __webpack_require__(1);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




/* harmony default export */ __webpack_exports__["a"] = ({
  directives: {
    Ripple: __WEBPACK_IMPORTED_MODULE_0__directives_ripple__["a" /* default */]
  },

  props: {
    activeClass: String,
    append: Boolean,
    disabled: Boolean,
    exact: Boolean,
    exactActiveClass: String,
    href: [String, Object],
    to: [String, Object],
    nuxt: Boolean,
    replace: Boolean,
    ripple: [Boolean, Object],
    tag: String,
    target: String
  },

  methods: {
    click: function click() {},
    generateRouteLink: function generateRouteLink() {
      var exact = this.exact;
      var tag = void 0;

      var data = _defineProperty({
        attrs: { disabled: this.disabled },
        class: this.classes,
        props: {},
        directives: [{
          name: 'ripple',
          value: this.ripple && !this.disabled ? this.ripple : false
        }]
      }, this.to ? 'nativeOn' : 'on', _extends({}, this.$listeners || {}, {
        click: this.click
      }));

      var defaultSlot = this.$slots.default;
      data.attrs['aria-label'] = Object(__WEBPACK_IMPORTED_MODULE_1__util_helpers__["j" /* extractVNodeText */])(defaultSlot, true).trim() || 'uniqlabel';

      if (typeof this.exact === 'undefined') {
        exact = this.to === '/' || this.to === Object(this.to) && this.to.path === '/';
      }

      if (this.to) {
        // Add a special activeClass hook
        // for component level styles
        var activeClass = this.activeClass;
        var exactActiveClass = this.exactActiveClass || activeClass;

        if (this.proxyClass) {
          activeClass += ' ' + this.proxyClass;
          exactActiveClass += ' ' + this.proxyClass;
        }

        tag = this.nuxt ? 'nuxt-link' : 'router-link';
        Object.assign(data.props, {
          to: this.to,
          exact: exact,
          activeClass: activeClass,
          exactActiveClass: exactActiveClass,
          append: this.append,
          replace: this.replace
        });
      } else {
        tag = this.href && 'a' || this.tag || 'a';

        if (tag === 'a') {
          if (this.href) {
            data.attrs.href = this.href;
          }
          if (this.target) {
            data.attrs.target = this.target;
          }
        }
      }

      return { tag: tag, data: data };
    }
  }
});

/***/ }),
/* 19 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCard_vue__ = __webpack_require__(51);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(182)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCard_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function style(el, value) {
  el.style['transform'] = value;
  el.style['webkitTransform'] = value;
}

var RippleDataAttribute = 'data-ripple';

var ripple = {
  /**
   * @param {Event} e
   * @param {Element} el
   * @param {{ class?: string, center?: boolean }} [value={}]
   */
  // eslint-disable-next-line max-statements
  show: function show(e, el, _ref) {
    var _ref$value = _ref.value,
        value = _ref$value === undefined ? {} : _ref$value;

    if (el.getAttribute(RippleDataAttribute) !== 'true') {
      return;
    }
    var container = document.createElement('span');
    var animation = document.createElement('span');

    container.appendChild(animation);
    container.className = 'ripple__container';

    if (value.class) {
      container.className += ' ' + value.class;
    }

    if (value.style && _typeof(value.style) === 'object') {
      Object.assign(container.style, value.style);
    }

    var size = el.clientWidth > el.clientHeight ? el.clientWidth : el.clientHeight;
    animation.className = 'ripple__animation';
    animation.style.width = size * (value.center ? 1 : 2) + 'px';
    animation.style.height = animation.style.width;

    if (typeof value.alpha !== 'undefined') {
      animation.style.opacity = value.alpha;
    }

    el.appendChild(container);
    var computed = window.getComputedStyle(el);
    if (computed.position !== 'absolute' && computed.position !== 'fixed') {
      el.style.position = 'relative';
    }

    var offset = el.getBoundingClientRect();
    var x = value.center ? '50%' : e.clientX - offset.left + 'px';
    var y = value.center ? '50%' : e.clientY - offset.top + 'px';

    animation.classList.add('ripple__animation_enter');
    animation.classList.add('ripple__animation_visible');
    style(animation, 'translate(-50%, -50%) translate(' + x + ', ' + y + ') scale3d(0.01,0.01,0.01)');
    animation.dataset.activated = Date.now();

    setTimeout(function () {
      animation.classList.remove('ripple__animation_enter');
      style(animation, 'translate(-50%, -50%) translate(' + x + ', ' + y + ')  scale3d(0.99,0.99,0.99)');
    }, 0);
  },

  hide: function hide(el) {
    if (el.getAttribute(RippleDataAttribute) !== 'true') {
      return;
    }

    var ripples = el.getElementsByClassName('ripple__animation');

    if (ripples.length === 0) {
      return;
    }
    var animation = ripples[ripples.length - 1];
    var diff = Date.now() - Number(animation.dataset.activated);
    var delay = 400 - diff;

    delay = delay < 0 ? 0 : delay;

    setTimeout(function () {
      animation.classList.remove('ripple__animation_visible');

      setTimeout(function () {
        // Need to figure out a new way to do this
        try {
          if (ripples.length < 1) {
            el.style.position = null;
          }
          animation.parentNode && el.removeChild(animation.parentNode);
        } catch (e) {}
      }, 300);
    }, delay);
  }
};

function isRippleEnabled(binding) {
  return typeof binding.value === 'undefined' || !!binding.value;
}

function directive(el, binding) {
  el.setAttribute(RippleDataAttribute, isRippleEnabled(binding));

  if ('ontouchstart' in window) {
    el.addEventListener('touchend', function () {
      return ripple.hide(el);
    }, false);
    el.addEventListener('touchcancel', function () {
      return ripple.hide(el);
    }, false);
  }

  el.addEventListener('mousedown', function (e) {
    return ripple.show(e, el, binding);
  }, false);
  el.addEventListener('mouseup', function () {
    return ripple.hide(el);
  }, false);
  el.addEventListener('mouseleave', function () {
    return ripple.hide(el);
  }, false);
  // Anchor tags can be dragged, causes other hides to fail - #1537
  el.addEventListener('dragstart', function () {
    return ripple.hide(el);
  }, false);
}

function unbind(el, binding) {
  el.removeEventListener('touchstart', function (e) {
    return ripple.show(e, el, binding);
  }, false);
  el.removeEventListener('mousedown', function (e) {
    return ripple.show(e, el, binding);
  }, false);
  el.removeEventListener('touchend', function () {
    return ripple.hide(el);
  }, false);
  el.removeEventListener('touchcancel', function () {
    return ripple.hide(el);
  }, false);
  el.removeEventListener('mouseup', function () {
    return ripple.hide(el);
  }, false);
  el.removeEventListener('mouseleave', function () {
    return ripple.hide(el);
  }, false);
  el.removeEventListener('dragstart', function () {
    return ripple.hide(el);
  }, false);
}

function update(el, binding) {
  if (binding.value === binding.oldValue) {
    return;
  }

  el.setAttribute(RippleDataAttribute, isRippleEnabled(binding));
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'ripple',
  bind: directive,
  unbind: unbind,
  update: update
});

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = function (module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function () {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function get() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function get() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};

/***/ }),
/* 22 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var g;

// This works in non-strict mode
g = function () {
	return this;
}();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardActions_vue__ = __webpack_require__(54);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardActions_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 24 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardText_vue__ = __webpack_require__(55);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardText_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_console__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bootable__ = __webpack_require__(26);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };





function validateAttachTarget(val) {
  var type = typeof val === 'undefined' ? 'undefined' : _typeof(val);

  if (type === 'boolean' || type === 'string') {
    return true;
  }

  return val.nodeType === Node.ELEMENT_NODE;
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'detachable',

  mixins: [__WEBPACK_IMPORTED_MODULE_1__bootable__["a" /* default */]],

  props: {
    attach: {
      type: [Boolean, String, Object],
      default: false,
      validator: validateAttachTarget
    },
    contentClass: {
      type: String,
      default: ''
    }
  },

  mounted: function mounted() {
    this.initDetach();
  },
  beforeDestroy: function beforeDestroy() {
    if (!this.$refs.content) {
      return;
    }

    // IE11 Fix
    try {
      this.$refs.content.parentNode.removeChild(this.$refs.content);
    } catch (e) {}
  },


  methods: {
    initDetach: function initDetach() {
      if (this._isDestroyed || !this.$refs.content ||
      // Leave menu in place if attached
      // and dev has not changed target
      this.attach === '' || // If used as a boolean prop (<r-menu attach>)
      this.attach === true || // If bound to a boolean (<r-menu :attach="true">)
      this.attach === 'attach' // If bound as boolean prop in pug (r-menu(attach))
      ) {
          return;
        }

      var target = void 0;
      if (this.attach === false) {
        // Default, detach to app
        target = document.querySelector('[data-app]');
      } else if (typeof this.attach === 'string') {
        // CSS selector
        target = document.querySelector(this.attach);
      } else {
        // DOM Element
        target = this.attach;
      }

      if (!target) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__util_console__["b" /* consoleWarn */])('Unable to locate target ' + (this.attach || '[data-app]'));
      }

      target.insertBefore(this.$refs.content, target.firstChild);
    }
  }
});

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Bootable
 * @mixin
 *
 * Used to add lazy content functionality to components
 * Looks for change in "isActive" to automatically boot
 * Otherwise can be set manually
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'bootable',

  data: function data() {
    return {
      isBooted: false
    };
  },

  props: {
    lazy: Boolean
  },

  watch: {
    isActive: function isActive() {
      this.isBooted = true;
    }
  },

  methods: {
    showLazyContent: function showLazyContent(content) {
      return this.isBooted || !this.lazy || this.isActive ? content : null;
    }
  }
});

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialogHeader_vue__ = __webpack_require__(64);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(195)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialogHeader_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RMenu_vue__ = __webpack_require__(70);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(208)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RMenu_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);


/**
 * SSRBootable
 *
 * @mixin
 *
 * Used in layout components (toolbar, content)
 * to avoid an entry animation when using SSR
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    return {
      isBooted: false
    };
  },

  mounted: function mounted() {
    var _this = this;

    var shouldRunImmediately = !Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["x" /* isServer */])();
    var noopFn = this.$nextTick.bind(this);
    var lazyFn = shouldRunImmediately ? noopFn : requestAnimationFrame;

    lazyFn(function () {
      // Use setAttribute instead of dataset
      // because dataset does not work well
      // with unit tests
      _this.$el.setAttribute('data-booted', true);
      _this.isBooted = true;
    });
  }
});

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = Grid;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);


function Grid(name) {
  return {
    name: 'r-' + name,

    functional: true,

    props: {
      id: String,
      tag: {
        type: String,
        default: 'div'
      }
    },

    render: function render(h, _ref) {
      var props = _ref.props,
          data = _ref.data,
          children = _ref.children;

      data.staticClass = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])(name + ' ' + (data.staticClass || ''));

      if (data.attrs) {
        var classes = Object.keys(data.attrs).filter(function (key) {
          var value = data.attrs[key];
          return value || typeof value === 'string';
        });

        if (classes.length) {
          data.staticClass = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])(data.staticClass + (' ' + classes.join(' ')));
        }
        delete data.attrs;
      }

      if (props.id) {
        data.domProps = data.domProps || {};
        data.domProps.id = props.id;
      }

      return h(props.tag, data, children);
    }
  };
}

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__retry_operation__ = __webpack_require__(124);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__retry_operation__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__retry_operation_cached__ = __webpack_require__(274);
/* unused harmony namespace reexport */



/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MapManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rabota_loader__ = __webpack_require__(123);
var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var MapManager = function () {

  /**
   * @type {string}
   * @private
   */


  /**
   * @type {Array}
   * @private
   */


  /**
   * @type {boolean}
   * @private
   */
  function MapManager() {
    _classCallCheck(this, MapManager);

    this._currentId = 1;
    this._sdkLoaded = false;
    this._sdkLoading = false;
    this._queue = [];
    this._resourceLoader = null;
    this._apiKey = null;
    this._defaultCenterPoint = [55.76, 37.64];

    this._resourceLoader = new __WEBPACK_IMPORTED_MODULE_0__rabota_loader__["b" /* ScriptLoader */]();
  }

  /**
   * @return {Promise<*>}
   */


  /**
   * @type {number[]}
   * @private
   */


  /**
   * @type {ScriptLoader}
   * @private
   */


  /**
   * @type {boolean}
   * @private
   */


  /**
   * @type {number}
   * @private
   */


  _createClass(MapManager, [{
    key: 'loadSdk',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(sdkUrl) {
        var _this = this;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!this._sdkLoaded) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt('return', this.sdk);

              case 4:
                if (!this._sdkLoading) {
                  _context.next = 6;
                  break;
                }

                return _context.abrupt('return', this._enqueue());

              case 6:

                this._sdkLoading = true;

                return _context.abrupt('return', this._loadResource(sdkUrl).then(function (resource) {
                  return _this.onSdkReady();
                }).then(function (_) {
                  var sdk = _this.sdk;

                  _this._sdkLoaded = true;
                  _this._sdkLoading = false;

                  _this._flushQueue(sdk);

                  return sdk;
                }).catch(function (error) {
                  _this._flushQueue(null, error);

                  throw error; // pass next
                }));

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function loadSdk(_x) {
        return _ref.apply(this, arguments);
      }

      return loadSdk;
    }()

    /**
     * Abstract method for sdk ready
     *
     * @abstract
     * @return {Promise<void>}
     */

  }, {
    key: 'onSdkReady',
    value: function onSdkReady() {
      console.error('Not implemented');
    }

    /**
     * @param {string} domId
     * @param {*} options
     */

  }, {
    key: 'createMap',
    value: function createMap(domId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {Array<Array<number>>} points
     */

  }, {
    key: 'createPlacemarks',
    value: function createPlacemarks(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      console.error('Not implemented');
    }

    /**
     * Remove all placemarks on the map
     *
     * @param {*} map
     */

  }, {
    key: 'clearPlacemarks',
    value: function clearPlacemarks(map) {
      console.error('Not implemented');
    }

    /**
     * Updates map within viewport
     *
     * @param {*} map
     */

  }, {
    key: 'fitToViewport',
    value: function fitToViewport(map) {
      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {string[]} controls
     */

  }, {
    key: 'setControls',
    value: function setControls(map) {
      var controls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      console.error('Not implemented');
    }

    /**
     * Clears all controls on the map
     *
     * @param {*} map
     */

  }, {
    key: 'clearControls',
    value: function clearControls(map) {
      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {number[]} center
     * @param {number} zoom
     */

  }, {
    key: 'setCenterAndZoom',
    value: function setCenterAndZoom(map, center, zoom) {
      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {number[][]} points
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'updateOptimalCenterAndZoom',
    value: function updateOptimalCenterAndZoom(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {Function} cb
     */

  }, {
    key: 'addPointEventListener',
    value: function addPointEventListener(map) {
      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

      console.error('Not implemented');
    }

    /**
     * @param {*} map
     */

  }, {
    key: 'removePointEventListener',
    value: function removePointEventListener(map) {
      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {string} query
     * @param {number} limit
     * @return {Promise<*>}
     */

  }, {
    key: 'searchQuery',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(map) {
        var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

        var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
            limit = _ref3.limit;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                console.error('Not implemented');

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function searchQuery(_x7) {
        return _ref2.apply(this, arguments);
      }

      return searchQuery;
    }()

    /**
     * Destroy the map
     *
     * @param {*} map
     */

  }, {
    key: 'destroy',
    value: function destroy(map) {
      console.error('Not implemented');
    }

    /**
     * @param {*} map
     * @param {Array<number>} point
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'resolveAddressByPoint',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(map, point) {
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                console.error('Not implemented');

              case 1:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function resolveAddressByPoint(_x10, _x11) {
        return _ref4.apply(this, arguments);
      }

      return resolveAddressByPoint;
    }()

    /**
     * @param {string[]} controls
     * @return {string[]}
     */

  }, {
    key: 'resolveControls',
    value: function resolveControls() {
      var controls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var mapping = this.controlsMapping;

      return controls.map(function (control) {
        return mapping[control];
      }).filter(function (resolved) {
        return !!resolved;
      }).reduce(function (unique, value) {
        return unique.includes(value) ? unique : unique.concat(value);
      }, []);
    }

    /**
     * @param {number[]|any[]} points
     * @return {number[][]}
     */

  }, {
    key: 'toNativePoints',
    value: function toNativePoints() {
      var _this2 = this;

      var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      return points.map(function (point) {
        return _this2.toNativePoint(point);
      });
    }

    /**
     * @param {*|number[]} point
     * @return {number[]}
     */

  }, {
    key: 'toNativePoint',
    value: function toNativePoint(point) {
      return Array.isArray(point) ? point : point.point;
    }

    /**
     * @param {*} geoObject
     * @param {number[]|*} originPoint
     * @return {{point: number[], name: string, adressLine: string, locality: string, debugProperties: *}}
     */

  }, {
    key: 'extractGeoObjectData',
    value: function extractGeoObjectData(geoObject) {
      var originPoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      return geoObject;
    }

    /**
     * @param {string} apiKey
     */

  }, {
    key: 'setApiKey',
    value: function setApiKey(apiKey) {
      this._apiKey = apiKey;
    }

    /**
     * @return {number}
     */

  }, {
    key: '_loadResource',


    /**
     * @param url
     * @return {Promise<any>}
     * @private
     */
    value: function () {
      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(url) {
        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                if (!(typeof window === 'undefined')) {
                  _context4.next = 2;
                  break;
                }

                return _context4.abrupt('return');

              case 2:
                return _context4.abrupt('return', this._resourceLoader.retry(url, 20));

              case 3:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function _loadResource(_x15) {
        return _ref5.apply(this, arguments);
      }

      return _loadResource;
    }()

    /**
     * @return {Promise<any>}
     * @private
     */

  }, {
    key: '_enqueue',
    value: function _enqueue() {
      var _this3 = this;

      return new Promise(function (resolve, reject) {
        _this3._queue.push([resolve, reject]);
      });
    }

    /**
     * @private
     */

  }, {
    key: '_flushQueue',
    value: function _flushQueue(resolved, rejected) {
      this._queue.forEach(function (_ref6) {
        var _ref7 = _slicedToArray(_ref6, 2),
            resolve = _ref7[0],
            reject = _ref7[1];

        if (resolved) {
          resolve(resolved);
        } else if (rejected) {
          reject(rejected);
        } else {
          resolve();
        }
      });

      this._queue = [];
    }
  }, {
    key: 'nextId',
    get: function get() {
      return this._currentId++;
    }

    /**
     * @returns {string}
     */

  }, {
    key: 'apiKey',
    get: function get() {
      return this._apiKey;
    }

    /**
     * @return {*}
     */

  }, {
    key: 'controlsMapping',
    get: function get() {
      return {};
    }

    /**
     * @return {string}
     */

  }, {
    key: 'nextDomId',
    get: function get() {
      return this.sdkObjectName + '-' + this.nextId;
    }

    /**
     * @return {boolean}
     */

  }, {
    key: 'sdkLoaded',
    get: function get() {
      return this._sdkLoaded;
    }

    /**
     * @return {*}
     */

  }, {
    key: 'sdk',
    get: function get() {
      return window && window[this.sdkObjectName];
    }

    /**
     * @abstract
     * @return {string}
     */

  }, {
    key: 'sdkObjectName',
    get: function get() {
      throw new Error('Sdk name not implemented');
    }

    /**
     * @return {number[]}
     */

  }, {
    key: 'defaultCenterPoint',
    get: function get() {
      return this._defaultCenterPoint;
    }
  }]);

  return MapManager;
}();

/***/ }),
/* 33 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function directive(e, el, binding, v) {
  // Args may not always be supplied
  binding.args = binding.args || {};

  var isActive = binding.args.closeConditional || binding.value.closeConditional || function () {
    return v.context.isActive;
  };

  // The element callbacks below can be expensive
  // so we should avoid calling them when we're not active.
  // Explicitly check for false to allow fallback compatibility
  // with non-toggleable components
  if (!e || isActive(e) === false) {
    return;
  }

  var callback = binding.args.callback || binding.value.callback || binding.value;

  // Delay setting toggleable inactive to avoid conflicting
  // with an outside click on any activator toggling our state.
  requestAnimationFrame(function () {
    return callback();
  });
}

function inserted(el, binding, v) {
  var onKeyDown = function onKeyDown(e) {
    return directive(e, el, binding, v);
  };
  window.addEventListener('keydown', onKeyDown);
  el._onKeyDownEvent = onKeyDown;
}

function unbind(el, binding) {
  window.removeEventListener('keydown', el._onKeyDownEvent);
}

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'keydown-toggle',
  inserted: inserted,
  unbind: unbind
});

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Rabotify__ = __webpack_require__(136);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Rabotify", function() { return __WEBPACK_IMPORTED_MODULE_0__Rabotify__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RApp__ = __webpack_require__(140);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RApp", function() { return __WEBPACK_IMPORTED_MODULE_1__RApp__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RLoading__ = __webpack_require__(145);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RLoading", function() { return __WEBPACK_IMPORTED_MODULE_2__RLoading__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RBtn__ = __webpack_require__(147);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RBtn", function() { return __WEBPACK_IMPORTED_MODULE_3__RBtn__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RBtnToggle__ = __webpack_require__(149);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RBtnToggle", function() { return __WEBPACK_IMPORTED_MODULE_4__RBtnToggle__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RCheckbox__ = __webpack_require__(153);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RCheckbox", function() { return __WEBPACK_IMPORTED_MODULE_5__RCheckbox__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__RSwitch__ = __webpack_require__(158);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RSwitch", function() { return __WEBPACK_IMPORTED_MODULE_6__RSwitch__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__RTextField__ = __webpack_require__(161);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RTextField", function() { return __WEBPACK_IMPORTED_MODULE_7__RTextField__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__RRadioGroup__ = __webpack_require__(166);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RRadioGroup", function() { return __WEBPACK_IMPORTED_MODULE_8__RRadioGroup__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__RForm__ = __webpack_require__(172);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RForm", function() { return __WEBPACK_IMPORTED_MODULE_9__RForm__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__RFormGroup__ = __webpack_require__(174);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RFormGroup", function() { return __WEBPACK_IMPORTED_MODULE_10__RFormGroup__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__RFormFieldError__ = __webpack_require__(178);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RFormFieldError", function() { return __WEBPACK_IMPORTED_MODULE_11__RFormFieldError__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__RCard__ = __webpack_require__(181);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RCard", function() { return __WEBPACK_IMPORTED_MODULE_12__RCard__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__RToolbar__ = __webpack_require__(185);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RToolbar", function() { return __WEBPACK_IMPORTED_MODULE_13__RToolbar__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__RDialog__ = __webpack_require__(190);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RDialog", function() { return __WEBPACK_IMPORTED_MODULE_14__RDialog__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__RDialogCard__ = __webpack_require__(197);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RDialogCard", function() { return __WEBPACK_IMPORTED_MODULE_15__RDialogCard__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__RBottomSheet__ = __webpack_require__(201);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RBottomSheet", function() { return __WEBPACK_IMPORTED_MODULE_16__RBottomSheet__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__RSelect__ = __webpack_require__(204);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RSelect", function() { return __WEBPACK_IMPORTED_MODULE_17__RSelect__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__RSuggester__ = __webpack_require__(227);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RSuggester", function() { return __WEBPACK_IMPORTED_MODULE_18__RSuggester__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__RChip__ = __webpack_require__(237);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RChip", function() { return __WEBPACK_IMPORTED_MODULE_19__RChip__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__RMenu__ = __webpack_require__(238);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RMenu", function() { return __WEBPACK_IMPORTED_MODULE_20__RMenu__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__RList__ = __webpack_require__(92);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RList", function() { return __WEBPACK_IMPORTED_MODULE_21__RList__["d"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__RSubheader__ = __webpack_require__(239);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RSubheader", function() { return __WEBPACK_IMPORTED_MODULE_22__RSubheader__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__RDivider__ = __webpack_require__(240);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RDivider", function() { return __WEBPACK_IMPORTED_MODULE_23__RDivider__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__RVirtualScroller__ = __webpack_require__(241);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RVirtualScroller", function() { return __WEBPACK_IMPORTED_MODULE_24__RVirtualScroller__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__RInfinityScroll__ = __webpack_require__(242);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RInfinityScroll", function() { return __WEBPACK_IMPORTED_MODULE_25__RInfinityScroll__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__RTabs__ = __webpack_require__(245);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RTabs", function() { return __WEBPACK_IMPORTED_MODULE_26__RTabs__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__RSmartRender__ = __webpack_require__(255);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RSmartRender", function() { return __WEBPACK_IMPORTED_MODULE_27__RSmartRender__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__RTooltip__ = __webpack_require__(257);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RTooltip", function() { return __WEBPACK_IMPORTED_MODULE_28__RTooltip__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__RGrid__ = __webpack_require__(260);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RGrid", function() { return __WEBPACK_IMPORTED_MODULE_29__RGrid__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__RImage__ = __webpack_require__(266);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RImage", function() { return __WEBPACK_IMPORTED_MODULE_30__RImage__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__RToast__ = __webpack_require__(279);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RToast", function() { return __WEBPACK_IMPORTED_MODULE_31__RToast__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__transitions__ = __webpack_require__(7);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Transitions", function() { return __WEBPACK_IMPORTED_MODULE_32__transitions__["f"]; });


































/***/ }),
/* 35 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_app_breakpoint__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_resize__ = __webpack_require__(8);

// Component level mixins


// Directives


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-app',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_app_breakpoint__["a" /* default */]],

  directives: {
    Resize: __WEBPACK_IMPORTED_MODULE_1__directives_resize__["a" /* default */]
  },

  props: {
    id: {
      type: String,
      default: 'app'
    }
  }
});

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_positionable__ = __webpack_require__(17);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




/**
 * @see https://loading.io/spinner/custom/90276/
 */

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-loading',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_positionable__["a" /* default */]],
  props: {
    large: Boolean,
    small: Boolean,
    disabled: Boolean,
    colorful: Boolean,
    tilesNumber: {
      type: [String, Number],
      default: 3
    },
    line: Boolean,
    lineHeight: {
      type: Number,
      default: 3
    },
    progress: {
      type: Number,
      default: 0
    },
    lineColor: {
      type: String,
      default: 'primary'
    },
    lineBackground: {
      type: String,
      default: 'transparent'
    },
    lineRound: Boolean,
    lineShadow: Boolean
  },

  computed: {
    classes: function classes() {
      var classes = {
        'loading': true,
        'loading_disabled': this.disabled,
        'loading_large': this.large,
        'loading_small': this.small,
        'loading_colorful': this.colorful
      };

      if (this.line) {
        classes = {
          'loading': true,
          'loading_disabled': this.disabled,
          'loading_line': this.line,
          'loading_round-line': this.lineRound,
          'loading_shadow-line': this.lineShadow
        };
      }

      return this.addBackgroundColorClassChecks(classes);
    },
    tiles: function tiles() {
      return Number(this.tilesNumber) || 3;
    }
  },

  render: function render(h) {
    var data = {
      class: this.classes
    };
    var children = [];

    if (!this.line) {
      var tiles = this.tiles;
      while (tiles--) {
        children.push(h('div', {
          staticClass: 'loading__circle'
        }));
      }
    } else {
      data.style = {
        background: this.lineBackground,
        height: this.lineHeight + 'px'
      };
      children.push(h('div', {
        staticClass: 'loading__line',
        class: _defineProperty({}, this.lineColor, true),
        style: {
          width: this.progress + '%'
        }
      }));
    }

    return h('div', data, children);
  }
});

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RLoading_RLoading_vue__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_positionable__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_routable__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_registrable__ = __webpack_require__(3);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };











/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-btn',

  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_routable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_positionable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__["a" /* default */], Object(__WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__["b" /* factory */])('inputValue'), Object(__WEBPACK_IMPORTED_MODULE_6__mixins_registrable__["a" /* inject */])('buttonGroup')],

  components: {
    RLoading: __WEBPACK_IMPORTED_MODULE_0__RLoading_RLoading_vue__["a" /* default */]
  },

  props: {
    activeClass: {
      type: String,
      default: 'r-btn_active'
    },
    block: Boolean,
    fullWidth: Boolean,
    fab: Boolean,
    flat: Boolean,
    link: Boolean,
    icon: Boolean,
    large: Boolean,
    loading: Boolean,
    outline: Boolean,
    round: Boolean,
    shadowed: Boolean,
    small: Boolean,
    reset: Boolean,
    ripple: {
      type: [Boolean, Object],
      default: false
    },
    tag: {
      type: String,
      default: 'button'
    },
    type: {
      type: String,
      default: 'button'
    },
    value: null
  },

  computed: {
    classes: function classes() {
      var colorBackground = !this.outline && !this.flat;
      var colorText = !this.disabled && !colorBackground;

      var classes = {
        'r-btn': true,
        'r-btn_absolute': this.absolute,
        'r-btn_block': this.block,
        'r-btn_full-width': this.fullWidth,
        'r-btn_bottom': this.bottom,
        'r-btn_disabled': this.disabled,
        'r-btn_flat': this.flat,
        'r-btn_link': this.link,
        'r-btn_floating': this.fab,
        'r-btn_fixed': this.fixed,
        'r-btn_hover': this.hover,
        'r-btn_icon': this.icon,
        'r-btn_left': this.left,
        'r-btn_top': this.top,
        'r-btn_loading': this.loading,
        'r-btn_outline': this.outline,
        'r-btn_reset': this.reset,
        'r-btn_right': this.right,
        'r-btn_round': this.round,
        'r-btn_router': this.to,
        'r-btn_shadowed': this.shadowed && !this.flat,
        'r-btn_small': this.small,
        'r-btn_medium': !(this.small || this.large),
        'r-btn_large': this.large
      };

      if (!this.color) {
        Object.assign(classes, {
          'primary': this.primary && colorBackground,
          'secondary': this.secondary && colorBackground,
          'text_primary': this.primary && colorText,
          'text_secondary': this.secondary && colorText
        });
      }

      classes[this.activeClass] = this.isActive;

      return colorBackground ? this.addBackgroundColorClassChecks(classes) : this.addTextColorClassChecks(classes);
    },
    isTypeFile: function isTypeFile() {
      return this.type && this.type === 'file';
    }
  },

  methods: {
    // Prevent focus to match md spec
    click: function click(e) {
      !this.fab && e.detail && this.$el.blur();

      this.$emit('click', e);
    },
    genButton: function genButton() {
      var _this = this;

      var _generateRouteLink = this.generateRouteLink(),
          tag = _generateRouteLink.tag,
          data = _generateRouteLink.data;

      var children = [this.genContent()];
      var type = this.isTypeFile ? 'button' : this.type;

      tag === 'button' && (data.attrs.type = type);
      this.loading && children.unshift(this.genLoader());

      data.attrs.value = ['string', 'number'].includes(_typeof(this.value)) ? this.value : JSON.stringify(this.value);

      if (this.isTypeFile) {
        data.on.click = function (_) {
          return _this.$refs.input.click();
        };
      }

      return this.$createElement(tag, data, children);
    },
    genContent: function genContent() {
      var children = [this.$slots.default];
      return this.$createElement('div', { 'class': 'r-btn__content' }, children);
    },
    genInput: function genInput() {
      var _this2 = this;

      return this.$createElement('input', {
        ref: 'input',
        attrs: {
          type: 'file',
          hidden: true
        },
        on: {
          change: function change(event) {
            return _this2.$emit('change', event);
          }
        }
      });
    },
    genFileLoader: function genFileLoader() {
      return this.$createElement('div', [this.genInput(), this.genButton()]);
    },
    genLoader: function genLoader() {
      var children = [];

      if (!this.$slots.loader) {
        children.push(this.$createElement('r-loading', {
          props: {
            large: this.large,
            small: this.small,
            colorful: this.disabled || this.outline || !this.color || this.color === 'white'
          }
        }));
      } else {
        children.push(this.$slots.loader);
      }

      return this.$createElement('span', {
        'class': 'r-btn__loading'
      }, children);
    }
  },

  mounted: function mounted() {
    if (this.buttonGroup) {
      this.buttonGroup.register(this);
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.buttonGroup) {
      this.buttonGroup.unregister(this);
    }
  },
  render: function render() {
    return this.isTypeFile ? this.genFileLoader() : this.genButton();
  }
});

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_button_group__ = __webpack_require__(152);



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-btn-toggle',

  model: {
    prop: 'inputValue',
    event: 'change'
  },

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_button_group__["a" /* default */]],

  props: {
    inputValue: {
      required: false
    },
    mandatory: Boolean,
    multiple: Boolean,
    autofit: Boolean,
    buttonWidth: String
  },

  computed: {
    classes: function classes() {
      return {
        'r-btn-toggle': true,
        'r-btn-toggle_selected': this.hasValue,
        'r-btn-toggle_autofit': this.autofit && !this.buttonWidth
      };
    },
    hasValue: function hasValue() {
      return this.multiple && this.inputValue.length || !this.multiple && this.inputValue !== null && typeof this.inputValue !== 'undefined';
    }
  },

  watch: {
    inputValue: {
      handler: function handler() {
        this.update();
      },

      deep: true
    }
  },

  methods: {
    isSelected: function isSelected(i) {
      var item = this.getValue(i);
      if (!this.multiple) {
        return this.inputValue === item;
      }

      return this.inputValue.includes(item);
    },
    updateValue: function updateValue(i) {
      var item = this.getValue(i);
      if (!this.multiple) {
        if (this.mandatory && this.inputValue === item) return;
        return this.$emit('change', this.inputValue === item ? null : item);
      }

      var items = this.inputValue.slice();

      var index = items.indexOf(item);
      if (index > -1) {
        if (this.mandatory && items.length === 1) return;
        items.length >= 1 && items.splice(index, 1);
      } else {
        items.push(item);
      }

      this.$emit('change', items);
    }
  },

  render: function render(h) {
    return h('div', {
      class: this.classes
    }, this.$slots.default);
  }
});

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCheckbox_vue__ = __webpack_require__(40);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(154)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCheckbox_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 40 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_navigation_MdClose_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transitions__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_selectable__ = __webpack_require__(42);

/** Icons */


/** Transitions */


/** Mixins */



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-checkbox',

  components: {
    RFadeTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__["b" /* RFadeTransition */],
    MdClose: __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_navigation_MdClose_vue__["default"]
  },

  mixins: [__WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_selectable__["a" /* default */]],

  data: function data() {
    return {
      inputIndeterminate: this.indeterminate,
      indeterminatePath: 'M1.73,12.91 22.79,12.91',
      activePath: 'M1.73,12.91 8.1,19.28 22.79,4.59'
    };
  },


  props: {
    indeterminate: Boolean,
    small: Boolean,
    large: Boolean,
    bold: Boolean
  },

  computed: {
    classes: function classes() {
      var classes = {
        'checkbox': true,
        'checkbox_small': this.small,
        'checkbox_large': this.large,
        'checkbox_bold': this.bold,
        'checkbox_indeterminate': this.indeterminate,
        'input-group_selection-controls': true,
        'input-group_active': this.isActive
      };

      if (this.hasError) {
        classes['text_error'] = true;
      } else {
        return this.addTextColorClassChecks(classes);
      }

      return classes;
    },
    iconKey: function iconKey() {
      if (this.isActive || this.inputIndeterminate) {
        return 'checkbox-checked';
      } else {
        return 'checkbox-unchecked';
      }
    },
    path: function path() {
      if (this.inputIndeterminate) {
        return this.indeterminatePath;
      } else if (this.isActive) {
        return this.activePath;
      } else {
        return this.activePath;
      }
    }
  },
  methods: {
    groupFocus: function groupFocus(e) {
      this.isFocused = true;
      this.$emit('focus', e);
    },
    groupBlur: function groupBlur(e) {
      this.isFocused = false;
      this.tabFocused = false;
      this.$emit('blur', this.inputValue);
    },
    genIcon: function genIcon() {
      return this.$createElement('svg', {
        'class': {
          'icon': true,
          'md-icon': true
        },
        attrs: {
          viewBox: '0 0 24 24'
        }
      }, [this.$createElement('path', {
        attrs: {
          d: this.path,
          stroke: 'white',
          fill: 'none'
        }
      })]);
    },
    genCheckbox: function genCheckbox(icon) {
      return this.$createElement('span', {
        staticClass: 'checkbox__content',
        key: this.iconKey,
        on: Object.assign({
          click: this.toggle
        }, this.$listeners)
      }, [icon]);
    }
  },

  render: function render(h) {
    var icon = this.genIcon();
    var checkbox = this.genCheckbox(icon);
    var transition = h('transition', {
      props: {
        name: 'checkbox-transition',
        mode: 'out-in'
      }
    }, [checkbox]);

    var data = {
      attrs: {
        tabindex: this.disabled ? -1 : this.internalTabIndex || this.tabindex,
        role: 'checkbox',
        'aria-checked': this.inputIndeterminate && 'mixed' || this.isActive && 'true' || 'false',
        'aria-label': this.label
      }
    };

    var ripple = this.ripple ? this.genRipple() : null;

    return this.genInputGroup([transition, ripple], data);
  }
});

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-close',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-close:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-close',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 42 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__input__ = __webpack_require__(11);



/* harmony default export */ __webpack_exports__["a"] = ({
  mixins: [__WEBPACK_IMPORTED_MODULE_1__input__["a" /* default */], __WEBPACK_IMPORTED_MODULE_0__colorable__["a" /* default */]],

  model: {
    prop: 'inputValue',
    event: 'change'
  },

  data: function data() {
    return {
      defaultColor: 'primary'
    };
  },

  props: {
    id: String,
    inputValue: null,
    falseValue: null,
    trueValue: null
  },

  computed: {
    isActive: function isActive() {
      if (Array.isArray(this.inputValue)) {
        return this.inputValue.indexOf(this.value) !== -1;
      }

      if (!this.trueValue || !this.falseValue) {
        return this.value ? this.value === this.inputValue : Boolean(this.inputValue);
      }

      return this.inputValue === this.trueValue;
    },
    isDirty: function isDirty() {
      return this.isActive;
    }
  },

  watch: {
    indeterminate: function indeterminate(val) {
      this.inputIndeterminate = val;
    }
  },

  methods: {
    genLabel: function genLabel() {
      return this.$createElement('label', {
        on: { click: this.toggle },
        attrs: {
          for: this.id
        }
      }, this.$slots.label || this.label);
    },
    toggle: function toggle() {
      if (this.disabled) {
        return;
      }

      var input = this.inputValue;
      if (Array.isArray(input)) {
        input = input.slice();
        var i = input.indexOf(this.value);

        if (i === -1) {
          input.push(this.value);
        } else {
          input.splice(i, 1);
        }
      } else if (this.trueValue || this.falseValue) {
        input = input === this.trueValue ? this.falseValue : this.trueValue;
      } else if (this.value) {
        input = this.value === this.inputValue ? null : this.value;
      } else {
        input = !input;
      }

      this.validate(true, input);

      this.$emit('change', input);
    }
  }
});

/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_rippleable__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_selectable__ = __webpack_require__(42);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_touch__ = __webpack_require__(9);

// Mixins



// Directives


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-switch',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_rippleable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_selectable__["a" /* default */]],

  directives: {
    Touch: __WEBPACK_IMPORTED_MODULE_2__directives_touch__["a" /* default */]
  },

  props: {
    small: Boolean,
    large: Boolean
  },

  computed: {
    classes: function classes() {
      var classes = {
        'input-group_selection-controls': true,
        'switch': true,
        'switch_small': this.small,
        'switch_large': this.large
      };

      if (this.hasError) {
        classes['text_error'] = true;
      } else {
        return this.addTextColorClassChecks(classes);
      }

      return classes;
    },
    rippleClasses: function rippleClasses() {
      return {
        'input-group_selection-controls__ripple': true,
        'input-group_selection-controls__ripple_active': this.isActive
      };
    },
    containerClasses: function containerClasses() {
      return {
        'input-group_selection-controls__container': true,
        'input-group_selection-controls__container_disabled': this.disabled
      };
    },
    toggleClasses: function toggleClasses() {
      return {
        'input-group_selection-controls__toggle': true,
        'input-group_selection-controls__toggle_active': this.isActive
      };
    }
  },

  methods: {
    onSwipeLeft: function onSwipeLeft() {
      if (this.isActive) {
        this.toggle();
      }
    },
    onSwipeRight: function onSwipeRight() {
      if (!this.isActive) {
        this.toggle();
      }
    }
  },

  render: function render(h) {
    var container = h('div', {
      'class': this.containerClasses
    }, [h('div', { 'class': this.toggleClasses }), this.genRipple({
      directives: [{
        name: 'touch',
        value: {
          left: this.onSwipeLeft,
          right: this.onSwipeRight
        }
      }]
    })]);

    return this.genInputGroup([container]);
  }
});

/***/ }),
/* 44 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTextField_vue__ = __webpack_require__(45);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(162)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTextField_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 45 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_input__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_cleave_maskable__ = __webpack_require__(163);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };





/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-text-field',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_input__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_cleave_maskable__["a" /* default */]],

  inheritAttrs: false,

  data: function data() {
    return {
      initialValue: null,
      inputHeight: null,
      internalChange: false,
      badInput: false,
      lazySelection: 0
    };
  },


  props: {
    autofocus: Boolean,
    autoGrow: Boolean,
    box: Boolean,
    clearable: Boolean,
    color: String,
    counter: [Boolean, Number, String],
    fullWidth: Boolean,
    multiLine: Boolean,
    placeholder: String,
    prefix: String,
    rows: {
      default: 5
    },
    singleLine: Boolean,
    solo: Boolean,
    suffix: String,
    textarea: Boolean,
    noResize: Boolean,
    small: Boolean,
    large: Boolean,
    type: {
      type: String,
      default: 'text'
    }
  },

  computed: {
    classes: function classes() {
      var classes = {
        'input-group_text-field': true,
        'input-group_text-field-box': this.box,
        'input-group_single-line': this.singleLine || this.solo,
        'input-group_solo': this.solo,
        'input-group_multi-line': this.multiLine,
        'input-group_full-width': this.fullWidth,
        'input-group_prefix': this.prefix,
        'input-group_suffix': this.suffix,
        'input-group_textarea': this.textarea,
        'input-group_no-resize': this.noResize || this.autoGrow
      };

      if (this.hasError) {
        classes['text_error'] = true;
      } else {
        return this.addTextColorClassChecks(classes);
      }

      return classes;
    },
    inputLength: function inputLength() {
      if (this.inputValue) {
        return this.inputValue.toString().length;
      }
      return 0;
    },
    count: function count() {
      return this.inputLength + ' / ' + this.counterLength;
    },
    counterLength: function counterLength() {
      var parsedLength = parseInt(this.counter, 10);
      return isNaN(parsedLength) ? 25 : parsedLength;
    },

    inputValue: {
      get: function get() {
        return this.lazyValue;
      },
      set: function set(val) {
        var _this = this;

        if (this.cleaveMask && typeof window !== 'undefined') {
          this.$nextTick(function (_) {
            _this.lazyValue = val ? _this.cleave.getFormattedValue() : val;
            _this.$emit('input', _this.lazyValue);
          });
        } else {
          this.lazyValue = val;
          this.$emit('input', this.lazyValue);
        }
      }
    },
    isDirty: function isDirty() {
      return this.lazyValue != null && this.lazyValue.toString().length > 0 || this.badInput || ['time', 'date', 'datetime-local', 'week', 'month'].includes(this.type);
    },
    shouldAutoGrow: function shouldAutoGrow() {
      return (this.multiLine || this.textarea) && this.autoGrow;
    }
  },

  watch: {
    isFocused: function isFocused(val) {
      if (val) {
        this.initialValue = this.lazyValue;
      } else if (this.initialValue !== this.lazyValue) {
        this.$emit('change', this.lazyValue);
      }
    },
    value: function value(val) {
      if (this.cleaveMask && typeof window !== 'undefined') {
        this.cleave.setRawValue(val);
        this.lazyValue = this.cleave.getFormattedValue();
      } else {
        this.lazyValue = val;
      }

      if (this.internalChange) {
        this.internalChange = false;
      }

      !this.validateOnBlur && this.validate();
      this.shouldAutoGrow && this.calculateInputHeight();
    }
  },

  mounted: function mounted() {
    this.shouldAutoGrow && this.calculateInputHeight();
    this.autofocus && this.focus();
  },


  methods: {
    calculateInputHeight: function calculateInputHeight() {
      var _this2 = this;

      this.inputHeight = null;

      this.$nextTick(function () {
        var height = _this2.$refs.input ? _this2.$refs.input.scrollHeight : 0;
        var minHeight = _this2.rows * 24;
        var inputHeight = height < minHeight ? minHeight : height;
        _this2.inputHeight = inputHeight + (_this2.textarea ? 4 : 0);
      });
    },
    onInput: function onInput(e) {
      this.inputValue = e.target.value;
      this.badInput = e.target.validity && e.target.validity.badInput;
      this.shouldAutoGrow && this.calculateInputHeight();
    },
    blur: function blur(e) {
      var _this3 = this;

      this.isFocused = false;
      // Reset internalChange state
      // to allow external change
      // to persist
      this.internalChange = false;

      this.$nextTick(function () {
        _this3.validate();
      });
      this.$emit('blur', e);
    },
    focus: function focus(e) {
      if (!this.$refs.input) {
        return;
      }

      this.isFocused = true;
      if (document.activeElement !== this.$refs.input) {
        this.$refs.input.focus();
      }
      this.$emit('focus', e);
    },
    keyDown: function keyDown(e) {
      // Prevents closing of a
      // dialog when pressing
      // enter or esc
      if (this.isFocused) {
        var escKey = 27,
            enterKey = 13;

        if (e.keyCode === escKey || this.multiLine && e.keyCode === enterKey) {
          e.stopPropagation();
        }
      }

      this.$emit('keydown', e);

      this.internalChange = true;
    },
    genCounter: function genCounter() {
      var errorCounter = this.hasError || this.inputLength >= this.counterLength;
      var warnCounter = !errorCounter && Math.abs(this.inputLength - this.counterLength) / this.counterLength < 0.2;
      return this.$createElement('div', {
        'class': {
          'input-group__counter': true,
          'input-group__counter_error': errorCounter,
          'input-group__counter_warn': warnCounter
        }
      }, this.count);
    },
    genInput: function genInput() {
      var tag = this.multiLine || this.textarea ? 'textarea' : 'input';
      var listeners = Object.assign({}, this.$listeners);
      delete listeners['change']; // Change should not be bound externally

      var data = {
        style: {},
        domProps: {
          autofocus: this.autofocus,
          disabled: this.disabled,
          required: this.required,
          value: this.lazyValue
        },
        attrs: _extends({}, this.$attrs, {
          readonly: this.readonly,
          tabindex: this.tabindex,
          'aria-label': (!this.$attrs || !this.$attrs.id) && this.label // Label `for` will be set if we have an id
        }),
        on: Object.assign(listeners, {
          blur: this.blur,
          input: this.onInput,
          focus: this.focus,
          keydown: this.keyDown
        }),
        ref: 'input'
      };

      if (this.shouldAutoGrow) {
        data.style.height = this.inputHeight && this.inputHeight + 'px';
      }

      if (this.placeholder) {
        data.domProps.placeholder = this.placeholder;
      }

      if (!this.textarea && !this.multiLine) {
        data.domProps.type = this.type;
      } else {
        data.domProps.rows = this.rows;
      }

      var children = [this.$createElement(tag, data)];

      this.prefix && children.unshift(this.genFix('prefix'));
      this.suffix && children.push(this.genFix('suffix'));

      return children;
    },
    genFix: function genFix(type) {
      return this.$createElement('span', {
        'class': 'input-group_text-field__' + type
      }, this[type]);
    },
    clearableCallback: function clearableCallback() {
      var _this4 = this;

      this.inputValue = null;
      this.$nextTick(function () {
        return _this4.$refs.input.focus();
      });
    }
  },

  render: function render() {
    return this.genInputGroup(this.genInput(), {
      attrs: {
        tabindex: false
      }
    });
  }
});

/***/ }),
/* 46 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_input__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_registrable__ = __webpack_require__(3);

// Mixins



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-radio-group',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_input__["a" /* default */], Object(__WEBPACK_IMPORTED_MODULE_1__mixins_registrable__["b" /* provide */])('radio')],

  model: {
    prop: 'inputValue',
    event: 'change'
  },

  provide: function provide() {
    var _this = this;

    return {
      isMandatory: function isMandatory() {
        return _this.mandatory;
      },
      name: function name() {
        return _this.name;
      }
    };
  },


  data: function data() {
    return {
      internalTabIndex: -1,
      radios: []
    };
  },

  props: {
    column: {
      type: Boolean,
      default: true
    },
    inputValue: null,
    mandatory: {
      type: Boolean,
      default: true
    },
    name: String,
    row: Boolean
  },

  watch: {
    hasError: function hasError(val) {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.radios[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var radio = _step.value;

          radio.parentError = val;
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    },
    inputValue: function inputValue(val) {
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.radios[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var radio = _step2.value;

          radio.isActive = val === radio.value;
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  },

  computed: {
    classes: function classes() {
      return {
        'radio-group': true,
        'radio-group_column': this.column && !this.row,
        'radio-group_row': this.row,
        'text_error': this.hasError
      };
    }
  },

  methods: {
    toggleRadio: function toggleRadio(value) {
      var _this2 = this;

      if (this.disabled) {
        return;
      }

      this.shouldValidate = true;
      this.$emit('change', value);
      this.$nextTick(function () {
        return _this2.validate();
      });

      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = this.radios[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var radio = _step3.value;

          if (radio.value !== value) {
            radio.isActive = false;
          }
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    },
    radioBlur: function radioBlur(e) {
      if (!e.relatedTarget || !e.relatedTarget.classList.contains('radio')) {
        this.shouldValidate = true;
        this.$emit('blur', this.inputValue);
      }
    },
    register: function register(radio) {
      radio.isActive = this.inputValue === radio.value;
      radio.$el.tabIndex = radio.$el.tabIndex > 0 ? radio.$el.tabIndex : 0;
      radio.$on('change', this.toggleRadio);
      radio.$on('blur', this.radioBlur);
      // radio.$on('focus', this.radioFocus);
      this.radios.push(radio);
    },
    unregister: function unregister(radio) {
      radio.$off('change', this.toggleRadio);
      radio.$off('blur', this.radioBlur);
      // radio.$off('focus', this.radioFocus);

      var index = this.radios.findIndex(function (r) {
        return r === radio;
      });

      if (index > -1) {
        this.radios.splice(index, 1);
      }
    }
  },

  render: function render(h) {
    var data = {
      attrs: {
        role: 'radiogroup'
      }
    };
    return this.genInputGroup(this.$slots.default, data);
  }
});

/***/ }),
/* 47 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__transitions__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_tab_focusable__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_registrable__ = __webpack_require__(3);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

// Components


// Mixins





/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-radio',

  inheritAttrs: false,

  inject: ['isMandatory', 'name'],

  components: {
    RFadeTransition: __WEBPACK_IMPORTED_MODULE_0__transitions__["b" /* RFadeTransition */]
  },

  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__["a" /* default */], Object(__WEBPACK_IMPORTED_MODULE_4__mixins_registrable__["a" /* inject */])('radio', 'r-radio', 'r-radio-group'), __WEBPACK_IMPORTED_MODULE_3__mixins_tab_focusable__["a" /* default */]],

  data: function data() {
    return {
      defaultColor: '',
      isActive: false,
      parentError: false
    };
  },

  props: {
    disabled: Boolean,
    value: null,
    label: String,
    staticLabel: {
      type: Boolean,
      default: false
    }
  },

  computed: {
    classes: function classes() {
      var classes = {
        'radio': true,
        'input-group': true,
        'input-group_active': this.isActive,
        'input-group_disabled': this.disabled,
        'input-group_selection-controls': true,
        'input-group_label': this.label || this.$slots.label,
        'input-group_static-label': (this.label || this.$slots.label) && this.staticLabel,
        'input-group_tab-focused': this.tabFocused
      };

      if (!this.parentError) {
        return this.addTextColorClassChecks(classes);
      }

      return classes;
    }
  },

  methods: {
    genInput: function genInput(radio) {
      var value = ['string', 'number'].includes(_typeof(this.value)) ? this.value : JSON.stringify(this.value);
      var input = this.$createElement('input', {
        ref: 'input',
        style: {
          display: 'none'
        },
        attrs: Object.assign({
          name: this.name && this.name(),
          id: this.id,
          type: 'radio',
          value: value
        }, this.$attrs)
      }, [value]);

      radio.push(input);

      return this.$createElement('div', {
        class: 'input-group__input'
      }, radio);
    },
    genWrapper: function genWrapper(radio) {
      var _this = this;

      var children = [];

      if (this.$slots.label || this.label) {
        if (this.staticLabel && Array.isArray(radio)) {
          radio.push(this.genLabel());
        } else {
          children.push(this.genLabel());
        }
      }
      children.push(this.genInput(radio));

      return this.$createElement('div', {
        class: this.classes,
        attrs: {
          role: 'radio',
          'aria-checked': this.isActive && 'true' || 'false',
          'aria-label': this.label
        },
        on: {
          keydown: function keydown(e) {
            if ([13, 32].includes(e.keyCode)) {
              e.preventDefault();
              _this.toggle();
            }
          },
          blur: function blur(e) {
            _this.$emit('blur', e);
            _this.tabFocused = false;
          }
        }
      }, children);
    },
    genLabel: function genLabel() {
      return this.$createElement('label', {
        on: {
          click: this.toggle
        }
      }, this.$slots.label || this.label);
    },
    toggle: function toggle() {
      var mandatory = this.isMandatory && this.isMandatory() || false;

      if (!this.disabled && (!this.isActive || !mandatory)) {
        this.$refs.input.checked = true;
        this.isActive = true;
        this.$emit('change', this.value);
      }
    },
    genInnerCircle: function genInnerCircle() {
      var inner = this.$createElement('span', {
        staticClass: 'radio__inner-circle',
        directives: [{
          name: 'show',
          value: this.isActive
        }]
      });
      return this.$createElement('transition', {
        props: {
          name: 'scale-transition',
          mode: 'out-in'
        }
      }, [inner]);
    },
    genRadioCircle: function genRadioCircle() {
      return this.$createElement('span', {
        staticClass: 'radio__content',
        on: Object.assign({
          click: this.toggle
        }, this.$listeners)
      }, [this.genInnerCircle()]);
    }
  },

  mounted: function mounted() {
    this.radio.register(this);
  },
  beforeDestroy: function beforeDestroy() {
    this.radio.unregister(this);
  },
  render: function render(h) {
    var radio = this.genRadioCircle();

    var ripple = this.ripple ? this.genRipple() : null;

    return this.genWrapper([radio, ripple]);
  }
});

/***/ }),
/* 48 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-form',

  inheritAttrs: false,

  provide: function provide() {
    return {
      formErrors: this.formErrors
    };
  },
  data: function data() {
    return {
      inputs: [],
      errorBag: {}
    };
  },


  props: {
    value: Boolean,
    lazyValidation: Boolean,
    formErrors: Array
  },

  watch: {
    errorBag: {
      handler: function handler() {
        var errors = Object.values(this.errorBag).includes(true);

        this.$emit('input', !errors);

        return !errors;
      },

      deep: true
    }
  },

  methods: {
    getInputs: function getInputs() {
      var results = [];

      var search = function search(children) {
        var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var child = _step.value;

            if (child.errorBucket !== undefined) {
              results.push(child);
            } else {
              search(child.$children, depth + 1);
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        if (depth === 0) {
          return results;
        }
      };

      return search(this.$children);
    },
    getErrorFields: function getErrorFields() {
      return this.getInputs().map(function (input) {
        return input.errorField;
      }).filter(function (path) {
        return !!path;
      }).reduce(function (uniqueArray, value) {
        return uniqueArray.includes(value) ? uniqueArray : uniqueArray.concat(value);
      }, []);
    },
    getUnusedErrors: function getUnusedErrors() {
      var errorFields = this.getErrorFields();
      return this.formErrors.filter(function (error) {
        return !error || !error.field || !errorFields.includes(error.field);
      });
    },
    getUnusedErrorFields: function getUnusedErrorFields() {
      return this.getUnusedErrors().map(function (error) {
        return error.field;
      });
    },
    watchInputs: function watchInputs() {
      var inputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getInputs();
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = inputs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var child = _step2.value;

          if (this.inputs.includes(child)) {
            continue; // We already know about this input
          }

          this.inputs.push(child);
          this.watchChild(child);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    },
    watchChild: function watchChild(child) {
      var _this = this;

      var watcher = function watcher(child) {
        child.$watch('valid', function (val) {
          _this.$set(_this.errorBag, child._uid, !val);
        }, { immediate: true });
      };

      if (!this.lazyValidation) {
        return watcher(child);
      }

      // Only start watching inputs if we need to
      child.$watch('shouldValidate', function (val) {
        if (!val) {
          return;
        }

        // Only watch if we're not already doing it
        if (_this.errorBag.hasOwnProperty(child._uid)) {
          return;
        }

        watcher(child);
      });
    },
    validate: function validate() {
      var errors = this.inputs.filter(function (input) {
        return !input.validate(true);
      }).length;
      return !errors;
    },
    reset: function reset() {
      for (var i = this.inputs.length; i--;) {
        this.inputs[i].reset();
      }
      if (this.lazyValidation) {
        this.errorBag = {};
      }
      this.errors = [];
    },
    register: function register(value) {
      console.log(value);
    },
    unregister: function unregister(value) {
      console.log(value);
    }
  },

  mounted: function mounted() {
    this.watchInputs();
  },
  updated: function updated() {
    var inputs = this.getInputs();

    if (inputs.length < this.inputs.length) {
      // Something was removed, we don't want it in the errorBag any more
      var removed = this.inputs.filter(function (i) {
        return !inputs.includes(i);
      });

      var _iteratorNormalCompletion3 = true;
      var _didIteratorError3 = false;
      var _iteratorError3 = undefined;

      try {
        for (var _iterator3 = removed[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
          var input = _step3.value;

          this.$delete(this.errorBag, input._uid);
          this.$delete(this.inputs, this.inputs.indexOf(input));
        }
      } catch (err) {
        _didIteratorError3 = true;
        _iteratorError3 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion3 && _iterator3.return) {
            _iterator3.return();
          }
        } finally {
          if (_didIteratorError3) {
            throw _iteratorError3;
          }
        }
      }
    }

    this.watchInputs(inputs);
  },
  render: function render(h) {
    var _this2 = this;

    return h('form', {
      attrs: Object.assign({
        novalidate: true
      }, this.$attrs),
      on: {
        submit: function submit(e) {
          return _this2.$emit('submit', e);
        }
      }
    }, this.$slots.default);
  }
});

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-form-group',

  props: {
    label: String,
    labelTop: Boolean,
    required: Boolean,
    vertical: Boolean,
    labelClass: String,
    controlClass: String,
    labelOffset: Boolean,
    narrowControl: Boolean,
    smallIndent: Boolean
  },

  computed: {
    classes: function classes() {
      return {
        'form-group_vertical': this.vertical,
        'form-group_indent-small': this.smallIndent
      };
    },
    labelClasses: function labelClasses() {
      var _ref;

      return _ref = {}, _defineProperty(_ref, this.labelClass, !!this.labelClass), _defineProperty(_ref, 'form-group__label_top', this.labelTop), _ref;
    },
    controlClasses: function controlClasses() {
      var _ref2;

      return _ref2 = {}, _defineProperty(_ref2, this.controlClass, !!this.controlClass), _defineProperty(_ref2, 'form-group__control_offset-label', this.labelOffset), _defineProperty(_ref2, 'form-group__control_narrow', this.narrowControl), _ref2;
    }
  }
});

/***/ }),
/* 50 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_input__ = __webpack_require__(11);

// Mixins


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-form-field-error',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_input__["a" /* default */]],

  computed: {
    classes: function classes() {
      return {
        'form-field-error': true,
        'text_error': this.hasError
      };
    }
  },

  render: function render(h) {
    return this.genInputGroup(this.$slots.default);
  }
});

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_routable__ = __webpack_require__(18);




/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-card',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_routable__["a" /* default */]],

  props: {
    flat: Boolean,
    height: {
      type: String,
      default: 'auto'
    },
    hover: Boolean,
    img: String,
    raised: Boolean,
    tile: Boolean,
    tag: {
      type: String,
      default: 'div'
    }
  },

  computed: {
    classes: function classes() {
      var classes = {
        'card': true,
        'card_flat': this.flat,
        'card_horizontal': this.horizontal,
        'card_hover': this.hover,
        'card_raised': this.raised,
        'card_tile': this.tile
      };
      return this.addBackgroundColorClassChecks(classes);
    },
    styles: function styles() {
      var style = {
        height: isNaN(this.height) ? this.height : this.height + 'px'
      };

      if (this.img) {
        style.background = 'url("' + this.img + '") center center / cover no-repeat';
      }

      return style;
    }
  },

  render: function render(h) {
    var _generateRouteLink = this.generateRouteLink(),
        tag = _generateRouteLink.tag,
        data = _generateRouteLink.data;

    data.style = this.styles;

    return h(tag, data, this.$slots.default);
  }
});

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-card-media',

  props: {
    contain: Boolean,
    height: {
      type: [Number, String],
      default: 'auto'
    },
    src: {
      type: String
    }
  },

  render: function render(h) {
    var data = {
      'class': 'card__media',
      style: {
        height: !isNaN(this.height) ? this.height + 'px' : this.height
      },
      on: this.$listeners
    };

    var children = [];

    if (this.src) {
      children.push(h('div', {
        'class': 'card__media-background',
        style: {
          background: 'url(' + this.src + ') center center / ' + (this.contain ? 'contain' : 'cover') + ' no-repeat'
        }
      }));
    }

    children.push(h('div', {
      'class': 'card__media-content'
    }, this.$slots.default));

    return h('div', data, children);
  }
});

/***/ }),
/* 53 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-card-title',

  functional: true,

  props: {
    primaryTitle: Boolean
  },

  render: function render(h, _ref) {
    var data = _ref.data,
        props = _ref.props,
        children = _ref.children;

    data.staticClass = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])('card__title ' + (data.staticClass || '')).trim();

    if (props.primaryTitle) {
      data.staticClass += ' card__title_primary';
    }

    return h('div', data, children);
  }
});

/***/ }),
/* 54 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('card__actions'));

/***/ }),
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('card__text'));

/***/ }),
/* 56 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-toolbar',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */]],

  data: function data() {
    return {
      heights: {
        mobileLandscape: 56,
        mobile: 64,
        desktop: 64,
        dense: 48
      },
      isExtended: false
    };
  },

  props: {
    absolute: Boolean,
    card: Boolean,
    dense: Boolean,
    extended: Boolean,
    fixed: Boolean,
    flat: Boolean,
    light: Boolean,
    floating: Boolean,
    height: [Number, String],
    prominent: Boolean
  },

  computed: {
    computedHeight: function computedHeight() {
      if (this.height) {
        return parseInt(this.height);
      }
      if (this.dense) {
        return this.heights.dense;
      }
      if (this.prominent || this.$rabotify.breakpoint.mdAndUp) {
        return this.heights.desktop;
      }
      if (this.$rabotify.breakpoint.width > this.$rabotify.breakpoint.height) {
        return this.heights.mobileLandscape;
      }
      return this.heights.mobile;
    },
    classes: function classes() {
      return this.addBackgroundColorClassChecks({
        'toolbar': true,
        'toolbar_flat': this.flat,
        'toolbar_light': this.light,
        'toolbar_absolute': this.absolute,
        'toolbar_card': this.card,
        'toolbar_dense': this.dense,
        'toolbar_fixed': this.fixed,
        'toolbar_floating': this.floating,
        'toolbar_prominent': this.prominent,
        'toolbar_extended': this.isExtended
      });
    }
  },

  render: function render(h) {
    this.isExtended = this.extended || !!this.$slots.extension;

    var children = [];
    var data = {
      'class': this.classes,
      on: this.$listeners
    };

    children.push(h('div', {
      staticClass: 'toolbar__content',
      style: {
        height: this.computedHeight + 'px'
      },
      ref: 'content'
    }, this.$slots.default));

    if (this.isExtended) {
      children.push(h('div', {
        staticClass: 'toolbar__extension',
        style: { height: this.computedHeight + 'px' }
      }, this.$slots.extension));
    }

    return h('nav', data, children);
  }
});

/***/ }),
/* 57 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('toolbar__items'));

/***/ }),
/* 58 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('toolbar__title'));

/***/ }),
/* 59 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialog_vue__ = __webpack_require__(60);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(191)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialog_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 60 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_dependent__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_detachable__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_overlayable__ = __webpack_require__(192);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_stackable__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_returnable__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__directives_click_outside__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__directives_keydown_toggle__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_helpers__ = __webpack_require__(1);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Mixins







// Directives



// Helpers


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-dialog',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_dependent__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_detachable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_overlayable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_returnable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_stackable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_toggleable__["a" /* default */]],

  directives: {
    ClickOutside: __WEBPACK_IMPORTED_MODULE_6__directives_click_outside__["a" /* default */],
    KeydownToggle: __WEBPACK_IMPORTED_MODULE_7__directives_keydown_toggle__["a" /* default */]
  },

  data: function data() {
    return {
      isDependent: false,
      stackClass: 'dialog__content__active',
      stackMinZIndex: 200
    };
  },


  props: {
    disabled: Boolean,
    persistent: Boolean,
    fullscreen: Boolean,
    fullWidth: Boolean,
    fullHeight: Boolean,
    attachLeft: Boolean,
    attachRight: Boolean,
    attachTop: Boolean,
    attachBottom: Boolean,
    maxWidth: {
      type: [String, Number],
      default: 'none'
    },
    origin: {
      type: String,
      default: 'center center'
    },
    width: {
      type: [String, Number],
      default: 'auto'
    },
    scrollable: Boolean,
    escCloseable: {
      type: Boolean,
      default: true
    },
    transition: {
      type: [String, Boolean],
      default: 'dialog-transition'
    }
  },

  computed: {
    classes: function classes() {
      return _defineProperty({
        'dialog': true,
        'dialog_active': this.isActive,
        'dialog_persistent': this.persistent,
        'dialog_fullscreen': this.fullscreen,
        'dialog_sidebar': (this.attachRight || this.attachLeft) && this.fullHeight,
        'dialog_full-height': this.fullHeight,
        'dialog_scrollable': this.scrollable
      }, this.contentClass, !!this.contentClass);
    },
    contentClasses: function contentClasses() {
      var _ref2;

      return _ref2 = {
        'dialog__content': true
      }, _defineProperty(_ref2, this.stackClass, this.isActive), _defineProperty(_ref2, 'dialog__content_left', this.attachLeft), _defineProperty(_ref2, 'dialog__content_right', this.attachRight), _defineProperty(_ref2, 'dialog__content_top', this.attachTop), _defineProperty(_ref2, 'dialog__content_bottom', this.attachBottom), _ref2;
    }
  },

  watch: {
    isActive: function isActive(val) {
      if (val) {
        this.show();
      } else {
        this.removeOverlay();
        this.unbind();
      }
    }
  },

  mounted: function mounted() {
    this.isBooted = this.isActive;
    this.isActive && this.show();
  },
  beforeDestroy: function beforeDestroy() {
    if (typeof window !== 'undefined') {
      this.unbind();
    }
  },


  methods: {
    canCloseImplicitly: function canCloseImplicitly() {
      return this.isActive && !this.persistent && Object(__WEBPACK_IMPORTED_MODULE_8__util_helpers__["u" /* getZIndex */])(this.$refs.content) >= this.getMaxZIndex();
    },
    closeConditional: function closeConditional(e) {
      // close dialog if !persistent, clicked outside and we're the topmost dialog.
      // Since this should only be called in a capture event (bottom up), we shouldn't need to stop propagation
      return this.canCloseImplicitly() && !this.$refs.content.contains(e.target);
    },
    show: function show() {
      !this.fullscreen && !this.hideOverlay && this.genOverlay();
      this.fullscreen && this.hideScroll();
      this.$refs.content.focus();
      this.$listeners.keydown && this.bind();
    },
    bind: function bind() {
      window.addEventListener('keydown', this.onKeydown);
    },
    unbind: function unbind() {
      window.removeEventListener('keydown', this.onKeydown);
    },
    onKeydown: function onKeydown(e) {
      this.$emit('keydown', e);
    }
  },

  render: function render(h) {
    var _this = this;

    var directives = [];
    if (this.escCloseable) {
      directives.push({
        name: 'keydown-toggle',
        value: {
          closeConditional: function closeConditional(e) {
            return _this.escCloseable && e.keyCode === 27 && _this.canCloseImplicitly();
          },
          callback: function callback() {
            _this.isActive = false;
          }
        }
      });
    }
    var children = [];
    var data = {
      'class': this.classes,
      ref: 'dialog',
      directives: [{
        name: 'click-outside',
        value: function value() {
          return _this.isActive = false;
        },
        args: {
          closeConditional: this.closeConditional,
          include: this.getOpenDependentElements
        }
      }, {
        name: 'show',
        value: this.isActive
      }].concat(directives),
      on: {
        click: function click(e) {
          e.stopPropagation();
        }
      }
    };

    if (!this.fullscreen) {
      data.style = {
        maxWidth: this.maxWidth === 'none' ? undefined : isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px',
        width: this.width === 'auto' ? undefined : isNaN(this.width) ? this.width : this.width + 'px'
      };
    }

    if (this.$slots.activator) {
      children.push(h('div', {
        'class': 'dialog__activator',
        on: {
          click: function click(e) {
            e.stopPropagation();
            if (!_this.disabled) {
              _this.isActive = !_this.isActive;
            }
          }
        }
      }, [this.$slots.activator]));
    }

    var dialog = h('r-' + this.transition, {
      props: {
        origin: this.origin
      }
    }, [h('div', data, this.showLazyContent(this.$slots.default))]);

    children.push(h('div', {
      'class': this.contentClasses,
      domProps: { tabIndex: -1 },
      style: { zIndex: this.activeZIndex },
      ref: 'content'
    }, [dialog]));

    return h('div', {
      'class': 'dialog__container',
      style: {
        display: !this.$slots.activator && 'none' || this.fullWidth ? 'block' : 'inline-block'
      }
    }, children);
  }
});

/***/ }),
/* 61 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'stackable',

  props: {
    zIndex: {
      type: Number,
      default: null
    }
  },

  data: function data() {
    return {
      stackBase: null,
      stackClass: 'unpecified',
      stackElement: null,
      stackExclude: null,
      stackMinZIndex: 0
    };
  },


  computed: {
    /**
     * Currently active z-index
     *
     * @return {number}
     */
    activeZIndex: function activeZIndex() {
      var content = this.stackElement || this.$refs.content;
      // Return current z-index if not active

      var index = this.zIndex || (!this.isActive ? Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["u" /* getZIndex */])(content) : this.getMaxZIndex(this.stackExclude || [content]) + 2);

      if (index == null) {
        return index;
      }

      // Return max current z-index (excluding self) + 2
      // (2 to leave room for an overlay below, if needed)
      return parseInt(index);
    }
  },
  methods: {
    getMaxZIndex: function getMaxZIndex() {
      var exclude = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var base = this.stackBase || this.$el;
      // Start with lowest allowed z-index or z-index of
      // base component's element, whichever is greater
      var zis = [this.stackMinZIndex, Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["u" /* getZIndex */])(base)];
      var activeElements = this.getActiveStackedElements();

      // Get z-index for all active dialogs
      for (var index = 0; index < activeElements.length; index++) {
        if (!exclude.includes(activeElements[index])) {
          zis.push(Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["u" /* getZIndex */])(activeElements[index]));
        }
      }

      return Math.max.apply(Math, zis);
    },
    getActiveStackedElements: function getActiveStackedElements() {
      // Convert the NodeList to an array to
      // prevent an Edge bug with Symbol.iterator
      return [].concat(_toConsumableArray(document.getElementsByClassName(this.stackClass)));
    }
  }
});

/***/ }),
/* 62 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'returnable',

  data: function data() {
    return {
      originalValue: null
    };
  },

  props: {
    returnValue: null
  },

  watch: {
    isActive: function isActive(val) {
      if (val) {
        this.originalValue = this.returnValue;
      } else {
        this.$emit('update:returnValue', this.originalValue);
      }
    }
  },

  methods: {
    save: function save(value) {
      this.originalValue = value;
      this.$emit('update:returnValue', value);
      this.isActive = false;
    }
  }
});

/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_scroll__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdClose_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RBtn_RBtn_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RCard_RCard_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RCard_RCardText_vue__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RCard_RCardActions_vue__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__RDialogHeader_vue__ = __webpack_require__(27);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Directives


// Icons


// Components






var dialogCardNumber = 1;

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-dialog-card',

  components: {
    MdClose: __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdClose_vue__["default"],

    RBtn: __WEBPACK_IMPORTED_MODULE_2__RBtn_RBtn_vue__["a" /* default */],
    RCard: __WEBPACK_IMPORTED_MODULE_3__RCard_RCard_vue__["a" /* default */],
    RCardText: __WEBPACK_IMPORTED_MODULE_4__RCard_RCardText_vue__["a" /* default */],
    RCardActions: __WEBPACK_IMPORTED_MODULE_5__RCard_RCardActions_vue__["a" /* default */],
    RDialogHeader: __WEBPACK_IMPORTED_MODULE_6__RDialogHeader_vue__["a" /* default */]
  },

  directives: {
    Scroll: __WEBPACK_IMPORTED_MODULE_0__directives_scroll__["a" /* default */]
  },

  props: {
    actionsStyles: Object,
    actionsClass: String
  },

  data: function data() {
    return {
      id: dialogCardNumber++,
      headerFlat: true
    };
  },


  methods: {
    onContentScroll: function onContentScroll(ev) {
      this.headerFlat = !(ev.target && ev.target.scrollTop > 0);
    },
    closeDialog: function closeDialog() {
      this.$emit('close');
    }
  },

  computed: {
    classes: function classes() {
      return {
        'dialog-card': true
      };
    },
    dialogHeaderClasses: function dialogHeaderClasses() {
      return {
        'dialog-card__header': true
      };
    },
    actionsClasses: function actionsClasses() {
      return _defineProperty({
        'dialog-card__actions': true
      }, this.actionsClass, !!this.actionsClass);
    },
    dialogCardId: function dialogCardId() {
      return 'dialog-card-' + this.id;
    },
    dialogCardScrollTarget: function dialogCardScrollTarget() {
      return '#' + this.dialogCardId + ' .dialog-card__inner';
    }
  }
});

/***/ }),
/* 64 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-dialog-header',

  props: {
    flat: Boolean
  },

  computed: {
    classes: function classes() {
      return {
        'dialog-header': true,
        'dialog-header_flat': this.flat
      };
    }
  },

  render: function render(h) {
    var children = [];
    var data = {
      'class': this.classes,
      on: this.$listeners
    };

    children.push(h('div', {
      staticClass: 'dialog-header__title',
      ref: 'title'
    }, this.$slots.default));

    return h('nav', data, children);
  }
});

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives_scroll__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdClose_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RBtn_RBtn_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RCard_RCard_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RCard_RCardText_vue__ = __webpack_require__(24);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RCard_RCardActions_vue__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__RDialog_RDialogHeader_vue__ = __webpack_require__(27);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Directives


// Icons


// Components






var dialogCardNumber = 1;

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-dialog-card',

  components: {
    MdClose: __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdClose_vue__["default"],

    RBtn: __WEBPACK_IMPORTED_MODULE_2__RBtn_RBtn_vue__["a" /* default */],
    RCard: __WEBPACK_IMPORTED_MODULE_3__RCard_RCard_vue__["a" /* default */],
    RCardText: __WEBPACK_IMPORTED_MODULE_4__RCard_RCardText_vue__["a" /* default */],
    RCardActions: __WEBPACK_IMPORTED_MODULE_5__RCard_RCardActions_vue__["a" /* default */],
    RDialogHeader: __WEBPACK_IMPORTED_MODULE_6__RDialog_RDialogHeader_vue__["a" /* default */]
  },

  directives: {
    Scroll: __WEBPACK_IMPORTED_MODULE_0__directives_scroll__["a" /* default */]
  },

  props: {
    actionsStyles: Object,
    actionsClass: String
  },

  data: function data() {
    return {
      id: dialogCardNumber++,
      headerFlat: true
    };
  },


  methods: {
    onContentScroll: function onContentScroll(ev) {
      this.headerFlat = !(ev.target && ev.target.scrollTop > 0);
    },
    closeDialog: function closeDialog() {
      this.$emit('close');
    }
  },

  computed: {
    classes: function classes() {
      return {
        'dialog-card': true
      };
    },
    dialogHeaderClasses: function dialogHeaderClasses() {
      return {
        'dialog-card__header': true
      };
    },
    actionsClasses: function actionsClasses() {
      return _defineProperty({
        'dialog-card__actions': true
      }, this.actionsClass, !!this.actionsClass);
    },
    dialogCardId: function dialogCardId() {
      return 'dialog-card-' + this.id;
    },
    dialogCardScrollTarget: function dialogCardScrollTarget() {
      return '#' + this.dialogCardId + ' .dialog-card__inner';
    }
  }
});

/***/ }),
/* 66 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RDialog_RDialog_vue__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_helpers__ = __webpack_require__(1);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };





/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-bottom-sheet',

  components: {
    RDialog: __WEBPACK_IMPORTED_MODULE_0__RDialog_RDialog_vue__["a" /* default */]
  },

  props: {
    disabled: Boolean,
    fullWidth: Boolean,
    hideOverlay: Boolean,
    inset: Boolean,
    lazy: Boolean,
    maxWidth: {
      type: [String, Number],
      default: 'auto'
    },
    persistent: Boolean,
    value: null
  },

  render: function render(h) {
    var activator = h('template', {
      slot: 'activator'
    }, this.$slots.activator);

    var contentClass = Object(__WEBPACK_IMPORTED_MODULE_1__util_helpers__["y" /* normalizeClassName */])(['r-bottom-sheet', this.inset ? 'r-bottom-sheet_inset' : ''].join(' '));

    return h(__WEBPACK_IMPORTED_MODULE_0__RDialog_RDialog_vue__["a" /* default */], {
      attrs: _extends({}, this.$props),
      on: _extends({}, this.$listeners),
      props: {
        contentClass: contentClass,
        transition: 'bottom-sheet-transition',
        attachBottom: true,
        value: this.value
      }
    }, [activator, this.$slots.default]);
  }
});

/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_hardware_MdKeyboardArrowDown_vue__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_dependent__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_filterable__ = __webpack_require__(207);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_input__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RMenu_RMenu_vue__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__RBtn_RBtn_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__RCheckbox_RCheckbox_vue__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__RChip_RChip_vue__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__RCard_RCard_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__RLoading_RLoading_vue__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__RList_RList_vue__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__RList_RListTile_vue__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__RList_RListTileSubTitle_vue__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__RList_RListTileContent_vue__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__RList_RListTileAction_vue__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__RSubheader_RSubheader_vue__ = __webpack_require__(87);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__RDivider_RDivider_vue__ = __webpack_require__(89);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__mixins_select_autocomplete__ = __webpack_require__(219);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__mixins_select_computed__ = __webpack_require__(220);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__mixins_select_events__ = __webpack_require__(221);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__mixins_select_generators__ = __webpack_require__(222);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__mixins_select_helpers__ = __webpack_require__(223);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__mixins_select_menu__ = __webpack_require__(224);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__mixins_select_props__ = __webpack_require__(225);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__mixins_select_watchers__ = __webpack_require__(226);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__directives_click_outside__ = __webpack_require__(13);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

// Icons


// Mixins





// Components
















// Component level mixins









// Directives


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-select',

  inheritAttrs: false,

  components: {
    MdKeyboardArrowDown: __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_hardware_MdKeyboardArrowDown_vue__["default"],
    RMenu: __WEBPACK_IMPORTED_MODULE_5__RMenu_RMenu_vue__["a" /* default */],
    RBtn: __WEBPACK_IMPORTED_MODULE_6__RBtn_RBtn_vue__["a" /* default */],
    RCheckbox: __WEBPACK_IMPORTED_MODULE_7__RCheckbox_RCheckbox_vue__["a" /* default */],
    RChip: __WEBPACK_IMPORTED_MODULE_8__RChip_RChip_vue__["a" /* default */],
    RCard: __WEBPACK_IMPORTED_MODULE_9__RCard_RCard_vue__["a" /* default */],
    RLoading: __WEBPACK_IMPORTED_MODULE_10__RLoading_RLoading_vue__["a" /* default */],
    RList: __WEBPACK_IMPORTED_MODULE_11__RList_RList_vue__["a" /* default */],
    RListTile: __WEBPACK_IMPORTED_MODULE_12__RList_RListTile_vue__["a" /* default */],
    RListTileSubTitle: __WEBPACK_IMPORTED_MODULE_13__RList_RListTileSubTitle_vue__["a" /* default */],
    RListTileContent: __WEBPACK_IMPORTED_MODULE_14__RList_RListTileContent_vue__["a" /* default */],
    RListTileAction: __WEBPACK_IMPORTED_MODULE_15__RList_RListTileAction_vue__["a" /* default */],
    RSubheader: __WEBPACK_IMPORTED_MODULE_16__RSubheader_RSubheader_vue__["a" /* default */],
    RDivider: __WEBPACK_IMPORTED_MODULE_17__RDivider_RDivider_vue__["a" /* default */]
  },

  directives: {
    ClickOutside: __WEBPACK_IMPORTED_MODULE_26__directives_click_outside__["a" /* default */]
  },

  mixins: [__WEBPACK_IMPORTED_MODULE_18__mixins_select_autocomplete__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_dependent__["a" /* default */], __WEBPACK_IMPORTED_MODULE_20__mixins_select_events__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_filterable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_21__mixins_select_generators__["a" /* default */], __WEBPACK_IMPORTED_MODULE_22__mixins_select_helpers__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_input__["a" /* default */], __WEBPACK_IMPORTED_MODULE_23__mixins_select_menu__["a" /* default */], __WEBPACK_IMPORTED_MODULE_24__mixins_select_props__["a" /* default */], __WEBPACK_IMPORTED_MODULE_25__mixins_select_watchers__["a" /* default */],
  // Input and Computed both
  // contain isDirty props
  // last gets merged in
  __WEBPACK_IMPORTED_MODULE_19__mixins_select_computed__["a" /* default */]],

  data: function data() {
    return {
      cachedItems: this.cacheItems ? this.items : [],
      content: {},
      defaultColor: '',
      inputValue: (this.multiple || this.tags) && !this.value ? [] : this.value,
      isBooted: false,
      lastItem: 20,
      lazySearch: null,
      isActive: false,
      menuIsActive: false,
      selectedIndex: -1,
      selectedItems: [],
      shouldBreak: false
    };
  },
  mounted: function mounted() {
    // If instance is being destroyed
    // do not run mounted functions
    if (this._isDestroyed) {
      return;
    }

    // Evaluate the selected items immediately
    // to avoid a unnecessary label transition
    this.genSelectedItems();

    if (this.refMenu) {
      this.setMenuContent();
    }
  },
  beforeDestroy: function beforeDestroy() {
    if (this.isBooted) {
      if (this.content) {
        this.content.removeEventListener('scroll', this.onScroll, false);
      }
    }
  },


  methods: {
    needsTile: function needsTile(tile) {
      return tile.componentOptions == null || tile.componentOptions.tag !== 'r-list-tile';
    },
    changeSelectedIndex: function changeSelectedIndex(keyCode) {
      // backspace, left, right, delete
      if (![8, 37, 39, 46].includes(keyCode)) {
        return;
      }

      var indexes = this.selectedItems.length - 1;

      if (this.arrowNavigation) {
        if (keyCode === 37) {
          // Left arrow
          this.selectedIndex = this.selectedIndex === -1 ? indexes : this.selectedIndex - 1;
        } else if (keyCode === 39) {
          // Right arrow
          this.selectedIndex = this.selectedIndex >= indexes ? -1 : this.selectedIndex + 1;
        } else if (this.selectedIndex === -1) {
          this.selectedIndex = indexes;
          return;
        }
      }

      // backspace/delete
      if ([8, 46].includes(keyCode) && this.backspaceDeletable) {
        var newIndex = this.selectedIndex === indexes ? this.selectedIndex - 1 : this.selectedItems[this.selectedIndex + 1] ? this.selectedIndex : -1;

        this.combobox ? this.inputValue = null : this.selectItem(this.selectedItems[this.selectedIndex]);
        this.selectedIndex = newIndex;
      }
    },
    closeConditional: function closeConditional(e) {
      if (this.persistentMenu) {
        return false;
      }
      return this.isActive && !!this.content && !!Object.keys(this.content).length && !this.content.contains(e.target);
    },
    filterDuplicates: function filterDuplicates(arr) {
      var uniqueValues = new Map();
      for (var index = 0; index < arr.length; ++index) {
        var item = arr[index];
        var val = this.getValue(item);

        !uniqueValues.has(val) && uniqueValues.set(val, item);
      }
      return Array.from(uniqueValues.values());
    },
    genDirectives: function genDirectives() {
      var _this = this;

      return [{
        name: 'click-outside',
        value: function value() {
          return _this.isActive = false;
        },
        args: {
          closeConditional: this.closeConditional
        }
      }];
    },
    genSelectedItems: function genSelectedItems() {
      var _this2 = this;

      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.inputValue;

      // If we are using tags, don't filter results
      if (this.tags || this.chips) {
        return this.selectedItems = val;
      }

      // Combobox is the single version
      // of a taggable select element
      if (this.combobox) {
        return this.selectedItems = val != null ? [val] : [];
      }

      var selectedItems = this.computedItems.filter(function (i) {
        if (!_this2.isMultiple) {
          return _this2.getValue(i) === _this2.getValue(val);
        } else {
          // Always return Boolean
          return _this2.findExistingIndex(i) > -1;
        }
      });

      if (!selectedItems.length && val != null && this.tags) {
        selectedItems = Array.isArray(val) ? val : [val];
      }

      this.selectedItems = selectedItems;
    },
    clearableCallback: function clearableCallback() {
      var _this3 = this;

      var inputValue = this.isMultiple ? [] : null;

      this.inputValue = inputValue;
      this.$emit('change', inputValue);
      this.genSelectedItems();

      // When input is cleared
      // reset search value and
      // re-focus the input
      setTimeout(function () {
        _this3.searchValue = null;
        _this3.focusInput();
      }, 0);

      if (this.openOnClear) {
        setTimeout(this.showMenu, 50);
      }
    },
    onScroll: function onScroll() {
      var _this4 = this;

      if (!this.isActive) {
        requestAnimationFrame(function () {
          return _this4.content.scrollTop = 0;
        });
      } else {
        if (this.virtual || this.lastItem >= this.computedItems.length) {
          return;
        }

        var showMoreItems = this.content.scrollHeight - (this.content.scrollTop + this.content.clientHeight) < 200;

        if (showMoreItems) {
          this.lastItem += 20;
        }
      }
    },
    findExistingItem: function findExistingItem(val) {
      var _this5 = this;

      var itemValue = this.getValue(val);
      return this.items.find(function (i) {
        return _this5.valueComparator(_this5.getValue(i), itemValue);
      });
    },
    findExistingIndex: function findExistingIndex(item) {
      var _this6 = this;

      var itemValue = this.getValue(item);
      return this.inputValue.findIndex(function (i) {
        return _this6.valueComparator(_this6.getValue(i), itemValue);
      });
    },
    setCaretPosition: function setCaretPosition(selection) {
      var _this7 = this;

      this.selection = selection;

      setTimeout(function () {
        _this7.$refs.input && _this7.$refs.input.setSelectionRange(_this7.selection, _this7.selection);
      }, 0);
    },
    selectItem: function selectItem(item) {
      var _this8 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _options$focusInputAf = options.focusInputAfterSelect,
          focusInputAfterSelect = _options$focusInputAf === undefined ? true : _options$focusInputAf,
          _options$removeItem = options.removeItem,
          removeItem = _options$removeItem === undefined ? true : _options$removeItem;


      if (!this.isMultiple) {
        this.inputValue = this.returnObject ? item : this.getValue(item);
        this.selectedItems = [item];
      } else {
        var selectedItems = [];
        var inputValue = this.inputValue.slice();
        var i = this.findExistingIndex(item);

        if (i !== -1) {
          removeItem && inputValue.splice(i, 1);
        } else {
          inputValue.push(item);
        }

        this.inputValue = inputValue.map(function (i) {
          selectedItems.push(i);
          return _this8.returnObject ? i : _this8.getValue(i);
        });

        this.selectedItems = selectedItems;
        this.selectedIndex = -1;
      }

      this.searchValue = !this.isMultiple && !this.chips && !this.$scopedSlots.selection ? this.getText(this.selectedItem) : null;

      this.$emit('change', this.inputValue);

      // List tile will re-render, reset index to
      // maintain highlighting
      var savedIndex = this.getMenuIndex();
      this.resetMenuIndex();

      if (!focusInputAfterSelect) {
        return;
      }

      // After selecting an item
      // refocus the input and
      // reset the caret pos
      this.$nextTick(function () {
        _this8.focusInput();
        _this8.setCaretPosition(_this8.currentRange);

        requestAnimationFrame(function () {
          if (savedIndex > -1) {
            _this8.setMenuIndex(savedIndex);
          }
        });
      });
    },
    updateDimensionsMenu: function updateDimensionsMenu(value) {
      if (this.refMenu) {
        this.refMenu.updateDimensions(value);
      }
    },
    setMenuContent: function setMenuContent(menu) {
      menu = this.refMenu || menu;

      if (menu) {
        this.content = menu.$refs.content;
      }
    }
  },

  render: function render(h) {
    var _this9 = this;

    var data = {
      attrs: _extends({
        tabindex: this.isAutocomplete || this.disabled ? -1 : this.tabindex,
        'data-uid': this._uid
      }, this.isAutocomplete ? null : this.$attrs, {
        role: this.isAutocomplete ? null : 'combobox'
      })
    };
    var selectionsOutside = this.chipsOutside ? this.genSelectionsAndSearch({ search: false }) : null;

    if (!this.isAutocomplete) {
      data.on = this.genListeners();
      data.directives = this.genDirectives();
    } else {
      data.on = {
        click: function click() {
          if (_this9.disabled || _this9.readonly || _this9.isFocused) {
            return;
          }

          // If the input is dirty,
          // the input is not targetable
          // so we must manually focus
          if (_this9.isDirty) {
            _this9.focus();
            _this9.$nextTick(_this9.focusInput);
          }
        }
      };
    }

    return this.$createElement('div', {
      'class': 'input-group__select-wrapper',
      ref: 'select'
    }, [this.genInputGroup([this.genSelectionsAndSearch({ selections: !this.chipsOutside }), this.genMenu()], data, this.toggleMenu), selectionsOutside]);
  }
});

/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdKeyboardArrowDown_vue__ = __webpack_require__(69);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdKeyboardArrowDown_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdKeyboardArrowDown_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdKeyboardArrowDown_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-keyboard-arrow-down',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-keyboard-arrow-down:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-keyboard-arrow-down',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_delayable__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_dependent__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_detachable__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_menuable__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_returnable__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_menu_activator__ = __webpack_require__(209);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixins_menu_generators__ = __webpack_require__(210);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__mixins_menu_keyable__ = __webpack_require__(211);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mixins_menu_position__ = __webpack_require__(212);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__directives_click_outside__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__directives_resize__ = __webpack_require__(8);

// Mixins







// Component level mixins





// Directives



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-menu',

  mixins: [__WEBPACK_IMPORTED_MODULE_6__mixins_menu_activator__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_dependent__["a" /* default */], __WEBPACK_IMPORTED_MODULE_0__mixins_delayable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_detachable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_7__mixins_menu_generators__["a" /* default */], __WEBPACK_IMPORTED_MODULE_8__mixins_menu_keyable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_menuable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_9__mixins_menu_position__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_returnable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__["a" /* default */]],

  directives: {
    ClickOutside: __WEBPACK_IMPORTED_MODULE_10__directives_click_outside__["a" /* default */],
    Resize: __WEBPACK_IMPORTED_MODULE_11__directives_resize__["a" /* default */]
  },

  data: function data() {
    return {
      defaultOffset: 8,
      maxHeightAutoDefault: '200px',
      startIndex: 3,
      stopIndex: 0,
      hasJustFocused: false,
      resizeTimeout: null
    };
  },


  props: {
    auto: Boolean,
    closeOnClick: {
      type: Boolean,
      default: true
    },
    closeOnContentClick: {
      type: Boolean,
      default: true
    },
    disabled: Boolean,
    fullWidth: Boolean,
    fitToContent: Boolean,
    maxHeight: { default: 'auto' },
    offsetX: Boolean,
    offsetY: Boolean,
    openOnClick: {
      type: Boolean,
      default: true
    },
    openOnHover: Boolean,
    origin: {
      type: String,
      default: 'top left'
    },
    transition: {
      type: [Boolean, String],
      default: 'menu-transition'
    }
  },

  computed: {
    calculatedLeft: function calculatedLeft() {
      if (!this.auto) {
        return this.calcLeft();
      }

      return this.calcXOverflow(this.calcLeftAuto()) + 'px';
    },
    calculatedMaxHeight: function calculatedMaxHeight() {
      return this.auto ? '200px' : isNaN(this.maxHeight) ? this.maxHeight : this.maxHeight + 'px';
    },
    calculatedMaxWidth: function calculatedMaxWidth() {
      if (this.fitToContent) {
        var width = this.dimensions.activator.width + this.nudgeWidth + (this.auto ? 16 : 0);
        return width + 'px';
      } else {
        return isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px';
      }
    },
    calculatedMinWidth: function calculatedMinWidth() {
      if (this.minWidth) {
        return isNaN(this.minWidth) ? this.minWidth : this.minWidth + 'px';
      }

      var minWidth = this.dimensions.activator.width + this.nudgeWidth + (this.auto ? 16 : 0);

      if (this.fitToContent) {
        return minWidth + 'px';
      }

      var calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth)) ? minWidth : parseInt(this.calculatedMaxWidth);

      return Math.min(calculatedMaxWidth, minWidth) + 'px';
    },
    calculatedTop: function calculatedTop() {
      if (!this.auto || this.isAttached) {
        return this.calcTop();
      }

      return this.calcYOverflow(this.calcTopAuto()) + 'px';
    },
    styles: function styles() {
      return {
        maxHeight: this.calculatedMaxHeight,
        minWidth: this.calculatedMinWidth,
        maxWidth: this.calculatedMaxWidth,
        top: this.calculatedTop,
        left: this.calculatedLeft,
        transformOrigin: this.origin,
        zIndex: this.zIndex || this.activeZIndex
      };
    }
  },

  watch: {
    activator: function activator(newActivator, oldActivator) {
      this.removeActivatorEvents(oldActivator);
      this.addActivatorEvents(newActivator);
    },
    isContentActive: function isContentActive(val) {
      this.hasJustFocused = val;
    }
  },

  methods: {
    activate: function activate() {
      // This exists primarily for r-select
      // helps determine which tiles to activate
      this.getTiles();
      // Update coordinates and dimensions of menu
      // and its activator
      this.updateDimensions();
      // Start the transition
      requestAnimationFrame(this.startTransition);
      // Once transitioning, calculate scroll position
      setTimeout(this.calculateScroll, 50);
    },
    closeConditional: function closeConditional() {
      return this.isActive && this.closeOnClick;
    },
    onResize: function onResize() {
      if (!this.isActive) {
        return;
      }

      // Account for screen resize
      // and orientation change
      // eslint-disable-next-line no-unused-expressions
      this.$refs.content.offsetWidth;
      this.updateDimensions();

      // When resizing to a smaller width
      // content width is evaluated before
      // the new activator width has been
      // set, causing it to not size properly
      // hacky but will revisit in the future
      clearTimeout(this.resizeTimeout);
      this.resizeTimeout = setTimeout(this.updateDimensions, 100);
    }
  },

  render: function render(h) {
    var data = {
      staticClass: 'menu',
      class: {
        'menu_disabled': this.disabled
      },
      style: {
        display: this.fullWidth ? 'block' : 'inline-block'
      },
      directives: [{
        arg: 500,
        name: 'resize',
        value: this.onResize
      }],
      on: {
        keydown: this.changeListIndex
      }
    };

    return h('div', data, [this.genActivator(), this.genTransition()]);
  }
});

/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Delayable
 *
 * @mixin
 *
 * Changes the open or close
 * delay time for elements
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    return {
      openTimeout: null,
      closeTimeout: null
    };
  },

  props: {
    openDelay: {
      type: [Number, String],
      default: 0
    },
    closeDelay: {
      type: [Number, String],
      default: 200
    }
  },

  methods: {
    /**
     * Clear any pending delay
     * timers from executing
     *
     * @return {void}
     */
    clearDelay: function clearDelay() {
      clearTimeout(this.openTimeout);
      clearTimeout(this.closeTimeout);
    },

    /**
     * Runs callback after
     * a specified delay
     *
     * @param  {String}   type
     * @param  {Function} cb
     *
     * @return {void}
     */
    runDelay: function runDelay(type, cb) {
      this.clearDelay();

      var delay = parseInt(this[type + "Delay"], 10);

      this[type + "Timeout"] = setTimeout(cb, delay);
    }
  }
});

/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__positionable__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stackable__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_helpers__ = __webpack_require__(1);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };





/* eslint-disable object-property-newline */
var dimensions = {
  activator: {
    top: 0, left: 0,
    bottom: 0, right: 0,
    width: 0, height: 0,
    offsetTop: 0, scrollHeight: 0
  },
  content: {
    top: 0, left: 0,
    bottom: 0, right: 0,
    width: 0, height: 0,
    offsetTop: 0, scrollHeight: 0
  },
  hasWindow: false
};
/* eslint-enable object-property-newline */

/**
 * Menuable
 *
 * @mixin
 *
 * Used for fixed or absolutely positioning
 * elements within the DOM
 * Can calculate X and Y axis overflows
 * As well as be manually positioned
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'menuable',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__positionable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__stackable__["a" /* default */]],

  data: function data() {
    return {
      absoluteX: 0,
      absoluteY: 0,
      dimensions: Object.assign({}, dimensions),
      isContentActive: false,
      pageYOffset: 0,
      stackClass: 'menuable__content__active',
      stackMinZIndex: 6
    };
  },

  props: {
    activator: {
      default: null,
      validator: function validator(val) {
        return ['string', 'object'].includes(typeof val === 'undefined' ? 'undefined' : _typeof(val));
      }
    },
    allowOverflow: Boolean,
    maxWidth: {
      type: [Number, String],
      default: 'auto'
    },
    minWidth: [Number, String],
    nudgeBottom: {
      type: Number,
      default: 0
    },
    nudgeLeft: {
      type: [Number, String],
      default: 0
    },
    nudgeRight: {
      type: [Number, String],
      default: 0
    },
    nudgeTop: {
      type: [Number, String],
      default: 0
    },
    nudgeWidth: {
      type: [Number, String],
      default: 0
    },
    offsetOverflow: Boolean,
    positionX: {
      type: Number,
      default: null
    },
    positionY: {
      type: Number,
      default: null
    },
    zIndex: {
      type: [Number, String],
      default: null
    }
  },

  computed: {
    computedLeft: function computedLeft() {
      var a = this.dimensions.activator;
      var c = this.dimensions.content;
      var minWidth = a.width < c.width ? c.width : a.width;
      var left = 0;

      left += this.left ? a.left - (minWidth - a.width) : a.left;

      if (this.offsetX) {
        left += this.left ? -a.width : a.width;
      }
      if (this.nudgeLeft) {
        left -= parseInt(this.nudgeLeft);
      }
      if (this.nudgeRight) {
        left += parseInt(this.nudgeRight);
      }

      return left;
    },
    computedTop: function computedTop() {
      var a = this.dimensions.activator;
      var c = this.dimensions.content;
      var top = this.top ? a.bottom - c.height : a.top;

      if (!this.isAttached) {
        top += this.pageYOffset;
      }
      if (this.offsetY) {
        top += this.top ? -a.height : a.height;
      }
      if (this.nudgeTop) {
        top -= this.nudgeTop;
      }
      if (this.nudgeBottom) {
        top += this.nudgeBottom;
      }

      return top;
    },
    hasActivator: function hasActivator() {
      return !!this.$slots.activator || this.activator;
    },
    isAttached: function isAttached() {
      return this.attach !== false;
    }
  },

  watch: {
    disabled: function disabled(val) {
      val && this.callDeactivate();
    },
    isActive: function isActive(val) {
      if (this.disabled) {
        return;
      }

      val ? this.callActivate() : this.callDeactivate();
    }
  },

  beforeMount: function beforeMount() {
    this.checkForWindow();
  },


  methods: {
    absolutePosition: function absolutePosition() {
      return {
        offsetTop: 0,
        scrollHeight: 0,
        top: this.positionY || this.absoluteY,
        bottom: this.positionY || this.absoluteY,
        left: this.positionX || this.absoluteX,
        right: this.positionX || this.absoluteX,
        height: 0,
        width: 0
      };
    },
    activate: function activate() {},
    calcLeft: function calcLeft() {
      return (this.isAttached ? this.computedLeft : this.calcXOverflow(this.computedLeft)) + 'px';
    },
    calcTop: function calcTop() {
      return (this.isAttached ? this.computedTop : this.calcYOverflow(this.computedTop)) + 'px';
    },
    calcXOverflow: function calcXOverflow(left) {
      var parsedMaxWidth = isNaN(parseInt(this.maxWidth)) ? 0 : parseInt(this.maxWidth);
      var innerWidth = this.getInnerWidth();
      var maxWidth = Math.max(this.dimensions.content.width, parsedMaxWidth);
      var totalWidth = left + maxWidth;
      var availableWidth = totalWidth - innerWidth;

      if ((!this.left || this.right) && availableWidth > 0) {
        left = innerWidth - maxWidth - (innerWidth > 600 ? 30 : 12) // Account for scrollbar
        ;
      }

      if (left < 0) {
        left = 12;
      }

      return left;
    },
    calcYOverflow: function calcYOverflow(top) {
      var documentHeight = this.getInnerHeight();
      var toTop = this.pageYOffset + documentHeight;
      var activator = this.dimensions.activator;
      var contentHeight = this.dimensions.content.height;
      var totalHeight = top + contentHeight;
      var isOverflowing = toTop < totalHeight;

      // If overflowing bottom and offset
      // TODO: set 'bottom' position instead of 'top'
      if (isOverflowing && this.offsetOverflow) {
        top = this.pageYOffset + (activator.top - contentHeight);
        // If overflowing bottom
      } else if (isOverflowing && !this.allowOverflow) {
        top = toTop - contentHeight - 12;
        // If overflowing top
      } else if (top < this.pageYOffset && !this.allowOverflow) {
        top = this.pageYOffset + 12;
      }

      return top < 12 ? 12 : top;
    },
    callActivate: function callActivate() {
      if (!this.hasWindow) {
        return;
      }

      this.activate();
    },
    callDeactivate: function callDeactivate() {
      this.isContentActive = false;

      this.deactivate();
    },
    checkForWindow: function checkForWindow() {
      var _this = this;

      if (!this.hasWindow) {
        this.hasWindow = typeof window !== 'undefined';
      }

      if (this.hasWindow) {
        this.$nextTick(function (_) {
          _this.pageYOffset = _this.getOffsetTop();
        });
      }
    },
    deactivate: function deactivate() {},
    getActivator: function getActivator() {
      if (this.activator) {
        return typeof this.activator === 'string' ? document.querySelector(this.activator) : Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["z" /* resolveElement */])(this.activator);
      }

      return this.$refs.activator.children.length > 0 ? this.$refs.activator.children[0] : this.$refs.activator;
    },
    getInnerHeight: function getInnerHeight() {
      if (!this.hasWindow) {
        return 0;
      }

      return window.innerHeight || document.documentElement.clientHeight;
    },
    getInnerWidth: function getInnerWidth() {
      if (!this.hasWindow) {
        return 0;
      }

      return window.innerWidth;
    },
    getOffsetTop: function getOffsetTop() {
      if (!this.hasWindow) {
        return 0;
      }

      return window.pageYOffset || document.documentElement.scrollTop;
    },
    getRoundedBoundedClientRect: function getRoundedBoundedClientRect(el) {
      var rect = el.getBoundingClientRect();
      return {
        top: Math.round(rect.top),
        left: Math.round(rect.left),
        bottom: Math.round(rect.bottom),
        right: Math.round(rect.right),
        width: Math.round(rect.width),
        height: Math.round(rect.height)
      };
    },
    measure: function measure(el, selector) {
      el = selector ? el.querySelector(selector) : el;

      if (!el || !this.hasWindow) {
        return null;
      }

      var rect = this.getRoundedBoundedClientRect(el);

      // Account for activator margin
      if (this.isAttached) {
        var style = window.getComputedStyle(el);

        rect.left = parseInt(style.marginLeft);
        rect.top = parseInt(style.marginTop);
      }

      return rect;
    },
    sneakPeek: function sneakPeek(cb) {
      var _this2 = this;

      requestAnimationFrame(function () {
        var el = _this2.$refs.content;

        if (!el || _this2.isShown(el)) {
          return cb();
        }

        el.style.display = 'inline-block';
        cb();
        el.style.display = 'none';
      });
    },
    startTransition: function startTransition() {
      var _this3 = this;

      requestAnimationFrame(function () {
        return _this3.isContentActive = true;
      });
    },
    isShown: function isShown(el) {
      return el.style.display !== 'none';
    },
    updateDimensions: function updateDimensions() {
      var _this4 = this;

      this.checkForWindow();

      var dimensions = {};

      // Activator should already be shown
      dimensions.activator = !this.hasActivator || this.absolute ? this.absolutePosition() : this.measure(this.getActivator());

      // Display and hide to get dimensions
      this.sneakPeek(function () {
        dimensions.content = _this4.measure(_this4.$refs.content);

        _this4.dimensions = dimensions;
      });
    }
  }
});

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RChip_vue__ = __webpack_require__(74);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(213)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RChip_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rabota_md_svg_vue_dist_navigation_MdClose_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RBtn_RBtn_vue__ = __webpack_require__(4);




// Icons


// Components


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-chip',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__["a" /* default */]],

  components: {
    MdClose: __WEBPACK_IMPORTED_MODULE_2__rabota_md_svg_vue_dist_navigation_MdClose_vue__["default"],
    RBtn: __WEBPACK_IMPORTED_MODULE_3__RBtn_RBtn_vue__["a" /* default */]
  },

  props: {
    close: Boolean,
    disabled: Boolean,
    label: Boolean,
    outline: Boolean,
    round: Boolean,
    // Used for selects/tagging
    selected: Boolean,
    small: Boolean,
    textColor: String,
    value: {
      type: Boolean,
      default: true
    }
  },

  computed: {
    classes: function classes() {
      var classes = this.addBackgroundColorClassChecks({
        'r-chip_disabled': this.disabled,
        'r-chip_selected': this.selected,
        'r-chip_label': this.label,
        'r-chip_outline': this.outline,
        'r-chip_round': this.round,
        'r-chip_small': this.small,
        'r-chip_removable': this.close,
        'r-chip_default': !this.color
      });

      return this.textColor || this.outline ? this.addTextColorClassChecks(classes, this.textColor ? 'textColor' : 'color') : classes;
    }
  },

  methods: {
    genClose: function genClose(h) {
      var _this = this;

      var data = {
        staticClass: 'r-chip__close',
        props: {
          icon: true,
          flat: true,
          ripple: true
        },
        on: {
          click: function click(e) {
            e.stopPropagation();

            _this.$emit('input', false);
          }
        }
      };

      return h('r-btn', data, [h('md-close')]);
    },
    genContent: function genContent(h) {
      var children = [this.$slots.default];

      this.close && children.push(this.genClose(h));

      return h('span', {
        staticClass: 'r-chip__content'
      }, children);
    }
  },

  render: function render(h) {
    var data = {
      staticClass: 'r-chip',
      'class': this.classes,
      attrs: { tabindex: this.disabled ? -1 : 0 },
      directives: [{
        name: 'show',
        value: this.isActive
      }],
      on: this.$listeners
    };

    return h('span', data, [this.genContent(h)]);
  }
});

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RList_vue__ = __webpack_require__(76);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(214)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RList_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_registrable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RVirtualScroller_RVirtualScroller_vue__ = __webpack_require__(77);



// Components


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-list',

  mixins: [Object(__WEBPACK_IMPORTED_MODULE_0__mixins_registrable__["b" /* provide */])('list')],

  components: {
    RVirtualScroller: __WEBPACK_IMPORTED_MODULE_1__RVirtualScroller_RVirtualScroller_vue__["a" /* default */]
  },

  provide: function provide() {
    return {
      'listClick': this.listClick
    };
  },


  data: function data() {
    return {
      groups: []
    };
  },

  props: {
    // r-list props
    dense: Boolean,
    expand: Boolean,
    subheader: Boolean,
    threeLine: Boolean,
    twoLine: Boolean,
    virtual: Boolean,

    // virtual scroller props
    items: Array,
    renderers: {
      default: null
    },
    itemHeight: {
      type: [Number, String],
      default: null
    },
    maxContentHeight: {
      type: [Number, String],
      default: 300
    },
    anyHeight: Boolean,
    typeField: {
      type: String,
      default: 'type'
    },
    keyField: {
      type: String,
      default: 'id'
    },
    heightField: {
      type: String,
      default: 'height'
    },
    mainTag: {
      type: String,
      default: 'div'
    },
    containerTag: {
      type: String,
      default: 'div'
    },
    containerClass: {
      default: null
    },
    contentTag: {
      type: String,
      default: 'div'
    },
    contentClass: {
      default: null
    },
    pageMode: {
      type: Boolean,
      default: false
    },
    buffer: {
      type: [Number, String],
      default: 200
    },
    poolSize: {
      type: [Number, String],
      default: 2000
    },
    prerender: {
      type: [Number, String],
      default: 0
    },
    emitUpdate: {
      type: Boolean,
      default: false
    },
    delayPreviousItems: {
      type: Boolean,
      default: false
    }
  },

  computed: {
    classes: function classes() {
      return {
        'list_dense': this.dense,
        'list_subheader': this.subheader,
        'list_two-line': this.twoLine,
        'list_three-line': this.threeLine,
        'list_virtual-scroller': this.virtual
      };
    }
  },

  methods: {
    register: function register(uid, cb) {
      this.groups.push({ uid: uid, cb: cb });
    },
    unregister: function unregister(uid) {
      var index = this.groups.findIndex(function (g) {
        return g.uid === uid;
      });

      if (index > -1) {
        this.groups.splice(index, 1);
      }
    },
    listClick: function listClick(uid, isBooted) {
      if (this.expand) {
        return;
      }

      for (var i = this.groups.length; i--;) {
        this.groups[i].cb(uid);
      }
    }
  },

  render: function render(h) {
    var children = [];
    var data = {
      staticClass: 'list',
      'class': this.classes
    };
    var tag = 'ul';

    // items property required by virtual scroller
    // claim it by checking the property
    if (this.virtual && this.items) {
      tag = 'r-virtual-scroller';

      Object.assign(data, {
        props: {
          items: this.items,
          renderers: this.renderers,
          itemHeight: this.itemHeight,
          maxContentHeight: this.maxContentHeight,
          anyHeight: this.anyHeight,
          typeField: this.typeField,
          keyField: this.keyField,
          heightField: this.heightField,
          mainTag: this.mainTag,
          containerTag: this.containerTag,
          containerClass: this.containerClass,
          contentTag: this.contentTag,
          contentClass: this.contentClass,
          pageMode: this.pageMode,
          poolSize: this.poolSize,
          buffer: this.buffer,
          prerender: this.prerender,
          emitUpdate: this.emitUpdate,
          delayPreviousItems: this.delayPreviousItems
        },
        scopedSlots: this.$scopedSlots
      });
    } else {
      children.push(this.$slots.default);
    }
    return h(tag, data, children);
  }
});

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RVirtualScroller_vue__ = __webpack_require__(78);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(215)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RVirtualScroller_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_virtual_repeater__ = __webpack_require__(216);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0_vue_virtual_repeater__["a"]; });



/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTile_vue__ = __webpack_require__(80);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTile_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 80 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_routable__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__ = __webpack_require__(10);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_colorable__ = __webpack_require__(2);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-list-tile',

  mixins: [__WEBPACK_IMPORTED_MODULE_3__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_0__mixins_routable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_rippleable__["a" /* default */]],

  inheritAttrs: false,

  data: function data() {
    return {
      proxyClass: 'list__tile_active'
    };
  },

  props: {
    activeClass: {
      type: String,
      default: 'text_primary'
    },
    avatar: Boolean,
    inactive: Boolean,
    tag: String,
    ripple: {
      type: Boolean,
      default: false
    }
  },

  computed: {
    listClasses: function listClasses() {
      return this.disabled ? 'text_disabled' : this.color ? this.addTextColorClassChecks() : this.defaultColor;
    },
    classes: function classes() {
      return _defineProperty({
        'list__tile': true,
        'list__tile_link': this.isLink && !this.inactive,
        'list__tile_avatar': this.avatar,
        'list__tile_disabled': this.disabled,
        'list__tile_active': !this.to && this.isActive
      }, this.activeClass, this.isActive);
    },
    isLink: function isLink() {
      return this.href || this.to || this.$listeners && (this.$listeners.click || this.$listeners['!click']);
    }
  },

  render: function render(h) {
    var isRouteLink = !this.inactive && this.isLink;

    var _ref2 = isRouteLink ? this.generateRouteLink() : {
      tag: this.tag || 'div',
      data: {
        class: this.classes
      }
    },
        tag = _ref2.tag,
        data = _ref2.data;

    data.attrs = Object.assign({}, data.attrs, this.$attrs);

    return h('li', {
      'class': this.listClasses,
      attrs: {
        disabled: this.disabled
      },
      on: _extends({}, this.$listeners)
    }, [h(tag, data, this.$slots.default)]);
  }
});

/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileSubTitle_vue__ = __webpack_require__(82);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileSubTitle_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 82 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('list__tile__sub-title', 'div'));

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileContent_vue__ = __webpack_require__(84);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileContent_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('list__tile__content', 'div'));

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileAction_vue__ = __webpack_require__(86);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileAction_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 86 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }



/* harmony default export */ __webpack_exports__["a"] = ({
  functional: true,

  name: 'r-list-tile-action',

  render: function render(h, _ref) {
    var data = _ref.data,
        children = _ref.children;

    var classes = ['list__tile__action'];
    if (data.staticClass) {
      var staticClassList = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])(data.staticClass || '').split(' ');
      if (staticClassList.length) {
        classes.push.apply(classes, _toConsumableArray(staticClassList));
      }
    }
    if ((children || []).length > 1) {
      classes.push('list__tile__action_stack');
    }
    data.staticClass = classes.join(' ');

    return h('div', data, children);
  }
});

/***/ }),
/* 87 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSubheader_vue__ = __webpack_require__(88);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(217)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSubheader_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 88 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-subheader',

  functional: true,

  props: {
    inset: Boolean
  },

  render: function render(h, _ref) {
    var data = _ref.data,
        children = _ref.children,
        props = _ref.props;

    data.staticClass = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])('subheader ' + (data.staticClass || '')).trim();

    if (props.inset) {
      data.staticClass += ' subheader_inset';
    }

    return h('li', data, children);
  }
});

/***/ }),
/* 89 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDivider_vue__ = __webpack_require__(90);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(218)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDivider_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-divider',

  functional: true,

  props: {
    inset: Boolean,
    shifted: Boolean,
    xmedium: Boolean,
    large: Boolean,
    xlarge: Boolean,
    small: Boolean,
    reset: Boolean
  },

  render: function render(h, _ref) {
    var props = _ref.props,
        data = _ref.data,
        children = _ref.children;

    var rootTag = children ? 'div' : 'hr';
    var innerText = children ? [h('div', { class: 'divider__text' }, children)] : [];

    data.staticClass = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])('divider ' + (data.staticClass || ''));

    data.class = {
      'divider_inset': props.inset,
      'divider_shifted': props.shifted,
      'divider_xmedium': props.xmedium,
      'divider_large': props.large,
      'divider_xlarge': props.xlarge,
      'divider_small': props.small,
      'divider_reset': props.reset
    };

    return h(rootTag, data, innerText);
  }
});

/***/ }),
/* 91 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_navigation_MdClose_vue__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_hardware_MdKeyboardArrowDown_vue__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RTextField_RTextField__ = __webpack_require__(44);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RMenu_RMenu__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RList__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins__ = __webpack_require__(234);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_dependent__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_helpers__ = __webpack_require__(1);
function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

// Icons



// Components




// Component's mixins


// Mixins


// Utils


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-suggester',

  inheritAttrs: false,

  mixins: [__WEBPACK_IMPORTED_MODULE_5__mixins__["a" /* Computed */], __WEBPACK_IMPORTED_MODULE_5__mixins__["b" /* Props */], __WEBPACK_IMPORTED_MODULE_6__mixins_dependent__["a" /* default */]],

  components: {
    MdClose: __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_navigation_MdClose_vue__["default"],
    MdKeyboardArrowDown: __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_hardware_MdKeyboardArrowDown_vue__["default"],

    RTextField: __WEBPACK_IMPORTED_MODULE_2__RTextField_RTextField__["a" /* default */],
    RMenu: __WEBPACK_IMPORTED_MODULE_3__RMenu_RMenu__["a" /* default */],
    RList: __WEBPACK_IMPORTED_MODULE_4__RList__["a" /* RList */],
    RListTile: __WEBPACK_IMPORTED_MODULE_4__RList__["b" /* RListTile */],
    RListTileSubTitle: __WEBPACK_IMPORTED_MODULE_4__RList__["c" /* RListTileSubTitle */]
  },

  directives: {},

  data: function data() {
    return {
      // input
      lazyValue: this.value,
      lazySearch: this.getItemText(this.value),
      lazyItems: [],

      // input states
      focused: false,
      errored: false,

      // menu
      isActive: false,
      menuIndex: -1,

      // misc
      lastRequestId: null,
      cache: new Map(),
      needsToCloseMenu: false,

      inputHeight: 34 // default input height, we'll recompute this later
    };
  },


  methods: {
    onFocus: function onFocus(ev) {
      if (this.fetchDefaultItems && !this.lazySearch) {
        this.search('');
      }

      // console.log( '[focus]' );
      this.focused = true;
      this.$emit('focus', ev);
    },
    onBlur: function onBlur(ev) {
      // console.log( '[blur]' );
      this.focused = false;
      this.$emit('blur', ev);

      if (!this.isActive) {
        this.save();
      }
    },
    blur: function blur() {
      // console.log( '[force blur]' );
      var input = Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["s" /* getObjectValueByPath */])(this.$refs, 'input.$refs.input');

      if (input) {
        input.blur();
      }
    },
    onKeyDown: function onKeyDown(ev) {
      // on tab pressed
      if (ev.keyCode === 9) {
        this.onTabPressed(ev);
      } else if (ev.keyCode === 27) {
        this.onEscPressed(ev);
      } else if (ev.keyCode === 13) {
        this.onEnterPressed(ev);
      } else if ([38, 40].includes(ev.keyCode)) {
        // on arrow keys pressed
        this.changeMenuIndex(ev);
      }
    },
    onTabPressed: function onTabPressed(ev) {
      // console.log( '[tab]' );
      this.isActive = false;
    },
    onEscPressed: function onEscPressed(ev) {
      if (this.isActive) {
        this.isActive = false;
      } else {
        this.reset();
      }
    },
    onEnterPressed: function onEnterPressed(ev) {
      var _this = this;

      // console.log( '[enter] before', this.lazyValue, this.menuIndex );

      if (this.isActive && this.lazyItems.length) {
        var selected = false;
        var selectedValue = null;

        if (this.menuIndex === -1 && this.selectFirstOnEnter) {
          if (this.isFirstItemIncludeValue) {
            selectedValue = this.lazyItems[0];
            selected = true;
          }
        } else if (this.menuIndex >= 0) {
          var menuIndex = Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["b" /* clampNumber */])(this.menuIndex, 0, this.lazyItems.length - 1);

          selectedValue = this.lazyItems[menuIndex];
          selected = true;
        }

        if (selected) {
          if (selectedValue) {
            this.selectItem(selectedValue);
          }
        }

        this.blur();
        this.updateMenuOpenState();
      } else if (!this.strictValue) {
        this.save();
        this.blur();
      }

      // console.log( '[enter] after', this.lazyValue, this.menuIndex );

      this.$nextTick(function (_) {
        _this.$emit('enter', _this.lazyValue, _this.menuIndex, _this.lazySearch, ev);
      });
    },
    changeMenuIndex: function changeMenuIndex(ev) {
      var direction = ev.keyCode === 38 ? -1 : 1;
      if ((this.menuIndex === -1 || this.menuIndex === 0) && direction === -1) {
        this.menuIndex = this.lazyItems.length - 1;
      } else if (this.menuIndex === this.lazyItems.length - 1 && direction === 1) {
        this.menuIndex = 0;
      } else {
        this.menuIndex += direction;
      }

      ev.preventDefault();

      this.updateMenuScroll();
    },
    resetMenuIndex: function resetMenuIndex() {
      this.menuIndex = -1;
      this.updateMenuScroll();
    },
    updateMenuScroll: function updateMenuScroll() {
      var menu = this.$refs.menu;
      var menuElement = Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["z" /* resolveElement */])(menu.$refs.content);
      var list = menuElement && menuElement.querySelector('.list');

      if (!list) {
        return;
      }

      var item = list.childNodes[this.menuIndex];

      var scrollTop = 0;

      if (item) {
        var offset = Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["p" /* getElementRelativeOffset */])(item, menuElement);
        scrollTop = Math.max(0, offset.top - Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["n" /* getElementHeight */])(item));
      }

      menuElement.scrollTop = scrollTop;
    },
    selectItemOnClick: function selectItemOnClick(item) {
      this.$emit('selectOnClick', item);

      this.selectItem(item);
    },
    selectItem: function selectItem(item) {
      var oldValue = this.lazyValue;

      this.lazyValue = item;
      this.updateSearchValue();

      if (this.lazyValue !== oldValue) {
        // console.log( '[select] (selectItem)', item );
        this.$emit('select', item);
      }
    },
    getItemValue: function getItemValue(value) {
      if (!value) {
        value = this.lazyValue;
      }

      return typeof value === 'string' ? value : value[this.itemValue] || value;
    },
    getItemText: function getItemText() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.lazyValue;

      if (!value) {
        return '';
      }

      return typeof value === 'string' ? value : value[this.itemText] || value;
    },
    updateSearchValue: function updateSearchValue() {
      this.lazySearch = this.getItemText(this.lazyValue);
    },
    updateMenuOpenState: function updateMenuOpenState() {
      this.isActive = !this.needsToCloseMenu && this.focused && this.lazyItems.length > 0 && this.lazySearch.length > 0;

      if (this.needsToCloseMenu) {
        this.needsToCloseMenu = false;
      }
    },
    updateInputHeight: function updateInputHeight() {
      var input = Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["s" /* getObjectValueByPath */])(this.$refs, 'input');

      if (!input) {
        return;
      }

      this.inputHeight = Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["n" /* getElementHeight */])(Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["z" /* resolveElement */])(input));
    },
    search: function search(query) {
      var _this2 = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var args;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // console.log( `[RSuggester] searching: "${query}"` );

                args = [query];

                if (!_this2.isAsync) {
                  _context.next = 7;
                  break;
                }

                if (!(_this2.isCacheable && _this2.hasCache(query))) {
                  _context.next = 6;
                  break;
                }

                _this2.lazyItems = _this2.getCache(query);
                _this2.lastRequestId = Date.now();

                return _context.abrupt('return');

              case 6:

                args.push(Date.now());

              case 7:
                return _context.abrupt('return', (_this2.isAsync ? _this2.fetch.apply(_this2, args) : Promise.resolve(_this2.filterItems.apply(_this2, args))).then(function (response) {
                  if (Array.isArray(response)) {
                    _this2.lazyItems = response;

                    if (_this2.isCacheable) {
                      _this2.setCache(query, response);
                    }
                  } else if (Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["w" /* isObject */])(response)) {
                    var _response$items = response.items,
                        items = _response$items === undefined ? [] : _response$items,
                        requestId = response.requestId;


                    if (!requestId || !_this2.lastRequestId || _this2.lastRequestId < requestId) {
                      _this2.lazyItems = items;
                      _this2.lastRequestId = requestId;
                    }

                    if (_this2.isCacheable) {
                      _this2.setCache(query, items);
                    }
                  }
                }));

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this2);
      }))();
    },
    filterItems: function filterItems(query) {
      var _this3 = this;

      var items = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.items;

      return items.filter(function (item) {
        return _this3.getItemText(item).toLowerCase().includes(query.toLowerCase());
      });
    },
    findAppropriateValue: function findAppropriateValue() {
      var _this4 = this;

      return this.lazyItems.find(function (item) {
        return _this4.makeTextSearchable(_this4.getItemText(item)) === _this4.makeTextSearchable(_this4.lazySearch);
      });
    },
    save: function save() {
      // console.log( '[save]' );
      // console.log( '[save] before', this.lazyValue );

      if (this.isSearchEmpty) {
        this.reset();
      } else {
        var foundValue = this.findAppropriateValue();

        if (foundValue) {
          this.selectItem(foundValue);
        } else if (this.strictValue) {
          this.updateSearchValue();
        } else {
          this.lazyValue = this.lazySearch;
        }
      }

      // console.log( '[save] after', this.lazyValue );
    },
    onMenuInput: function onMenuInput(val) {
      // console.log( '[menu @input]', val );
      if (!val) {
        this.save();
        this.isActive = false;
      }
    },
    clearText: function clearText(text) {
      return Object(__WEBPACK_IMPORTED_MODULE_7__util_helpers__["h" /* ensureString */])(text).toString();
    },
    makeTextSearchable: function makeTextSearchable(text) {
      return this.clearText(text).toLowerCase();
    },
    reset: function reset() {
      this.lazyValue = null;
      this.updateSearchValue();
    },
    hasCache: function hasCache(query) {
      return this.cache.has(this.makeTextSearchable(query));
    },
    getCache: function getCache(query) {
      return this.cache.get(this.makeTextSearchable(query));
    },
    setCache: function setCache(query, value) {
      this.cache.set(this.makeTextSearchable(query), value);
    }
  },

  computed: {
    isAsync: function isAsync() {
      return !!this.fetch;
    },
    isCacheable: function isCacheable() {
      return this.isAsync && this.cacheItems;
    },
    isSearchEmpty: function isSearchEmpty() {
      return !this.clearText(this.lazySearch);
    },
    openOnClickAvailable: function openOnClickAvailable() {
      return this.fetchDefaultItems || Boolean(this.lazySearch && this.lazySearch.length > 0 && this.lazyItems.length > 0);
    },
    isFirstItemIncludeValue: function isFirstItemIncludeValue() {
      if (!this.lazyItems.length) {
        return;
      }

      var textFirstItem = this.makeTextSearchable(this.getItemText(this.lazyItems[0]));
      var textSearch = this.makeTextSearchable(this.lazySearch);

      return textFirstItem.indexOf(textSearch) === 0;
    }
  },

  watch: {
    lazySearch: function lazySearch(value) {
      var _this5 = this;

      value = this.clearText(value);

      this.$emit('search', value);

      if (!value) {
        this.lazyItems = [];
        return this.isActive = false;
      }

      this.isActive = !!this.lazyItems.length && this.focused;

      return this.search(value).then(function (_) {
        _this5.$nextTick(function (_) {
          _this5.updateMenuOpenState();
        });
      });
    },
    lazyValue: function lazyValue(value) {
      this.$emit('input', value);
    },
    value: function value(_value) {
      this.lazyValue = _value;
      this.updateSearchValue();
    },
    isActive: function isActive(value) {
      // console.log( '[watch]', 'isActive', value );
      if (!value) {
        this.menuIndex = -1;
      } else {
        this.updateInputHeight();
      }
    }
  },

  mounted: function mounted() {
    // If instance is being destroyed
    // do not run mounted functions
    if (this._isDestroyed) {
      return;
    }

    this.lazyItems = [];

    this.updateInputHeight();

    if (this.isAsync && this.value && this.prefetch) {
      this.search(this.lazySearch);
    }
  },
  beforeDestroy: function beforeDestroy() {}
});

/***/ }),
/* 92 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RList_vue__ = __webpack_require__(75);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RListGroup_vue__ = __webpack_require__(230);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RListTile_vue__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RListTileContent_vue__ = __webpack_require__(83);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RListTileTitle_vue__ = __webpack_require__(232);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RListTileSubTitle_vue__ = __webpack_require__(81);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__RListTileAction_vue__ = __webpack_require__(85);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__RListTileActionText_vue__ = __webpack_require__(233);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__RList_vue__["a"]; });
/* unused harmony reexport RListGroup */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_2__RListTile_vue__["a"]; });
/* unused harmony reexport RListTileContent */
/* unused harmony reexport RListTileTitle */
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return __WEBPACK_IMPORTED_MODULE_5__RListTileSubTitle_vue__["a"]; });
/* unused harmony reexport RListTileAction */
/* unused harmony reexport RListTileActionText */











/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RList_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-list', __WEBPACK_IMPORTED_MODULE_0__RList_vue__["a" /* default */]);
  Vue.component('r-list-group', __WEBPACK_IMPORTED_MODULE_1__RListGroup_vue__["a" /* default */]);
  Vue.component('r-list-tile', __WEBPACK_IMPORTED_MODULE_2__RListTile_vue__["a" /* default */]);
  Vue.component('r-list-tile-action', __WEBPACK_IMPORTED_MODULE_6__RListTileAction_vue__["a" /* default */]);
  Vue.component('r-list-tile-action-text', __WEBPACK_IMPORTED_MODULE_7__RListTileActionText_vue__["a" /* default */]);
  Vue.component('r-list-tile-content', __WEBPACK_IMPORTED_MODULE_3__RListTileContent_vue__["a" /* default */]);
  Vue.component('r-list-tile-sub-title', __WEBPACK_IMPORTED_MODULE_5__RListTileSubTitle_vue__["a" /* default */]);
  Vue.component('r-list-tile-title', __WEBPACK_IMPORTED_MODULE_4__RListTileTitle_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["d"] = (__WEBPACK_IMPORTED_MODULE_0__RList_vue__["a" /* default */]);

/***/ }),
/* 93 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_bootable__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_registrable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__transitions__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__rabota_md_svg_vue_dist_navigation_MdArrowDropDown_vue__ = __webpack_require__(231);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Mixins




// Transitions


/** Icons */


/**
 * List group
 *
 * @component
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-list-group',

  components: {
    MdArrowDropDown: __WEBPACK_IMPORTED_MODULE_4__rabota_md_svg_vue_dist_navigation_MdArrowDropDown_vue__["default"]
  },

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_bootable__["a" /* default */], Object(__WEBPACK_IMPORTED_MODULE_2__mixins_registrable__["a" /* inject */])('list', 'r-list-group', 'r-list'), __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__["a" /* default */]],

  inject: ['listClick'],

  data: function data() {
    return {
      groups: []
    };
  },

  props: {
    activeClass: {
      type: String,
      default: 'text_primary'
    },
    appendIcon: {
      type: [String, Object],
      default: 'md-keyboard-arrow-down'
    },
    disabled: Boolean,
    group: String,
    noAction: Boolean,
    prependIcon: [String, Object],
    subGroup: Boolean
  },

  computed: {
    groupClasses: function groupClasses() {
      return {
        'list__group_active': this.isActive,
        'list__group_disabled': this.disabled
      };
    },
    headerClasses: function headerClasses() {
      return {
        'list__group__header_active': this.isActive,
        'list__group__header_sub-group': this.subGroup
      };
    },
    itemsClasses: function itemsClasses() {
      return {
        'list__group__items_no-action': this.noAction
      };
    }
  },

  watch: {
    isActive: function isActive(val) {
      if (!this.subGroup && val) {
        this.listClick(this._uid);
      }
    },
    $route: function $route(to) {
      var isActive = this.matchRoute(to.path);

      if (this.group) {
        if (isActive && this.isActive !== isActive) {
          this.listClick(this._uid);
        }

        this.isActive = isActive;
      }
    }
  },

  mounted: function mounted() {
    this.list.register(this._uid, this.toggle);

    if (this.group && this.$route && this.value == null) {
      this.isActive = this.matchRoute(this.$route.path);
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.list.unregister(this._uid);
  },


  methods: {
    click: function click() {
      if (this.disabled) {
        return;
      }

      this.isActive = !this.isActive;
    },
    genIcon: function genIcon(icon) {
      return this.$createElement(icon);
    },
    genAppendIcon: function genAppendIcon() {
      var icon = !this.subGroup ? this.appendIcon : '';

      return this.$createElement('li', {
        staticClass: 'list__group__header__append-icon'
      }, [this.$slots.appendIcon || this.genIcon(icon)]);
    },
    genGroup: function genGroup() {
      return this.$createElement('ul', {
        staticClass: 'list__group__header',
        'class': this.headerClasses,
        on: Object.assign({}, {
          click: this.click
        }, this.$listeners),
        ref: 'item'
      }, [this.genPrependIcon(), this.$slots.activator, this.genAppendIcon()]);
    },
    genItems: function genItems() {
      return this.$createElement('ul', {
        staticClass: 'list__group__items',
        'class': this.itemsClasses,
        directives: [{
          name: 'show',
          value: this.isActive
        }],
        ref: 'group'
      }, this.showLazyContent(this.$slots.default));
    },
    genPrependIcon: function genPrependIcon() {
      var icon = this.prependIcon ? this.prependIcon : this.subGroup ? 'md-arrow-drop-down' : '';

      return this.$createElement('li', {
        staticClass: 'list__group__header__prepend-icon',
        'class': _defineProperty({}, this.activeClass, this.isActive)
      }, [this.$slots.prependIcon || this.genIcon(icon)]);
    },
    toggle: function toggle(uid) {
      this.isActive = this._uid === uid;
    },
    matchRoute: function matchRoute(to) {
      if (!this.group) {
        return false;
      }
      return to.match(this.group) !== null;
    }
  },

  render: function render(h) {
    return h('li', {
      staticClass: 'list__group',
      'class': this.groupClasses
    }, [this.genGroup(), h(__WEBPACK_IMPORTED_MODULE_3__transitions__["a" /* RExpandTransition */], [this.genItems()])]);
  }
});

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-arrow-drop-down',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-arrow-drop-down:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-arrow-drop-down',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M7 10l5 5 5-5z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 95 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('list__tile__title', 'div'));

/***/ }),
/* 96 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('list__tile__action-text', 'span'));

/***/ }),
/* 97 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return defaultMenuOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Props; });
var defaultMenuOptions = {
  closeOnClick: true,
  closeOnContentClick: true,
  fitToContent: true,
  maxHeight: '300px',
  openOnClick: false,
  lazy: true,
  transition: null,
  offsetY: false,
  offsetOverflow: false,
  allowOverflow: true
};

var Props = {
  props: {
    value: [Object, String, Number],
    items: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    disabled: Boolean,
    readonly: Boolean,
    clearable: Boolean,
    contentClass: String,
    lazy: Boolean,
    itemText: {
      type: String,
      default: 'name'
    },
    itemValue: {
      type: String,
      default: 'id'
    },
    placeholder: String,
    label: String,

    fitToContent: {
      type: Boolean,
      default: true
    },
    menuOptions: {
      type: Object,
      default: function _default() {
        return defaultMenuOptions;
      }
    },
    fetch: Function,
    fetchDefaultItems: Boolean,
    cacheItems: {
      type: Boolean,
      default: true
    },
    prefetch: Boolean,
    strictValue: Boolean,
    selectFirstOnEnter: Boolean,
    color: String,
    zIndex: String
  }
};

/***/ }),
/* 98 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RLoading_RLoading_vue__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_scroll__ = __webpack_require__(14);







/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-infinity-scroll',

  directives: {
    Scroll: __WEBPACK_IMPORTED_MODULE_2__directives_scroll__["a" /* default */]
  },

  components: {
    RLoading: __WEBPACK_IMPORTED_MODULE_1__RLoading_RLoading_vue__["a" /* default */]
  },

  props: {
    maxAutoLoadings: {
      type: Number,
      default: Infinity
    },
    loading: Boolean,
    canLoadNext: Boolean,
    containerOffset: {
      type: Number,
      default: 100
    }
  },

  data: function data() {
    return {
      loadingNumber: 0
    };
  },

  computed: {
    canAutoLoad: function canAutoLoad() {
      return this.loadingNumber <= this.maxAutoLoadings;
    }
  },

  methods: {
    onScroll: function onScroll(event) {
      var container = this.$refs.container;
      var containerBottom = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["o" /* getElementOffset */])(container).top + container.offsetHeight;
      var scrollTop = this.windowScrollTop();
      var bottom = scrollTop + window.innerHeight;

      if (bottom + this.containerOffset > containerBottom && !this.loading && this.canAutoLoad && this.canLoadNext) {
        this.loadNext();
      }
    },
    loadNext: function loadNext() {
      this.loadingNumber++;
      this.$emit('load', { loadingNumber: this.loadingNumber });
    },
    windowScrollTop: function windowScrollTop() {
      return window.pageYOffset || document.documentElement.offsetTop || 0;
    }
  }
});

/***/ }),
/* 99 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_navigation_MdChevronLeft_vue__ = __webpack_require__(248);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdChevronRight_vue__ = __webpack_require__(249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RTabsItems_vue__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RTab_vue__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RTabItem_vue__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RTabsSlider_vue__ = __webpack_require__(108);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__mixins_tabs_computed__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__mixins_tabs_generators__ = __webpack_require__(251);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__mixins_tabs_props__ = __webpack_require__(252);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__mixins_tabs_touch__ = __webpack_require__(253);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__mixins_tabs_watchers__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__mixins_ssr_bootable__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__mixins_registrable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__directives_resize__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__directives_touch__ = __webpack_require__(9);

// Components







// Component level mixins






// Mixins




// Directives



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-tabs',

  components: {
    MdChevronLeft: __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_navigation_MdChevronLeft_vue__["default"],
    MdChevronRight: __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdChevronRight_vue__["default"],
    RTabsItems: __WEBPACK_IMPORTED_MODULE_2__RTabsItems_vue__["a" /* default */],
    RTab: __WEBPACK_IMPORTED_MODULE_3__RTab_vue__["a" /* default */],
    RTabItem: __WEBPACK_IMPORTED_MODULE_4__RTabItem_vue__["a" /* default */],
    RTabsSlider: __WEBPACK_IMPORTED_MODULE_5__RTabsSlider_vue__["a" /* default */]
  },

  mixins: [Object(__WEBPACK_IMPORTED_MODULE_13__mixins_registrable__["b" /* provide */])('tabs'), __WEBPACK_IMPORTED_MODULE_11__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_12__mixins_ssr_bootable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_6__mixins_tabs_computed__["a" /* default */], __WEBPACK_IMPORTED_MODULE_8__mixins_tabs_props__["a" /* default */], __WEBPACK_IMPORTED_MODULE_7__mixins_tabs_generators__["a" /* default */], __WEBPACK_IMPORTED_MODULE_9__mixins_tabs_touch__["a" /* default */], __WEBPACK_IMPORTED_MODULE_10__mixins_tabs_watchers__["a" /* default */]],

  directives: {
    Resize: __WEBPACK_IMPORTED_MODULE_14__directives_resize__["a" /* default */],
    Touch: __WEBPACK_IMPORTED_MODULE_15__directives_touch__["a" /* default */]
  },

  provide: function provide() {
    return {
      tabClick: this.tabClick,
      color: this.color,
      sliderColor: this.sliderColor,
      tabProxy: this.tabProxy,
      registerItems: this.registerItems,
      unregisterItems: this.unregisterItems
    };
  },
  data: function data() {
    return {
      prependIconVisible: false,
      appendIconVisible: false,
      bar: [],
      content: [],
      isBooted: false,
      isOverflowing: false,
      lazyValue: this.value,
      resizeTimeout: null,
      reverse: false,
      scrollOffset: 0,
      sliderWidth: null,
      sliderLeft: null,
      startX: 0,
      tabsContainer: null,
      tabs: [],
      tabItems: null,
      transitionTime: 300
    };
  },


  methods: {
    checkPrependIcon: function checkPrependIcon() {
      return this.scrollOffset > 0;
    },
    checkAppendIcon: function checkAppendIcon() {
      // Check one scroll ahead to know the width of right-most item
      var container = this.$refs.container;
      var wrapper = this.$refs.wrapper;

      return container.clientWidth > this.scrollOffset + wrapper.clientWidth;
    },
    callSlider: function callSlider() {
      this.setOverflow();
      if (this.hideSlider || !this.activeTab) {
        return false;
      }

      // Give screen time to paint
      var action = this.activeTab.action;
      var activeTab = action === this.activeTab ? this.activeTab : this.tabs.find(function (tab) {
        return tab.action === action;
      });

      if (!activeTab) {
        return;
      }
      this.sliderWidth = activeTab.$el.scrollWidth;
      this.sliderLeft = activeTab.$el.offsetLeft;
    },
    onContainerResize: function onContainerResize() {
      var _this = this;

      clearTimeout(this.resizeTimeout);
      this.resizeTimeout = setTimeout(function (_) {
        _this.callSlider();
      }, this.transitionTime);
    },
    onResize: function onResize() {
      var _this2 = this;

      if (this._isDestroyed) {
        return;
      }

      clearTimeout(this.resizeTimeout);
      this.resizeTimeout = setTimeout(function (_) {
        _this2.callSlider();
        _this2.checkIcons();
        _this2.scrollIntoView();
      }, this.transitionTime);
    },
    overflowCheck: function overflowCheck(e, fn) {
      this.isOverflowing && fn(e);
    },
    scrollTo: function scrollTo(direction) {
      this.scrollOffset = this.newOffset(direction);
    },
    setOverflow: function setOverflow() {
      this.isOverflowing = this.$refs.bar.clientWidth < this.$refs.container.clientWidth;
    },
    findActiveLink: function findActiveLink() {
      var _this3 = this;

      if (!this.tabs.length || this.lazyValue) {
        return;
      }

      var activeIndex = this.tabs.findIndex(function (tabItem, index) {
        var id = tabItem.action === tabItem ? index.toString() : tabItem.action;
        return id === _this3.lazyValue || tabItem.$el.firstChild.className.indexOf(_this3.activeClass) > -1;
      });

      var index = activeIndex > -1 ? activeIndex : 0;
      var tab = this.tabs[index];

      /* istanbul ignore next */
      // There is not a reliable way to test
      this.inputValue = tab.action === tab ? index : tab.action;
    },
    parseNodes: function parseNodes() {
      var item = [];
      var items = [];
      var slider = [];
      var tab = [];
      var length = (this.$slots.default || []).length;

      for (var i = 0; i < length; i++) {
        var vnode = this.$slots.default[i];

        /* istanbul ignore else */
        if (vnode.componentOptions) {
          switch (vnode.componentOptions.Ctor.options.name) {
            case 'r-tabs-slider':
              slider.push(vnode);
              break;
            case 'r-tabs-items':
              items.push(vnode);
              break;
            case 'r-tab-item':
              item.push(vnode);
              break;
            // case 'r-tab' - intentionally omitted
            default:
              tab.push(vnode);
          }
        }
      }

      return { tab: tab, slider: slider, items: items, item: item };
    },
    register: function register(options) {
      this.tabs.push(options);
    },
    scrollIntoView: function scrollIntoView() {
      if (!this.activeTab) {
        return false;
      }

      var _activeTab$$el = this.activeTab.$el,
          clientWidth = _activeTab$$el.clientWidth,
          offsetLeft = _activeTab$$el.offsetLeft;

      var wrapperWidth = this.$refs.wrapper.clientWidth;
      var totalWidth = wrapperWidth + this.scrollOffset;
      var itemOffset = clientWidth + offsetLeft;
      var additionalOffset = clientWidth * 0.3;

      /* instanbul ignore else */
      if (offsetLeft < this.scrollOffset) {
        this.scrollOffset = Math.max(offsetLeft - additionalOffset, 0);
      } else if (totalWidth < itemOffset) {
        this.scrollOffset -= totalWidth - itemOffset - additionalOffset;
      }
    },
    tabClick: function tabClick(tab) {
      this.inputValue = tab.action === tab ? this.tabs.indexOf(tab) : tab.action;
      this.scrollIntoView();
    },
    tabProxy: function tabProxy(val) {
      this.inputValue = val;
    },
    registerItems: function registerItems(fn) {
      this.tabItems = fn;
    },
    unregisterItems: function unregisterItems() {
      this.tabItems = null;
    },
    unregister: function unregister(tab) {
      this.tabs = this.tabs.filter(function (o) {
        return o !== tab;
      });
    },
    updateTabs: function updateTabs() {
      for (var index = this.tabs.length; --index >= 0;) {
        this.tabs[index].toggle(this.target);
      }

      this.setOverflow();
    },
    checkIcons: function checkIcons() {
      this.prependIconVisible = this.checkPrependIcon();
      this.appendIconVisible = this.checkAppendIcon();
    }
  },

  mounted: function mounted() {
    this.callSlider();
    this.checkIcons();
  },
  render: function render(h) {
    var _parseNodes = this.parseNodes(),
        tab = _parseNodes.tab,
        slider = _parseNodes.slider,
        items = _parseNodes.items,
        item = _parseNodes.item;

    return h('div', {
      staticClass: 'tabs',
      directives: [{
        name: 'resize',
        arg: 400,
        modifiers: { quiet: true },
        value: this.onResize
      }]
    }, [this.genBar([this.hideSlider ? null : this.genSlider(slider), tab]), this.genItems(items, item)]);
  }
});

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-chevron-left',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-chevron-left:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-chevron-left',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-chevron-right',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-chevron-right:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-chevron-right',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 102 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabsItems_vue__ = __webpack_require__(103);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabsItems_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 103 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_registrable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__directives_touch__ = __webpack_require__(9);

// Mixins


// Directives


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-tabs-items',

  mixins: [Object(__WEBPACK_IMPORTED_MODULE_0__mixins_registrable__["b" /* provide */])('tabs')],

  directives: { Touch: __WEBPACK_IMPORTED_MODULE_1__directives_touch__["a" /* default */] },

  inject: {
    registerItems: {
      default: null
    },
    tabProxy: {
      default: null
    },
    unregisterItems: {
      default: null
    }
  },

  data: function data() {
    return {
      items: [],
      lazyValue: this.value,
      reverse: false
    };
  },


  props: {
    cycle: Boolean,
    touchless: Boolean,
    value: [Number, String]
  },

  computed: {
    activeIndex: function activeIndex() {
      for (var i = 0, length = this.items.length; i < length; ++i) {
        var item = this.items[i];
        if ((item.id || i.toString()) === this.lazyValue) {
          return i;
        }
      }
      return -1;
    },
    activeItem: function activeItem() {
      if (!this.items.length) {
        return undefined;
      }

      return this.items[this.activeIndex];
    },

    inputValue: {
      get: function get() {
        return this.lazyValue;
      },
      set: function set(val) {
        val = val.toString();

        this.lazyValue = val;

        if (this.tabProxy) {
          this.tabProxy(val);
        } else {
          this.$emit('input', val);
        }
      }
    }
  },

  watch: {
    activeIndex: function activeIndex(current, previous) {
      this.reverse = current < previous;
      this.updateItems();
    },
    value: function value(val) {
      this.lazyValue = val;
    }
  },

  mounted: function mounted() {
    this.registerItems && this.registerItems(this.changeModel);
  },
  beforeDestroy: function beforeDestroy() {
    this.unregisterItems && this.unregisterItems();
  },


  methods: {
    changeModel: function changeModel(val) {
      this.inputValue = val;
    },
    next: function next(cycle) {
      var nextIndex = this.activeIndex + 1;

      if (!this.items[nextIndex]) {
        if (!cycle) {
          return;
        }
        nextIndex = 0;
      }

      this.inputValue = this.items[nextIndex].id || nextIndex;
    },
    prev: function prev(cycle) {
      var prevIndex = this.activeIndex - 1;

      if (!this.items[prevIndex]) {
        if (!cycle) {
          return;
        }
        prevIndex = this.items.length - 1;
      }

      this.inputValue = this.items[prevIndex].id || prevIndex;
    },
    onSwipe: function onSwipe(action) {
      this[action](this.cycle);
    },
    register: function register(item) {
      this.items.push(item);
    },
    unregister: function unregister(item) {
      this.items = this.items.filter(function (i) {
        return i !== item;
      });
    },
    updateItems: function updateItems() {
      for (var index = this.items.length; --index >= 0;) {
        this.items[index].toggle(this.lazyValue, this.reverse, this.isBooted, index);
      }
      this.isBooted = true;
    }
  },

  render: function render(h) {
    var _this = this;

    var data = {
      staticClass: 'tabs__items',
      directives: []
    };

    !this.touchless && data.directives.push({
      name: 'touch',
      value: {
        left: function left() {
          return _this.onSwipe('next');
        },
        right: function right() {
          return _this.onSwipe('prev');
        }
      }
    });

    return h('div', data, this.$slots.default);
  }
});

/***/ }),
/* 104 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTab_vue__ = __webpack_require__(105);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTab_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_routable__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_registrable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_helpers__ = __webpack_require__(1);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Mixins




// Utilities


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-tab',

  mixins: [Object(__WEBPACK_IMPORTED_MODULE_2__mixins_registrable__["a" /* inject */])('tabs', 'r-tab', 'r-tabs'), __WEBPACK_IMPORTED_MODULE_0__mixins_routable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_colorable__["a" /* default */]],

  inject: ['tabClick', 'color', 'sliderColor'],

  data: function data() {
    return {
      isActive: false
    };
  },


  props: {
    activeClass: {
      type: String,
      default: 'tabs__item_active'
    },
    ripple: [Boolean, Object]
  },

  computed: {
    classes: function classes() {
      var _addTextColorClassChe;

      return this.addTextColorClassChecks((_addTextColorClassChe = {
        'tabs__item': true,
        'tabs__item_disabled': this.disabled
      }, _defineProperty(_addTextColorClassChe, this.activeClass, !this.to && this.isActive), _defineProperty(_addTextColorClassChe, this.color, this.color && !this.to && this.isActive), _addTextColorClassChe));
    },
    action: function action() {
      var to = this.to || this.href;

      if (typeof to === 'string') {
        return to.replace('#', '');
      }
      if (to === Object(to) && (to.hasOwnProperty('name') || to.hasOwnProperty('path'))) {
        return to.name || to.path;
      }

      return this;
    }
  },

  watch: {
    $route: 'onRouteChange'
  },

  mounted: function mounted() {
    this.tabs.register(this);
    this.onRouteChange();
  },
  beforeDestroy: function beforeDestroy() {
    this.tabs.unregister(this);
  },


  methods: {
    click: function click(e) {
      // If user provides an
      // actual link, do not
      // prevent default
      if (this.href && this.href.indexOf('#') > -1) {
        e.preventDefault();
      }

      this.$emit('click', e);

      this.to || this.tabClick(this);
    },
    onRouteChange: function onRouteChange() {
      var _this = this;

      if (!this.to || !this.$refs.link) {
        return;
      }

      var path = '_vnode.data.class.' + this.activeClass;

      this.$nextTick(function () {
        if (Object(__WEBPACK_IMPORTED_MODULE_3__util_helpers__["s" /* getObjectValueByPath */])(_this.$refs.link, path)) {
          _this.tabClick(_this);
        }
      });
    },
    toggle: function toggle(action) {
      this.isActive = action === this || action === this.action;
    }
  },

  render: function render(h) {
    var link = this.generateRouteLink();
    var data = link.data;

    // If disabled, use div as anchor tags do not support
    // being disabled

    var tag = this.disabled ? 'div' : link.tag;

    data.ref = 'link';

    return h('div', {
      staticClass: 'tabs__div'
    }, [h(tag, data, this.$slots.default)]);
  }
});

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabItem_vue__ = __webpack_require__(107);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabItem_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 107 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_bootable__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__transitions__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_registrable__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__directives_touch__ = __webpack_require__(9);









/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-tab-item',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_bootable__["a" /* default */], Object(__WEBPACK_IMPORTED_MODULE_2__mixins_registrable__["a" /* inject */])('tabs', 'r-tab-item', 'r-tabs-items')],

  components: {
    RTabTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__["e" /* RTabTransition */],
    RTabReverseTransition: __WEBPACK_IMPORTED_MODULE_1__transitions__["d" /* RTabReverseTransition */]
  },

  directives: {
    Touch: __WEBPACK_IMPORTED_MODULE_3__directives_touch__["a" /* default */]
  },

  data: function data() {
    return {
      isActive: false,
      reverse: false
    };
  },


  props: {
    id: String,
    transition: {
      type: [Boolean, String],
      default: 'tab-transition'
    },
    reverseTransition: {
      type: [Boolean, String],
      default: 'tab-reverse-transition'
    }
  },

  computed: {
    computedTransition: function computedTransition() {
      return this.reverse ? this.reverseTransition : this.transition;
    }
  },

  methods: {
    toggle: function toggle(target, reverse, showTransition, index) {
      this.$el.style.transition = !showTransition ? 'none' : null;
      this.reverse = reverse;
      this.isActive = (this.id || index.toString()) === target;
    }
  },

  mounted: function mounted() {
    this.tabs.register(this);
  },
  beforeDestroy: function beforeDestroy() {
    this.tabs.unregister(this);
  },
  render: function render(h) {
    var data = {
      staticClass: 'tabs__content',
      directives: [{
        name: 'show',
        value: this.isActive
      }],
      domProps: { id: this.id },
      on: this.$listeners
    };

    var div = h('div', data, this.showLazyContent(this.$slots.default));

    if (!this.computedTransition) {
      return div;
    }

    return h('transition', {
      props: { name: this.computedTransition }
    }, [div]);
  }
});

/***/ }),
/* 108 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabsSlider_vue__ = __webpack_require__(109);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabsSlider_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 109 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-tabs-slider',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */]],

  data: function data() {
    return {
      defaultColor: 'primary'
    };
  },

  render: function render(h) {
    return h('div', {
      staticClass: 'tabs__slider',
      'class': this.addBackgroundColorClassChecks()
    });
  }
});

/***/ }),
/* 110 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSmartRender_vue__ = __webpack_require__(111);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(256)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = "data-v-b328e380"
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSmartRender_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_ssr_bootable__ = __webpack_require__(29);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable no-unused-vars */





/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-smart-render',

  mixins: [__WEBPACK_IMPORTED_MODULE_1__mixins_ssr_bootable__["a" /* default */]],

  props: {
    onlyBrowser: Boolean,
    elementWidth: {
      type: [String, Number],
      default: null
    },
    elementHeight: {
      type: [String, Number],
      default: null
    },
    contentClass: String,
    emptyClass: String,
    breakpoints: [String, Array],
    visibilityObserver: {
      type: [Boolean, String, Number],
      default: null
    },
    rootMargin: {
      type: [String, Number, Array],
      default: null
    },
    threshold: {
      type: [Number, Array],
      default: function _default() {
        return Array(101).fill(0).map(function (v, i) {
          return v + i / 100;
        }); // each 1% of visibility change
      }
    },
    debug: {
      type: Boolean,
      default: false
    }
  },

  data: function data() {
    return {
      renderedBefore: false,
      $io: null,
      lazyVisibilityCondition: false
    };
  },

  methods: {
    showContentLazy: function showContentLazy(content) {
      var shouldRender = this.shouldRender;
      if (shouldRender && !this.renderedBefore) {
        this.hasRenderListener && this.$emit('render', this.$el);
        this.renderedBefore = true;
      }
      return shouldRender ? this.wrapContent(content) : this.emptyContent;
    },
    wrapContent: function wrapContent(content) {
      var debugContent = this.debug ? this.debugInfo : null;
      return this.$createElement('div', [content, debugContent]);
    },
    initIntersectionObserver: function initIntersectionObserver() {
      var _this = this;

      this.$io = new IntersectionObserver(function (rectangles) {
        rectangles.forEach(function (rect) {
          if (rect.isIntersecting) {
            _this.hasVisibilityChangeListener && _this.$emit('visibilityChange', rect.intersectionRatio);
            _this.lazyVisibilityCondition = _this.visibilityThreshold <= rect.intersectionRatio;

            if (_this.lazyVisibilityCondition && !_this.hasVisibilityChangeListener) {
              _this.$io.unobserve(_this.$el);
            }
          } else if (_this.lazyVisibilityCondition) {
            _this.lazyVisibilityCondition = false;

            if (_this.hasVisibilityChangeListener) {
              _this.$emit('visibilityChange', 0);
            }
          }
        });
      }, {
        rootMargin: this.rootMarginValues,
        threshold: this.threshold
      });
      // start observing
      this.$io.observe(this.$el);
    },
    evaluateExpression: function evaluateExpression(expression) {
      var _this2 = this;

      var evaluationMapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var operation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'and';

      if (typeof expression === 'string') {
        return evaluationMapping[expression];
      } else if (Array.isArray(expression)) {
        return expression.reduce(function (evaluatedExpression, expression) {
          if (operation === 'and') {
            return evaluatedExpression && _this2.evaluateExpression(expression, evaluationMapping, 'or');
          } else if (operation === 'or') {
            return evaluatedExpression || _this2.evaluateExpression(expression, evaluationMapping, 'or');
          }
        }, operation === 'and');
      }
    },
    evaluateBreakpointsExpression: function evaluateBreakpointsExpression(expression) {
      var operation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'and';

      return this.evaluateExpression(expression, this.$rabotify.breakpoint, operation);
    }
  },

  computed: {
    shouldRender: function shouldRender() {
      if (Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["x" /* isServer */])() || !this.isBooted) {
        return !this.onlyBrowser; // should always render on server if onlyBrowser is false
      }

      // only browser code
      var hasBreakpoints = this.breakpoints && this.breakpoints.length;
      if (this.renderedBefore && !hasBreakpoints) {
        return true;
      }

      var evaluatedBreakpointsExpression = hasBreakpoints ? this.evaluatedBreakpointsExpression : true;

      // when visibility observer prop is not defined - lazyVisibilityCondition is always true
      return this.lazyVisibilityCondition && evaluatedBreakpointsExpression;
    },
    emptyContent: function emptyContent() {
      var data = {};
      if (this.emptyClass) {
        data.class = _defineProperty({}, this.emptyClass, true);
      }
      if (this.elementWidth || this.elementHeight) {
        data.style = _extends({}, this.elementSize);
      }
      var children = [];
      if (this.debug) {
        children.push(this.debugInfo);
      }
      return this.$createElement('div', data, children);
    },
    rootMarginValues: function rootMarginValues() {
      var toProperArray = function toProperArray(array) {
        return array.map(function (val) {
          if (typeof val === 'string') {
            var units = ['px', '%', 'em', 'rem'];
            if (units.some(function (unit) {
              return val.includes(unit);
            })) {
              return val;
            }
          }
          return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["g" /* ensureNumber */])(val) + 'px';
        });
      };

      if (Array.isArray(this.rootMargin)) {
        return toProperArray(this.rootMargin).join(' ');
      } else if (typeof this.rootMargin === 'string') {
        var array = this.rootMargin.split(' ');
        if (array.length > 1) {
          return toProperArray(array).join(' ');
        } else if (array.length === 1) {
          var val = toProperArray(array)[0];
          return val + ' ' + val;
        }
      } else if (typeof this.rootMargin === 'number') {
        return this.rootMargin + 'px ' + this.rootMargin + 'px';
      }
      return '0px 0px';
    },
    visibilityThreshold: function visibilityThreshold() {
      var value = 0;
      if (typeof this.visibilityObserver === 'number') {
        value = this.visibilityObserver;
      } else {
        var numberValue = Number(this.visibilityObserver);
        value = !Number.isNaN(numberValue) ? numberValue : 0; // rest cases will return only 0
      }
      if (value > 1) {
        // if the value > 1 then it's percents (i know ;()
        value = value / 100;
      }
      return Math.min(1, Math.max(0, value));
    },
    elementSize: function elementSize() {
      return {
        width: this.elementWidth || '0px',
        height: this.elementHeight || '0px'
      };
    },
    evaluatedBreakpointsExpression: function evaluatedBreakpointsExpression() {
      return this.evaluateBreakpointsExpression(this.breakpoints);
    },
    hasRenderListener: function hasRenderListener() {
      return Object.keys(this.$listeners).includes('render');
    },
    hasVisibilityChangeListener: function hasVisibilityChangeListener() {
      return Object.keys(this.$listeners).includes('visibilityChange');
    },
    debugInfo: function debugInfo() {
      var text = '<h4>Debug info</h4>';
      var mode = this.onlyBrowser ? 'client' : 'server and client';
      var breakpoints = typeof this.breakpoint === 'string' ? this.breakpoints : JSON.stringify(this.breakpoints);
      var visibilityObserver = this.visibilityObserver;
      var rootMargin = this.rootMarginValues;
      var renderRestore = this.renderRestore || false;
      var threshold = Array.isArray(this.threshold) && this.threshold.length > 5 ? this.threshold.slice(0, 2).concat('...').concat(this.threshold.slice(-2)) : this.threshold;

      text += 'Mode: <b>' + mode + '</b>';
      text += '\nShould render: <b>' + this.shouldRender + '</b>';
      text += '\nKeep size: [<b>' + (this.elementWidth || '0px') + ', ' + (this.elementHeight || '0px') + '</b>]';
      text += '\nEmpty class: <b>' + (this.emptyClass || 'none') + '</b>';
      text += '\nBreakpoints: <b>' + (breakpoints || 'none') + '</b>';

      if (visibilityObserver !== null) {
        text += '\nVisibility Observer: <b>' + (visibilityObserver !== null ? visibilityObserver || true : 'none') + '</b>';
        text += '\nRoot Margin for Visibility Observer: <b>' + (rootMargin || '0px 0px') + '</b>';
        text += '\nVisibility Restore: <b>' + renderRestore + '</b>';
        text += '\nThresholds: <b>' + threshold + '</b>';
      }

      var data = {
        staticClass: 'debug-content',
        domProps: {
          innerHTML: text
        }
      };
      return this.$createElement('pre', data);
    }
  },

  mounted: function mounted() {
    var _this3 = this;

    // mounted function runs only in browser

    // running in another tick to prevent hydration error (nuxt)
    this.$nextTick(function () {
      // in case there is no IntersectionObserver API in user's browser
      // we need to omit visibility observer logic
      if (_this3.visibilityObserver !== null && _this3.visibilityObserver !== false && typeof window.IntersectionObserver !== 'undefined') {
        _this3.initIntersectionObserver();
      } else {
        _this3.lazyVisibilityCondition = true;
      }
    });
  },
  render: function render(h) {
    return this.showContentLazy(this.$slots.default);
  }
});

/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_delayable__ = __webpack_require__(71);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_dependent__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__mixins_detachable__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__mixins_menuable__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__ = __webpack_require__(5);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// Mixins







/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-tooltip',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_delayable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_2__mixins_dependent__["a" /* default */], __WEBPACK_IMPORTED_MODULE_3__mixins_detachable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_4__mixins_menuable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_5__mixins_toggleable__["a" /* default */]],

  data: function data() {
    return {
      calculatedMinWidth: 0,
      closeDependents: false
    };
  },

  props: {
    debounce: {
      type: [Number, String],
      default: 0
    },
    disabled: Boolean,
    fixed: {
      type: Boolean,
      default: true
    },
    white: Boolean,
    openDelay: {
      type: [Number, String],
      default: 200
    },
    tag: {
      type: String,
      default: 'span'
    },
    transition: String,
    zIndex: {
      default: null
    }
  },

  computed: {
    calculatedLeft: function calculatedLeft() {
      var _dimensions = this.dimensions,
          activator = _dimensions.activator,
          content = _dimensions.content;

      var unknown = !this.bottom && !this.left && !this.top && !this.right;
      var left = 0;

      if (this.top || this.bottom || unknown) {
        left = activator.left + activator.width / 2 - content.width / 2;
      } else if (this.left || this.right) {
        left = activator.left + (this.right ? activator.width : -content.width) + (this.right ? 10 : -10);
      }

      return this.calcXOverflow(left) + 'px';
    },
    calculatedTop: function calculatedTop() {
      var _dimensions2 = this.dimensions,
          activator = _dimensions2.activator,
          content = _dimensions2.content;

      var top = 0;

      if (this.top || this.bottom) {
        top = activator.top - (this.top ? activator.height : -activator.height) - (this.top ? 8 : -10);
      } else if (this.left || this.right) {
        top = activator.top + activator.height / 2 - content.height / 2;
      }

      return this.calcYOverflow(top + this.pageYOffset) + 'px';
    },
    classes: function classes() {
      return {
        'tooltip_top': this.top,
        'tooltip_right': this.right,
        'tooltip_bottom': this.bottom,
        'tooltip_left': this.left
      };
    },
    computedTransition: function computedTransition() {
      if (this.transition) {
        return this.transition;
      }
      if (this.top) {
        return 'slide-y-reverse-transition';
      }
      if (this.right) {
        return 'slide-x-transition';
      }
      if (this.bottom) {
        return 'slide-y-transition';
      }
      if (this.left) {
        return 'slide-x-reverse-transition';
      }
    },
    offsetY: function offsetY() {
      return this.top || this.bottom;
    },
    offsetX: function offsetX() {
      return this.left || this.right;
    },
    styles: function styles() {
      return {
        left: this.calculatedLeft,
        maxWidth: isNaN(this.maxWidth) ? this.maxWidth : this.maxWidth + 'px',
        opacity: this.isActive ? 1 : 0,
        top: this.calculatedTop,
        zIndex: this.zIndex || this.activeZIndex
      };
    }
  },

  methods: {
    activate: function activate() {
      // Update coordinates and dimensions of menu
      // and its activator
      this.updateDimensions();
      // Start the transition
      requestAnimationFrame(this.startTransition);
    }
  },

  mounted: function mounted() {
    this.value && this.callActivate();
  },
  render: function render(h) {
    var _addBackgroundColorCl,
        _this = this;

    var tooltip = h('div', {
      staticClass: 'tooltip__content',
      'class': this.addBackgroundColorClassChecks((_addBackgroundColorCl = {}, _defineProperty(_addBackgroundColorCl, this.contentClass, true), _defineProperty(_addBackgroundColorCl, 'menuable__content__active', this.isActive), _defineProperty(_addBackgroundColorCl, 'tooltip__content_white', this.white), _addBackgroundColorCl)),
      style: this.styles,
      attrs: this.attrs,
      directives: [{
        name: 'show',
        value: this.isContentActive
      }],
      ref: 'content'
    }, this.$slots.default);

    return h(this.tag, {
      staticClass: 'tooltip',
      'class': this.classes
    }, [h('transition', {
      props: {
        name: this.computedTransition
      }
    }, [tooltip]), h('span', {
      on: this.disabled ? {} : {
        mouseenter: function mouseenter() {
          _this.runDelay('open', function () {
            return _this.isActive = true;
          });
        },
        mouseleave: function mouseleave() {
          _this.runDelay('close', function () {
            return _this.isActive = false;
          });
        }
      },
      ref: 'activator'
    }, this.$slots.activator)]);
  }
});

/***/ }),
/* 113 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_ssr_bootable__ = __webpack_require__(29);

// Mixins


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-content',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_ssr_bootable__["a" /* default */]],

  props: {
    tag: {
      type: String,
      default: 'main'
    }
  },

  computed: {
    styles: function styles() {
      var _$rabotify$applicatio = this.$rabotify.application,
          bar = _$rabotify$applicatio.bar,
          top = _$rabotify$applicatio.top,
          right = _$rabotify$applicatio.right,
          footer = _$rabotify$applicatio.footer,
          bottom = _$rabotify$applicatio.bottom,
          left = _$rabotify$applicatio.left;


      return {
        paddingTop: top + bar + 'px',
        paddingRight: right + 'px',
        paddingBottom: footer + bottom + 'px',
        paddingLeft: left + 'px'
      };
    }
  },

  render: function render(h) {
    var data = {
      staticClass: 'content',
      'class': this.classes,
      style: this.styles,
      ref: 'content'
    };

    return h(this.tag, data, [h('div', { staticClass: 'content_wrap' }, this.$slots.default)]);
  }
});

/***/ }),
/* 114 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__grid__ = __webpack_require__(30);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__grid__["a" /* default */])('container'));

/***/ }),
/* 115 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__grid__ = __webpack_require__(30);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__grid__["a" /* default */])('flex'));

/***/ }),
/* 116 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__grid__ = __webpack_require__(30);



/* harmony default export */ __webpack_exports__["a"] = (Object(__WEBPACK_IMPORTED_MODULE_0__grid__["a" /* default */])('layout'));

/***/ }),
/* 117 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RImageError__ = __webpack_require__(269);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_alert_MdErrorOutline_vue__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rabota_md_svg_vue_dist_navigation_MdRefresh_vue__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RBtn_RBtn_vue__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__rabota_loader__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_helpers__ = __webpack_require__(1);
function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }











/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-image',

  components: {
    RImageError: __WEBPACK_IMPORTED_MODULE_0__RImageError__["a" /* default */],

    MdErrorOutline: __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_alert_MdErrorOutline_vue__["default"],
    MdRefresh: __WEBPACK_IMPORTED_MODULE_2__rabota_md_svg_vue_dist_navigation_MdRefresh_vue__["default"],

    RBtn: __WEBPACK_IMPORTED_MODULE_3__RBtn_RBtn_vue__["a" /* default */]
  },

  props: {
    image: Object,
    src: String,
    thumbnailSrc: String,

    alt: String,
    width: [Number, String],
    height: [Number, String],

    round: Boolean,
    mode: {
      type: String,
      default: 'image' // background, image
    },
    imageClip: {
      type: String,
      default: 'cover' // cover, contain
    },
    tag: {
      type: String,
      default: 'div'
    },
    showError: Boolean
  },

  data: function data() {
    return {
      originalLoaded: false,
      errored: false,
      containerWidth: 0,

      defaultImageClip: 'cover'
    };
  },

  methods: {
    start: function start() {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (_this.hasThumbnail) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt('return', _this.originalLoaded = true);

              case 2:
                return _context.abrupt('return', _this.loadImage(_this.imageObject.src).then(function (_) {
                  _this.originalLoaded = true;
                }).catch(function (error) {
                  _this.updateContainerWidth();
                  _this.errored = true;
                  console.warn('[RImage]', error);
                }));

              case 3:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    },
    loadImage: function loadImage(imageUrl) {
      var imageLoader = new __WEBPACK_IMPORTED_MODULE_4__rabota_loader__["a" /* ImageLoader */]();
      return imageLoader.retry(imageUrl, 4);
    },
    retry: function retry() {
      this.reset();
      this.start();
    },
    repairMeasureValue: function repairMeasureValue() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      var measureUnit = value.toString().replace(/(\d+)/, '');

      if (typeof value === 'number' || !measureUnit) {
        return value + 'px';
      }

      return value;
    },
    reset: function reset() {
      this.errored = false;
      this.originalLoaded = false;
    },
    getContainerWidth: function getContainerWidth() {
      var container = this.$refs.container;
      return container && Object(__WEBPACK_IMPORTED_MODULE_5__util_helpers__["r" /* getElementWidth */])(container) || 0;
    },
    updateContainerWidth: function updateContainerWidth() {
      this.containerWidth = this.getContainerWidth();
    }
  },

  computed: {
    classes: function classes() {
      return {
        'r-image': true,
        'r-image_thumbnail': this.hasThumbnail && !this.originalLoaded && !this.errored,
        'r-image_original': (!this.hasThumbnail || this.originalLoaded) && !this.errored,
        'r-image_round': this.round,
        'r-image_background': this.isBackgroundMode,
        'r-image_errored': this.errored
      };
    },
    styles: function styles() {
      var styles = {};

      if (this.width) {
        Object.assign(styles, { width: this.repairMeasureValue(this.width) });
      }
      if (this.height) {
        Object.assign(styles, { height: this.repairMeasureValue(this.height) });
      }

      return styles;
    },
    imageStyles: function imageStyles() {
      var styles = {};

      if (this.imageClip !== this.defaultImageClip) {
        Object.assign(styles, { 'object-fit': this.imageClip });
      }

      return styles;
    },
    backgroundStyles: function backgroundStyles() {
      var styles = {};
      var image = this.imageObject;

      if (!this.originalLoaded && this.hasThumbnail) {
        Object.assign(styles, { 'background-image': 'url(' + image.thumbnailSrc + ')' });
      }

      if (this.originalLoaded || !this.hasThumbnail) {
        Object.assign(styles, { 'background-image': 'url(' + image.src + ')' });
      }

      if (this.imageClip !== this.defaultImageClip) {
        Object.assign(styles, { 'background-size': this.imageClip + ' !important' });
      }

      return styles;
    },
    imageObject: function imageObject() {
      if (this.isWebpMode) {
        return this.image;
      }

      if (this.image) {
        return this.image;
      }

      return {
        src: this.src,
        thumbnailSrc: this.thumbnailSrc
      };
    },
    hasThumbnail: function hasThumbnail() {
      var image = this.imageObject;

      return image.thumbnailSrc && image.src !== image.thumbnailSrc;
    },
    isImgMode: function isImgMode() {
      return this.mode === 'image';
    },
    isBackgroundMode: function isBackgroundMode() {
      return this.mode === 'background';
    },
    isWebpMode: function isWebpMode() {
      return this.mode === 'webp';
    }
  },

  watch: {
    '$rabotify.breakpoint': function $rabotifyBreakpoint() {
      this.updateContainerWidth();
    }
  },

  mounted: function mounted() {
    this.start();
  }
});

/***/ }),
/* 118 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_alert_MdErrorOutline_vue__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdRefresh_vue__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RBtn_RBtn_vue__ = __webpack_require__(4);






/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-image-error',

  components: {
    MdErrorOutline: __WEBPACK_IMPORTED_MODULE_0__rabota_md_svg_vue_dist_alert_MdErrorOutline_vue__["default"],
    MdRefresh: __WEBPACK_IMPORTED_MODULE_1__rabota_md_svg_vue_dist_navigation_MdRefresh_vue__["default"],

    RBtn: __WEBPACK_IMPORTED_MODULE_2__RBtn_RBtn_vue__["a" /* default */]
  },

  props: {
    errored: Boolean,
    containerWidth: Number,
    round: Boolean
  },

  methods: {
    retry: function retry() {
      this.$emit('retry');
    }
  },

  computed: {
    classes: function classes() {
      return {
        'r-image-error': true,
        'r-image-error_round': this.round
      };
    },
    isContainerSmall: function isContainerSmall() {
      return this.containerWidth < 320;
    }
  }
});

/***/ }),
/* 119 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdErrorOutline_vue__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdErrorOutline_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdErrorOutline_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdErrorOutline_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-error-outline',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-error-outline:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-error-outline',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 121 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdRefresh_vue__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdRefresh_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdRefresh_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdRefresh_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  name: 'md-refresh',

  serverCacheKey: function serverCacheKey(props) {
    return 'md-refresh:' + (props.color || 'default') + ':' + props.width + ':' + props.height + ':' + (props.className || 'icon');
  },

  props: {
    className: [Object, Array, String],
    width: {
      type: Number,
      'default': 24
    },
    height: {
      type: Number,
      'default': 24
    },
    viewBox: {
      type: String,
      'default': '0 0 24 24'
    },
    color: String
  },

  render: function render(h) {
    var data = {
      staticClass: 'icon md-icon md-refresh',
      'class': this.className,
      attrs: {
        width: this.width,
        height: this.height,
        viewBox: this.viewBox,
        xmlns: 'http://www.w3.org/2000/svg'
      }
    };

    return h('svg', data, [h('path', {
      attrs: {
        d: 'M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z'
      },
      style: {
        fill: this.color
      }
    })]);
  }
};

/***/ }),
/* 123 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src__ = __webpack_require__(272);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__src__["a"]; });
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_0__src__["b"]; });


/***/ }),
/* 124 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RetryOperation; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_helpers__ = __webpack_require__(273);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }



var OPERATION_ID = 1;

var RetryOperation = function () {
  function RetryOperation() {
    _classCallCheck(this, RetryOperation);

    this._id = OPERATION_ID++;
  }

  /**
   * @type {number}
   * @private
   */


  _createClass(RetryOperation, [{
    key: 'action',


    /**
     * @abstract
     * @param {Function} operation
     * @param {number} attempt
     * @return {Promise<*>}
     * @private
     */
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operation, attempt) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', Promise.resolve().then(function (_) {
                  return operation && operation(attempt);
                }));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function action(_x, _x2) {
        return _ref.apply(this, arguments);
      }

      return action;
    }()

    /**
     * @param {*} operation
     * @param {number?} attemptsNumber
     * @returns {Promise<*>}
     */

  }, {
    key: 'retry',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(operation) {
        var _this = this;

        var attemptsNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt('return', this._retryUntil(function (attempt) {
                  return _this.action(operation, attempt);
                }, attemptsNumber));

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function retry(_x3) {
        return _ref2.apply(this, arguments);
      }

      return retry;
    }()

    /**
     * @returns {number}
     */

  }, {
    key: '_retryUntil',


    /**
     * @param {function} asyncAction
     * @param {number} maxAttemptsNumber
     * @returns {Promise<*>}
     * @private
     */
    value: function () {
      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(asyncAction, maxAttemptsNumber) {
        var attempts, result;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                maxAttemptsNumber = Object(__WEBPACK_IMPORTED_MODULE_0__utils_helpers__["a" /* clampNumber */])(maxAttemptsNumber, 1);

                attempts = 0;

              case 2:
                if (!(attempts < maxAttemptsNumber)) {
                  _context3.next = 18;
                  break;
                }

                _context3.prev = 3;
                _context3.next = 6;
                return asyncAction(attempts);

              case 6:
                result = _context3.sent;
                return _context3.abrupt('return', result);

              case 10:
                _context3.prev = 10;
                _context3.t0 = _context3['catch'](3);

                console.error('[RetryOperation] attempt failed', _context3.t0.errors || _context3.t0);
                attempts++;
                _context3.next = 16;
                return Object(__WEBPACK_IMPORTED_MODULE_0__utils_helpers__["b" /* delay */])(25 * Math.pow(Math.min(10, attempts), 2) + 500);

              case 16:
                _context3.next = 2;
                break;

              case 18:
                throw new Error('[RetryOperation] operation failed');

              case 19:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this, [[3, 10]]);
      }));

      function _retryUntil(_x5, _x6) {
        return _ref3.apply(this, arguments);
      }

      return _retryUntil;
    }()
  }, {
    key: 'id',
    get: function get() {
      return this._id;
    }
  }]);

  return RetryOperation;
}();

/***/ }),
/* 125 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_colorable__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__mixins_positionable__ = __webpack_require__(17);





/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-toast',

  mixins: [__WEBPACK_IMPORTED_MODULE_0__mixins_colorable__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__mixins_toggleable__["a" /* default */], Object(__WEBPACK_IMPORTED_MODULE_2__mixins_positionable__["b" /* factory */])(['absolute', 'top', 'bottom', 'left', 'right'])],

  data: function data() {
    return {
      activeTimeout: {}
    };
  },


  props: {
    autoHeight: Boolean,
    multiLine: Boolean,
    closeDelay: {
      type: Number,
      default: 6000
    },
    vertical: Boolean
  },

  computed: {
    classes: function classes() {
      return {
        'r-toast_active': this.isActive,
        'r-toast_absolute': this.absolute,
        'r-toast_auto-height': this.autoHeight,
        'r-toast_bottom': this.bottom || !this.top,
        'r-toast_left': this.left,
        'r-toast_multi-line': this.multiLine && !this.vertical,
        'r-toast_right': this.right,
        'r-toast_top': this.top,
        'r-toast_vertical': this.vertical
      };
    }
  },

  watch: {
    isActive: function isActive() {
      this.setTimeout();
    }
  },

  methods: {
    setTimeout: function (_setTimeout) {
      function setTimeout() {
        return _setTimeout.apply(this, arguments);
      }

      setTimeout.toString = function () {
        return _setTimeout.toString();
      };

      return setTimeout;
    }(function () {
      var _this = this;

      clearTimeout(this.activeTimeout);

      if (this.isActive && this.closeDelay) {
        this.activeTimeout = setTimeout(function () {
          _this.isActive = false;
        }, this.closeDelay);
      }
    })
  },

  mounted: function mounted() {
    this.setTimeout();
  },
  render: function render(h) {
    var children = [];

    if (this.isActive) {
      children.push(h('div', {
        staticClass: 'r-toast',
        class: this.classes,
        on: this.$listeners
      }, [h('div', {
        staticClass: 'r-toast__wrapper',
        class: this.addBackgroundColorClassChecks()
      }, [h('div', {
        staticClass: 'r-toast__content'
      }, this.$slots.default)])]));
    }

    return h('transition', {
      attrs: { name: 'toast-transition' }
    }, children);
  }
});

/***/ }),
/* 126 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-mobile-header',

  props: {
    centeredContent: Boolean,
    shadow: {
      type: Boolean,
      default: true
    }
  },

  computed: {
    classes: function classes() {
      return {
        'mobile-header': true,
        'mobile-header_centered-content': this.centeredContent,
        'mobile-header_shadow': this.shadow
      };
    }
  }
});

/***/ }),
/* 127 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RPageHeadline_RPageHeadline_vue__ = __webpack_require__(128);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-page',

  components: {
    RPageHeadline: __WEBPACK_IMPORTED_MODULE_0__RPageHeadline_RPageHeadline_vue__["a" /* default */]
  },

  props: {
    withoutIndents: Boolean,
    withoutIndentTop: Boolean,
    withoutIndentBottom: Boolean,
    asideBordered: Boolean,
    headlineBordered: Boolean,
    mainClass: String,
    asideClass: String
  },

  computed: {
    classes: function classes() {
      return {
        'page_indent-top': !this.withoutIndents && !this.withoutIndentTop,
        'page_indent-bottom': !this.withoutIndents && !this.withoutIndentBottom
      };
    },
    mainClasses: function mainClasses() {
      return _defineProperty({}, this.mainClass, !!this.mainClass);
    },
    asideClasses: function asideClasses() {
      var _ref2;

      return _ref2 = {}, _defineProperty(_ref2, this.asideClass, !!this.asideClass), _defineProperty(_ref2, 'page__aside_bordered', this.asideBordered), _ref2;
    }
  }
});

/***/ }),
/* 128 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RPageHeadline_vue__ = __webpack_require__(129);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0daffd21_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RPageHeadline_vue__ = __webpack_require__(291);
function injectStyle (ssrContext) {
  __webpack_require__(290)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RPageHeadline_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0daffd21_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RPageHeadline_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 129 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-page-headline',

  props: {
    headlineBordered: Boolean
  },

  computed: {
    classes: function classes() {
      return {
        'page-headline': true,
        'page-headline_bordered': this.headlineBordered
      };
    }
  }
});

/***/ }),
/* 130 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_quill_editor__ = __webpack_require__(297);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue_quill_editor___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue_quill_editor__);
/* harmony reexport (binding) */ if(__webpack_require__.o(__WEBPACK_IMPORTED_MODULE_0_vue_quill_editor__, "quillEditor")) __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0_vue_quill_editor__["quillEditor"]; });



/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof2 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * Quill Editor v1.3.6
 * https://quilljs.com/
 * Copyright (c) 2014, Jason Chen
 * Copyright (c) 2013, salesforce.com
 */
(function webpackUniversalModuleDefinition(root, factory) {
  if (( false ? 'undefined' : _typeof2(exports)) === 'object' && ( false ? 'undefined' : _typeof2(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : _typeof2(exports)) === 'object') exports["Quill"] = factory();else root["Quill"] = factory();
})(typeof self !== 'undefined' ? self : this, function () {
  return (/******/function (modules) {
      // webpackBootstrap
      /******/ // The module cache
      /******/var installedModules = {};
      /******/
      /******/ // The require function
      /******/function __webpack_require__(moduleId) {
        /******/
        /******/ // Check if module is in cache
        /******/if (installedModules[moduleId]) {
          /******/return installedModules[moduleId].exports;
          /******/
        }
        /******/ // Create a new module (and put it into the cache)
        /******/var module = installedModules[moduleId] = {
          /******/i: moduleId,
          /******/l: false,
          /******/exports: {}
          /******/ };
        /******/
        /******/ // Execute the module function
        /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/
        /******/ // Flag the module as loaded
        /******/module.l = true;
        /******/
        /******/ // Return the exports of the module
        /******/return module.exports;
        /******/
      }
      /******/
      /******/
      /******/ // expose the modules object (__webpack_modules__)
      /******/__webpack_require__.m = modules;
      /******/
      /******/ // expose the module cache
      /******/__webpack_require__.c = installedModules;
      /******/
      /******/ // define getter function for harmony exports
      /******/__webpack_require__.d = function (exports, name, getter) {
        /******/if (!__webpack_require__.o(exports, name)) {
          /******/Object.defineProperty(exports, name, {
            /******/configurable: false,
            /******/enumerable: true,
            /******/get: getter
            /******/ });
          /******/
        }
        /******/
      };
      /******/
      /******/ // getDefaultExport function for compatibility with non-harmony modules
      /******/__webpack_require__.n = function (module) {
        /******/var getter = module && module.__esModule ?
        /******/function getDefault() {
          return module['default'];
        } :
        /******/function getModuleExports() {
          return module;
        };
        /******/__webpack_require__.d(getter, 'a', getter);
        /******/return getter;
        /******/
      };
      /******/
      /******/ // Object.prototype.hasOwnProperty.call
      /******/__webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/
      /******/ // __webpack_public_path__
      /******/__webpack_require__.p = "";
      /******/
      /******/ // Load entry module and return exports
      /******/return __webpack_require__(__webpack_require__.s = 109);
      /******/
    }(
    /************************************************************************/
    /******/[
    /* 0 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", { value: true });
      var container_1 = __webpack_require__(17);
      var format_1 = __webpack_require__(18);
      var leaf_1 = __webpack_require__(19);
      var scroll_1 = __webpack_require__(45);
      var inline_1 = __webpack_require__(46);
      var block_1 = __webpack_require__(47);
      var embed_1 = __webpack_require__(48);
      var text_1 = __webpack_require__(49);
      var attributor_1 = __webpack_require__(12);
      var class_1 = __webpack_require__(32);
      var style_1 = __webpack_require__(33);
      var store_1 = __webpack_require__(31);
      var Registry = __webpack_require__(1);
      var Parchment = {
        Scope: Registry.Scope,
        create: Registry.create,
        find: Registry.find,
        query: Registry.query,
        register: Registry.register,
        Container: container_1.default,
        Format: format_1.default,
        Leaf: leaf_1.default,
        Embed: embed_1.default,
        Scroll: scroll_1.default,
        Block: block_1.default,
        Inline: inline_1.default,
        Text: text_1.default,
        Attributor: {
          Attribute: attributor_1.default,
          Class: class_1.default,
          Style: style_1.default,
          Store: store_1.default
        }
      };
      exports.default = Parchment;

      /***/
    },
    /* 1 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var ParchmentError = /** @class */function (_super) {
        __extends(ParchmentError, _super);
        function ParchmentError(message) {
          var _this = this;
          message = '[Parchment] ' + message;
          _this = _super.call(this, message) || this;
          _this.message = message;
          _this.name = _this.constructor.name;
          return _this;
        }
        return ParchmentError;
      }(Error);
      exports.ParchmentError = ParchmentError;
      var attributes = {};
      var classes = {};
      var tags = {};
      var types = {};
      exports.DATA_KEY = '__blot';
      var Scope;
      (function (Scope) {
        Scope[Scope["TYPE"] = 3] = "TYPE";
        Scope[Scope["LEVEL"] = 12] = "LEVEL";
        Scope[Scope["ATTRIBUTE"] = 13] = "ATTRIBUTE";
        Scope[Scope["BLOT"] = 14] = "BLOT";
        Scope[Scope["INLINE"] = 7] = "INLINE";
        Scope[Scope["BLOCK"] = 11] = "BLOCK";
        Scope[Scope["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
        Scope[Scope["INLINE_BLOT"] = 6] = "INLINE_BLOT";
        Scope[Scope["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
        Scope[Scope["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
        Scope[Scope["ANY"] = 15] = "ANY";
      })(Scope = exports.Scope || (exports.Scope = {}));
      function create(input, value) {
        var match = query(input);
        if (match == null) {
          throw new ParchmentError("Unable to create " + input + " blot");
        }
        var BlotClass = match;
        var node =
        // @ts-ignore
        input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);
        return new BlotClass(node, value);
      }
      exports.create = create;
      function find(node, bubble) {
        if (bubble === void 0) {
          bubble = false;
        }
        if (node == null) return null;
        // @ts-ignore
        if (node[exports.DATA_KEY] != null) return node[exports.DATA_KEY].blot;
        if (bubble) return find(node.parentNode, bubble);
        return null;
      }
      exports.find = find;
      function query(query, scope) {
        if (scope === void 0) {
          scope = Scope.ANY;
        }
        var match;
        if (typeof query === 'string') {
          match = types[query] || attributes[query];
          // @ts-ignore
        } else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {
          match = types['text'];
        } else if (typeof query === 'number') {
          if (query & Scope.LEVEL & Scope.BLOCK) {
            match = types['block'];
          } else if (query & Scope.LEVEL & Scope.INLINE) {
            match = types['inline'];
          }
        } else if (query instanceof HTMLElement) {
          var names = (query.getAttribute('class') || '').split(/\s+/);
          for (var i in names) {
            match = classes[names[i]];
            if (match) break;
          }
          match = match || tags[query.tagName];
        }
        if (match == null) return null;
        // @ts-ignore
        if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope) return match;
        return null;
      }
      exports.query = query;
      function register() {
        var Definitions = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          Definitions[_i] = arguments[_i];
        }
        if (Definitions.length > 1) {
          return Definitions.map(function (d) {
            return register(d);
          });
        }
        var Definition = Definitions[0];
        if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {
          throw new ParchmentError('Invalid definition');
        } else if (Definition.blotName === 'abstract') {
          throw new ParchmentError('Cannot register abstract class');
        }
        types[Definition.blotName || Definition.attrName] = Definition;
        if (typeof Definition.keyName === 'string') {
          attributes[Definition.keyName] = Definition;
        } else {
          if (Definition.className != null) {
            classes[Definition.className] = Definition;
          }
          if (Definition.tagName != null) {
            if (Array.isArray(Definition.tagName)) {
              Definition.tagName = Definition.tagName.map(function (tagName) {
                return tagName.toUpperCase();
              });
            } else {
              Definition.tagName = Definition.tagName.toUpperCase();
            }
            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
            tagNames.forEach(function (tag) {
              if (tags[tag] == null || Definition.className == null) {
                tags[tag] = Definition;
              }
            });
          }
        }
        return Definition;
      }
      exports.register = register;

      /***/
    },
    /* 2 */
    /***/function (module, exports, __webpack_require__) {

      var diff = __webpack_require__(51);
      var equal = __webpack_require__(11);
      var extend = __webpack_require__(3);
      var op = __webpack_require__(20);

      var NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()


      var Delta = function Delta(ops) {
        // Assume we are given a well formed ops
        if (Array.isArray(ops)) {
          this.ops = ops;
        } else if (ops != null && Array.isArray(ops.ops)) {
          this.ops = ops.ops;
        } else {
          this.ops = [];
        }
      };

      Delta.prototype.insert = function (text, attributes) {
        var newOp = {};
        if (text.length === 0) return this;
        newOp.insert = text;
        if (attributes != null && (typeof attributes === 'undefined' ? 'undefined' : _typeof2(attributes)) === 'object' && Object.keys(attributes).length > 0) {
          newOp.attributes = attributes;
        }
        return this.push(newOp);
      };

      Delta.prototype['delete'] = function (length) {
        if (length <= 0) return this;
        return this.push({ 'delete': length });
      };

      Delta.prototype.retain = function (length, attributes) {
        if (length <= 0) return this;
        var newOp = { retain: length };
        if (attributes != null && (typeof attributes === 'undefined' ? 'undefined' : _typeof2(attributes)) === 'object' && Object.keys(attributes).length > 0) {
          newOp.attributes = attributes;
        }
        return this.push(newOp);
      };

      Delta.prototype.push = function (newOp) {
        var index = this.ops.length;
        var lastOp = this.ops[index - 1];
        newOp = extend(true, {}, newOp);
        if ((typeof lastOp === 'undefined' ? 'undefined' : _typeof2(lastOp)) === 'object') {
          if (typeof newOp['delete'] === 'number' && typeof lastOp['delete'] === 'number') {
            this.ops[index - 1] = { 'delete': lastOp['delete'] + newOp['delete'] };
            return this;
          }
          // Since it does not matter if we insert before or after deleting at the same index,
          // always prefer to insert first
          if (typeof lastOp['delete'] === 'number' && newOp.insert != null) {
            index -= 1;
            lastOp = this.ops[index - 1];
            if ((typeof lastOp === 'undefined' ? 'undefined' : _typeof2(lastOp)) !== 'object') {
              this.ops.unshift(newOp);
              return this;
            }
          }
          if (equal(newOp.attributes, lastOp.attributes)) {
            if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {
              this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };
              if (_typeof2(newOp.attributes) === 'object') this.ops[index - 1].attributes = newOp.attributes;
              return this;
            } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {
              this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };
              if (_typeof2(newOp.attributes) === 'object') this.ops[index - 1].attributes = newOp.attributes;
              return this;
            }
          }
        }
        if (index === this.ops.length) {
          this.ops.push(newOp);
        } else {
          this.ops.splice(index, 0, newOp);
        }
        return this;
      };

      Delta.prototype.chop = function () {
        var lastOp = this.ops[this.ops.length - 1];
        if (lastOp && lastOp.retain && !lastOp.attributes) {
          this.ops.pop();
        }
        return this;
      };

      Delta.prototype.filter = function (predicate) {
        return this.ops.filter(predicate);
      };

      Delta.prototype.forEach = function (predicate) {
        this.ops.forEach(predicate);
      };

      Delta.prototype.map = function (predicate) {
        return this.ops.map(predicate);
      };

      Delta.prototype.partition = function (predicate) {
        var passed = [],
            failed = [];
        this.forEach(function (op) {
          var target = predicate(op) ? passed : failed;
          target.push(op);
        });
        return [passed, failed];
      };

      Delta.prototype.reduce = function (predicate, initial) {
        return this.ops.reduce(predicate, initial);
      };

      Delta.prototype.changeLength = function () {
        return this.reduce(function (length, elem) {
          if (elem.insert) {
            return length + op.length(elem);
          } else if (elem.delete) {
            return length - elem.delete;
          }
          return length;
        }, 0);
      };

      Delta.prototype.length = function () {
        return this.reduce(function (length, elem) {
          return length + op.length(elem);
        }, 0);
      };

      Delta.prototype.slice = function (start, end) {
        start = start || 0;
        if (typeof end !== 'number') end = Infinity;
        var ops = [];
        var iter = op.iterator(this.ops);
        var index = 0;
        while (index < end && iter.hasNext()) {
          var nextOp;
          if (index < start) {
            nextOp = iter.next(start - index);
          } else {
            nextOp = iter.next(end - index);
            ops.push(nextOp);
          }
          index += op.length(nextOp);
        }
        return new Delta(ops);
      };

      Delta.prototype.compose = function (other) {
        var thisIter = op.iterator(this.ops);
        var otherIter = op.iterator(other.ops);
        var delta = new Delta();
        while (thisIter.hasNext() || otherIter.hasNext()) {
          if (otherIter.peekType() === 'insert') {
            delta.push(otherIter.next());
          } else if (thisIter.peekType() === 'delete') {
            delta.push(thisIter.next());
          } else {
            var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
            var thisOp = thisIter.next(length);
            var otherOp = otherIter.next(length);
            if (typeof otherOp.retain === 'number') {
              var newOp = {};
              if (typeof thisOp.retain === 'number') {
                newOp.retain = length;
              } else {
                newOp.insert = thisOp.insert;
              }
              // Preserve null when composing with a retain, otherwise remove it for inserts
              var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');
              if (attributes) newOp.attributes = attributes;
              delta.push(newOp);
              // Other op should be delete, we could be an insert or retain
              // Insert + delete cancels out
            } else if (typeof otherOp['delete'] === 'number' && typeof thisOp.retain === 'number') {
              delta.push(otherOp);
            }
          }
        }
        return delta.chop();
      };

      Delta.prototype.concat = function (other) {
        var delta = new Delta(this.ops.slice());
        if (other.ops.length > 0) {
          delta.push(other.ops[0]);
          delta.ops = delta.ops.concat(other.ops.slice(1));
        }
        return delta;
      };

      Delta.prototype.diff = function (other, index) {
        if (this.ops === other.ops) {
          return new Delta();
        }
        var strings = [this, other].map(function (delta) {
          return delta.map(function (op) {
            if (op.insert != null) {
              return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;
            }
            var prep = delta === other ? 'on' : 'with';
            throw new Error('diff() called ' + prep + ' non-document');
          }).join('');
        });
        var delta = new Delta();
        var diffResult = diff(strings[0], strings[1], index);
        var thisIter = op.iterator(this.ops);
        var otherIter = op.iterator(other.ops);
        diffResult.forEach(function (component) {
          var length = component[1].length;
          while (length > 0) {
            var opLength = 0;
            switch (component[0]) {
              case diff.INSERT:
                opLength = Math.min(otherIter.peekLength(), length);
                delta.push(otherIter.next(opLength));
                break;
              case diff.DELETE:
                opLength = Math.min(length, thisIter.peekLength());
                thisIter.next(opLength);
                delta['delete'](opLength);
                break;
              case diff.EQUAL:
                opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
                var thisOp = thisIter.next(opLength);
                var otherOp = otherIter.next(opLength);
                if (equal(thisOp.insert, otherOp.insert)) {
                  delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
                } else {
                  delta.push(otherOp)['delete'](opLength);
                }
                break;
            }
            length -= opLength;
          }
        });
        return delta.chop();
      };

      Delta.prototype.eachLine = function (predicate, newline) {
        newline = newline || '\n';
        var iter = op.iterator(this.ops);
        var line = new Delta();
        var i = 0;
        while (iter.hasNext()) {
          if (iter.peekType() !== 'insert') return;
          var thisOp = iter.peek();
          var start = op.length(thisOp) - iter.peekLength();
          var index = typeof thisOp.insert === 'string' ? thisOp.insert.indexOf(newline, start) - start : -1;
          if (index < 0) {
            line.push(iter.next());
          } else if (index > 0) {
            line.push(iter.next(index));
          } else {
            if (predicate(line, iter.next(1).attributes || {}, i) === false) {
              return;
            }
            i += 1;
            line = new Delta();
          }
        }
        if (line.length() > 0) {
          predicate(line, {}, i);
        }
      };

      Delta.prototype.transform = function (other, priority) {
        priority = !!priority;
        if (typeof other === 'number') {
          return this.transformPosition(other, priority);
        }
        var thisIter = op.iterator(this.ops);
        var otherIter = op.iterator(other.ops);
        var delta = new Delta();
        while (thisIter.hasNext() || otherIter.hasNext()) {
          if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {
            delta.retain(op.length(thisIter.next()));
          } else if (otherIter.peekType() === 'insert') {
            delta.push(otherIter.next());
          } else {
            var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
            var thisOp = thisIter.next(length);
            var otherOp = otherIter.next(length);
            if (thisOp['delete']) {
              // Our delete either makes their delete redundant or removes their retain
              continue;
            } else if (otherOp['delete']) {
              delta.push(otherOp);
            } else {
              // We retain either their retain or insert
              delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
            }
          }
        }
        return delta.chop();
      };

      Delta.prototype.transformPosition = function (index, priority) {
        priority = !!priority;
        var thisIter = op.iterator(this.ops);
        var offset = 0;
        while (thisIter.hasNext() && offset <= index) {
          var length = thisIter.peekLength();
          var nextType = thisIter.peekType();
          thisIter.next();
          if (nextType === 'delete') {
            index -= Math.min(length, index - offset);
            continue;
          } else if (nextType === 'insert' && (offset < index || !priority)) {
            index += length;
          }
          offset += length;
        }
        return index;
      };

      module.exports = Delta;

      /***/
    },
    /* 3 */
    /***/function (module, exports) {

      'use strict';

      var hasOwn = Object.prototype.hasOwnProperty;
      var toStr = Object.prototype.toString;

      var isArray = function isArray(arr) {
        if (typeof Array.isArray === 'function') {
          return Array.isArray(arr);
        }

        return toStr.call(arr) === '[object Array]';
      };

      var isPlainObject = function isPlainObject(obj) {
        if (!obj || toStr.call(obj) !== '[object Object]') {
          return false;
        }

        var hasOwnConstructor = hasOwn.call(obj, 'constructor');
        var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
        // Not own constructor property must be Object
        if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
          return false;
        }

        // Own properties are enumerated firstly, so to speed up,
        // if last one is own, then all properties are own.
        var key;
        for (key in obj) {/**/}

        return typeof key === 'undefined' || hasOwn.call(obj, key);
      };

      module.exports = function extend() {
        var options, name, src, copy, copyIsArray, clone;
        var target = arguments[0];
        var i = 1;
        var length = arguments.length;
        var deep = false;

        // Handle a deep copy situation
        if (typeof target === 'boolean') {
          deep = target;
          target = arguments[1] || {};
          // skip the boolean and the target
          i = 2;
        }
        if (target == null || (typeof target === 'undefined' ? 'undefined' : _typeof2(target)) !== 'object' && typeof target !== 'function') {
          target = {};
        }

        for (; i < length; ++i) {
          options = arguments[i];
          // Only deal with non-null/undefined values
          if (options != null) {
            // Extend the base object
            for (name in options) {
              src = target[name];
              copy = options[name];

              // Prevent never-ending loop
              if (target !== copy) {
                // Recurse if we're merging plain objects or arrays
                if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
                  if (copyIsArray) {
                    copyIsArray = false;
                    clone = src && isArray(src) ? src : [];
                  } else {
                    clone = src && isPlainObject(src) ? src : {};
                  }

                  // Never move original objects, clone them
                  target[name] = extend(deep, clone, copy);

                  // Don't bring in undefined values
                } else if (typeof copy !== 'undefined') {
                  target[name] = copy;
                }
              }
            }
          }
        }

        // Return the modified object
        return target;
      };

      /***/
    },
    /* 4 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.BlockEmbed = exports.bubbleFormats = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _break = __webpack_require__(16);

      var _break2 = _interopRequireDefault(_break);

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      var _text = __webpack_require__(7);

      var _text2 = _interopRequireDefault(_text);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var NEWLINE_LENGTH = 1;

      var BlockEmbed = function (_Parchment$Embed) {
        _inherits(BlockEmbed, _Parchment$Embed);

        function BlockEmbed() {
          _classCallCheck(this, BlockEmbed);

          return _possibleConstructorReturn(this, (BlockEmbed.__proto__ || Object.getPrototypeOf(BlockEmbed)).apply(this, arguments));
        }

        _createClass(BlockEmbed, [{
          key: 'attach',
          value: function attach() {
            _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'attach', this).call(this);
            this.attributes = new _parchment2.default.Attributor.Store(this.domNode);
          }
        }, {
          key: 'delta',
          value: function delta() {
            return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));
          }
        }, {
          key: 'format',
          value: function format(name, value) {
            var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);
            if (attribute != null) {
              this.attributes.attribute(attribute, value);
            }
          }
        }, {
          key: 'formatAt',
          value: function formatAt(index, length, name, value) {
            this.format(name, value);
          }
        }, {
          key: 'insertAt',
          value: function insertAt(index, value, def) {
            if (typeof value === 'string' && value.endsWith('\n')) {
              var block = _parchment2.default.create(Block.blotName);
              this.parent.insertBefore(block, index === 0 ? this : this.next);
              block.insertAt(0, value.slice(0, -1));
            } else {
              _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'insertAt', this).call(this, index, value, def);
            }
          }
        }]);

        return BlockEmbed;
      }(_parchment2.default.Embed);

      BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
      // It is important for cursor behavior BlockEmbeds use tags that are block level elements


      var Block = function (_Parchment$Block) {
        _inherits(Block, _Parchment$Block);

        function Block(domNode) {
          _classCallCheck(this, Block);

          var _this2 = _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).call(this, domNode));

          _this2.cache = {};
          return _this2;
        }

        _createClass(Block, [{
          key: 'delta',
          value: function delta() {
            if (this.cache.delta == null) {
              this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function (delta, leaf) {
                if (leaf.length() === 0) {
                  return delta;
                } else {
                  return delta.insert(leaf.value(), bubbleFormats(leaf));
                }
              }, new _quillDelta2.default()).insert('\n', bubbleFormats(this));
            }
            return this.cache.delta;
          }
        }, {
          key: 'deleteAt',
          value: function deleteAt(index, length) {
            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'deleteAt', this).call(this, index, length);
            this.cache = {};
          }
        }, {
          key: 'formatAt',
          value: function formatAt(index, length, name, value) {
            if (length <= 0) return;
            if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
              if (index + length === this.length()) {
                this.format(name, value);
              }
            } else {
              _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'formatAt', this).call(this, index, Math.min(length, this.length() - index - 1), name, value);
            }
            this.cache = {};
          }
        }, {
          key: 'insertAt',
          value: function insertAt(index, value, def) {
            if (def != null) return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, index, value, def);
            if (value.length === 0) return;
            var lines = value.split('\n');
            var text = lines.shift();
            if (text.length > 0) {
              if (index < this.length() - 1 || this.children.tail == null) {
                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, Math.min(index, this.length() - 1), text);
              } else {
                this.children.tail.insertAt(this.children.tail.length(), text);
              }
              this.cache = {};
            }
            var block = this;
            lines.reduce(function (index, line) {
              block = block.split(index, true);
              block.insertAt(0, line);
              return line.length;
            }, index + text.length);
          }
        }, {
          key: 'insertBefore',
          value: function insertBefore(blot, ref) {
            var head = this.children.head;
            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertBefore', this).call(this, blot, ref);
            if (head instanceof _break2.default) {
              head.remove();
            }
            this.cache = {};
          }
        }, {
          key: 'length',
          value: function length() {
            if (this.cache.length == null) {
              this.cache.length = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'length', this).call(this) + NEWLINE_LENGTH;
            }
            return this.cache.length;
          }
        }, {
          key: 'moveChildren',
          value: function moveChildren(target, ref) {
            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'moveChildren', this).call(this, target, ref);
            this.cache = {};
          }
        }, {
          key: 'optimize',
          value: function optimize(context) {
            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'optimize', this).call(this, context);
            this.cache = {};
          }
        }, {
          key: 'path',
          value: function path(index) {
            return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'path', this).call(this, index, true);
          }
        }, {
          key: 'removeChild',
          value: function removeChild(child) {
            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'removeChild', this).call(this, child);
            this.cache = {};
          }
        }, {
          key: 'split',
          value: function split(index) {
            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {
              var clone = this.clone();
              if (index === 0) {
                this.parent.insertBefore(clone, this);
                return this;
              } else {
                this.parent.insertBefore(clone, this.next);
                return clone;
              }
            } else {
              var next = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'split', this).call(this, index, force);
              this.cache = {};
              return next;
            }
          }
        }]);

        return Block;
      }(_parchment2.default.Block);

      Block.blotName = 'block';
      Block.tagName = 'P';
      Block.defaultChild = 'break';
      Block.allowedChildren = [_inline2.default, _parchment2.default.Embed, _text2.default];

      function bubbleFormats(blot) {
        var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        if (blot == null) return formats;
        if (typeof blot.formats === 'function') {
          formats = (0, _extend2.default)(formats, blot.formats());
        }
        if (blot.parent == null || blot.parent.blotName == 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {
          return formats;
        }
        return bubbleFormats(blot.parent, formats);
      }

      exports.bubbleFormats = bubbleFormats;
      exports.BlockEmbed = BlockEmbed;
      exports.default = Block;

      /***/
    },
    /* 5 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.overload = exports.expandConfig = undefined;

      var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
        return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      };

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      __webpack_require__(50);

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _editor = __webpack_require__(14);

      var _editor2 = _interopRequireDefault(_editor);

      var _emitter3 = __webpack_require__(8);

      var _emitter4 = _interopRequireDefault(_emitter3);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _selection = __webpack_require__(15);

      var _selection2 = _interopRequireDefault(_selection);

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      var _logger = __webpack_require__(10);

      var _logger2 = _interopRequireDefault(_logger);

      var _theme = __webpack_require__(34);

      var _theme2 = _interopRequireDefault(_theme);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var debug = (0, _logger2.default)('quill');

      var Quill = function () {
        _createClass(Quill, null, [{
          key: 'debug',
          value: function debug(limit) {
            if (limit === true) {
              limit = 'log';
            }
            _logger2.default.level(limit);
          }
        }, {
          key: 'find',
          value: function find(node) {
            return node.__quill || _parchment2.default.find(node);
          }
        }, {
          key: 'import',
          value: function _import(name) {
            if (this.imports[name] == null) {
              debug.error('Cannot import ' + name + '. Are you sure it was registered?');
            }
            return this.imports[name];
          }
        }, {
          key: 'register',
          value: function register(path, target) {
            var _this = this;

            var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

            if (typeof path !== 'string') {
              var name = path.attrName || path.blotName;
              if (typeof name === 'string') {
                // register(Blot | Attributor, overwrite)
                this.register('formats/' + name, path, target);
              } else {
                Object.keys(path).forEach(function (key) {
                  _this.register(key, path[key], target);
                });
              }
            } else {
              if (this.imports[path] != null && !overwrite) {
                debug.warn('Overwriting ' + path + ' with', target);
              }
              this.imports[path] = target;
              if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {
                _parchment2.default.register(target);
              } else if (path.startsWith('modules') && typeof target.register === 'function') {
                target.register();
              }
            }
          }
        }]);

        function Quill(container) {
          var _this2 = this;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

          _classCallCheck(this, Quill);

          this.options = expandConfig(container, options);
          this.container = this.options.container;
          if (this.container == null) {
            return debug.error('Invalid Quill container', container);
          }
          if (this.options.debug) {
            Quill.debug(this.options.debug);
          }
          var html = this.container.innerHTML.trim();
          this.container.classList.add('ql-container');
          this.container.innerHTML = '';
          this.container.__quill = this;
          this.root = this.addContainer('ql-editor');
          this.root.classList.add('ql-blank');
          this.root.setAttribute('data-gramm', false);
          this.scrollingContainer = this.options.scrollingContainer || this.root;
          this.emitter = new _emitter4.default();
          this.scroll = _parchment2.default.create(this.root, {
            emitter: this.emitter,
            whitelist: this.options.formats
          });
          this.editor = new _editor2.default(this.scroll);
          this.selection = new _selection2.default(this.scroll, this.emitter);
          this.theme = new this.options.theme(this, this.options);
          this.keyboard = this.theme.addModule('keyboard');
          this.clipboard = this.theme.addModule('clipboard');
          this.history = this.theme.addModule('history');
          this.theme.init();
          this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type) {
            if (type === _emitter4.default.events.TEXT_CHANGE) {
              _this2.root.classList.toggle('ql-blank', _this2.editor.isBlank());
            }
          });
          this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function (source, mutations) {
            var range = _this2.selection.lastRange;
            var index = range && range.length === 0 ? range.index : undefined;
            modify.call(_this2, function () {
              return _this2.editor.update(null, mutations, index);
            }, source);
          });
          var contents = this.clipboard.convert('<div class=\'ql-editor\' style="white-space: normal;">' + html + '<p><br></p></div>');
          this.setContents(contents);
          this.history.clear();
          if (this.options.placeholder) {
            this.root.setAttribute('data-placeholder', this.options.placeholder);
          }
          if (this.options.readOnly) {
            this.disable();
          }
        }

        _createClass(Quill, [{
          key: 'addContainer',
          value: function addContainer(container) {
            var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            if (typeof container === 'string') {
              var className = container;
              container = document.createElement('div');
              container.classList.add(className);
            }
            this.container.insertBefore(container, refNode);
            return container;
          }
        }, {
          key: 'blur',
          value: function blur() {
            this.selection.setRange(null);
          }
        }, {
          key: 'deleteText',
          value: function deleteText(index, length, source) {
            var _this3 = this;

            var _overload = overload(index, length, source);

            var _overload2 = _slicedToArray(_overload, 4);

            index = _overload2[0];
            length = _overload2[1];
            source = _overload2[3];

            return modify.call(this, function () {
              return _this3.editor.deleteText(index, length);
            }, source, index, -1 * length);
          }
        }, {
          key: 'disable',
          value: function disable() {
            this.enable(false);
          }
        }, {
          key: 'enable',
          value: function enable() {
            var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            this.scroll.enable(enabled);
            this.container.classList.toggle('ql-disabled', !enabled);
          }
        }, {
          key: 'focus',
          value: function focus() {
            var scrollTop = this.scrollingContainer.scrollTop;
            this.selection.focus();
            this.scrollingContainer.scrollTop = scrollTop;
            this.scrollIntoView();
          }
        }, {
          key: 'format',
          value: function format(name, value) {
            var _this4 = this;

            var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;

            return modify.call(this, function () {
              var range = _this4.getSelection(true);
              var change = new _quillDelta2.default();
              if (range == null) {
                return change;
              } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
                change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));
              } else if (range.length === 0) {
                _this4.selection.format(name, value);
                return change;
              } else {
                change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));
              }
              _this4.setSelection(range, _emitter4.default.sources.SILENT);
              return change;
            }, source);
          }
        }, {
          key: 'formatLine',
          value: function formatLine(index, length, name, value, source) {
            var _this5 = this;

            var formats = void 0;

            var _overload3 = overload(index, length, name, value, source);

            var _overload4 = _slicedToArray(_overload3, 4);

            index = _overload4[0];
            length = _overload4[1];
            formats = _overload4[2];
            source = _overload4[3];

            return modify.call(this, function () {
              return _this5.editor.formatLine(index, length, formats);
            }, source, index, 0);
          }
        }, {
          key: 'formatText',
          value: function formatText(index, length, name, value, source) {
            var _this6 = this;

            var formats = void 0;

            var _overload5 = overload(index, length, name, value, source);

            var _overload6 = _slicedToArray(_overload5, 4);

            index = _overload6[0];
            length = _overload6[1];
            formats = _overload6[2];
            source = _overload6[3];

            return modify.call(this, function () {
              return _this6.editor.formatText(index, length, formats);
            }, source, index, 0);
          }
        }, {
          key: 'getBounds',
          value: function getBounds(index) {
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            var bounds = void 0;
            if (typeof index === 'number') {
              bounds = this.selection.getBounds(index, length);
            } else {
              bounds = this.selection.getBounds(index.index, index.length);
            }
            var containerBounds = this.container.getBoundingClientRect();
            return {
              bottom: bounds.bottom - containerBounds.top,
              height: bounds.height,
              left: bounds.left - containerBounds.left,
              right: bounds.right - containerBounds.left,
              top: bounds.top - containerBounds.top,
              width: bounds.width
            };
          }
        }, {
          key: 'getContents',
          value: function getContents() {
            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

            var _overload7 = overload(index, length);

            var _overload8 = _slicedToArray(_overload7, 2);

            index = _overload8[0];
            length = _overload8[1];

            return this.editor.getContents(index, length);
          }
        }, {
          key: 'getFormat',
          value: function getFormat() {
            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            if (typeof index === 'number') {
              return this.editor.getFormat(index, length);
            } else {
              return this.editor.getFormat(index.index, index.length);
            }
          }
        }, {
          key: 'getIndex',
          value: function getIndex(blot) {
            return blot.offset(this.scroll);
          }
        }, {
          key: 'getLength',
          value: function getLength() {
            return this.scroll.length();
          }
        }, {
          key: 'getLeaf',
          value: function getLeaf(index) {
            return this.scroll.leaf(index);
          }
        }, {
          key: 'getLine',
          value: function getLine(index) {
            return this.scroll.line(index);
          }
        }, {
          key: 'getLines',
          value: function getLines() {
            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

            if (typeof index !== 'number') {
              return this.scroll.lines(index.index, index.length);
            } else {
              return this.scroll.lines(index, length);
            }
          }
        }, {
          key: 'getModule',
          value: function getModule(name) {
            return this.theme.modules[name];
          }
        }, {
          key: 'getSelection',
          value: function getSelection() {
            var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

            if (focus) this.focus();
            this.update(); // Make sure we access getRange with editor in consistent state
            return this.selection.getRange()[0];
          }
        }, {
          key: 'getText',
          value: function getText() {
            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

            var _overload9 = overload(index, length);

            var _overload10 = _slicedToArray(_overload9, 2);

            index = _overload10[0];
            length = _overload10[1];

            return this.editor.getText(index, length);
          }
        }, {
          key: 'hasFocus',
          value: function hasFocus() {
            return this.selection.hasFocus();
          }
        }, {
          key: 'insertEmbed',
          value: function insertEmbed(index, embed, value) {
            var _this7 = this;

            var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;

            return modify.call(this, function () {
              return _this7.editor.insertEmbed(index, embed, value);
            }, source, index);
          }
        }, {
          key: 'insertText',
          value: function insertText(index, text, name, value, source) {
            var _this8 = this;

            var formats = void 0;

            var _overload11 = overload(index, 0, name, value, source);

            var _overload12 = _slicedToArray(_overload11, 4);

            index = _overload12[0];
            formats = _overload12[2];
            source = _overload12[3];

            return modify.call(this, function () {
              return _this8.editor.insertText(index, text, formats);
            }, source, index, text.length);
          }
        }, {
          key: 'isEnabled',
          value: function isEnabled() {
            return !this.container.classList.contains('ql-disabled');
          }
        }, {
          key: 'off',
          value: function off() {
            return this.emitter.off.apply(this.emitter, arguments);
          }
        }, {
          key: 'on',
          value: function on() {
            return this.emitter.on.apply(this.emitter, arguments);
          }
        }, {
          key: 'once',
          value: function once() {
            return this.emitter.once.apply(this.emitter, arguments);
          }
        }, {
          key: 'pasteHTML',
          value: function pasteHTML(index, html, source) {
            this.clipboard.dangerouslyPasteHTML(index, html, source);
          }
        }, {
          key: 'removeFormat',
          value: function removeFormat(index, length, source) {
            var _this9 = this;

            var _overload13 = overload(index, length, source);

            var _overload14 = _slicedToArray(_overload13, 4);

            index = _overload14[0];
            length = _overload14[1];
            source = _overload14[3];

            return modify.call(this, function () {
              return _this9.editor.removeFormat(index, length);
            }, source, index);
          }
        }, {
          key: 'scrollIntoView',
          value: function scrollIntoView() {
            this.selection.scrollIntoView(this.scrollingContainer);
          }
        }, {
          key: 'setContents',
          value: function setContents(delta) {
            var _this10 = this;

            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

            return modify.call(this, function () {
              delta = new _quillDelta2.default(delta);
              var length = _this10.getLength();
              var deleted = _this10.editor.deleteText(0, length);
              var applied = _this10.editor.applyDelta(delta);
              var lastOp = applied.ops[applied.ops.length - 1];
              if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\n') {
                _this10.editor.deleteText(_this10.getLength() - 1, 1);
                applied.delete(1);
              }
              var ret = deleted.compose(applied);
              return ret;
            }, source);
          }
        }, {
          key: 'setSelection',
          value: function setSelection(index, length, source) {
            if (index == null) {
              this.selection.setRange(null, length || Quill.sources.API);
            } else {
              var _overload15 = overload(index, length, source);

              var _overload16 = _slicedToArray(_overload15, 4);

              index = _overload16[0];
              length = _overload16[1];
              source = _overload16[3];

              this.selection.setRange(new _selection.Range(index, length), source);
              if (source !== _emitter4.default.sources.SILENT) {
                this.selection.scrollIntoView(this.scrollingContainer);
              }
            }
          }
        }, {
          key: 'setText',
          value: function setText(text) {
            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

            var delta = new _quillDelta2.default().insert(text);
            return this.setContents(delta, source);
          }
        }, {
          key: 'update',
          value: function update() {
            var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;

            var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes
            this.selection.update(source);
            return change;
          }
        }, {
          key: 'updateContents',
          value: function updateContents(delta) {
            var _this11 = this;

            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

            return modify.call(this, function () {
              delta = new _quillDelta2.default(delta);
              return _this11.editor.applyDelta(delta, source);
            }, source, true);
          }
        }]);

        return Quill;
      }();

      Quill.DEFAULTS = {
        bounds: null,
        formats: null,
        modules: {},
        placeholder: '',
        readOnly: false,
        scrollingContainer: null,
        strict: true,
        theme: 'default'
      };
      Quill.events = _emitter4.default.events;
      Quill.sources = _emitter4.default.sources;
      // eslint-disable-next-line no-undef
      Quill.version = false ? 'dev' : "1.3.6";

      Quill.imports = {
        'delta': _quillDelta2.default,
        'parchment': _parchment2.default,
        'core/module': _module2.default,
        'core/theme': _theme2.default
      };

      function expandConfig(container, userConfig) {
        userConfig = (0, _extend2.default)(true, {
          container: container,
          modules: {
            clipboard: true,
            keyboard: true,
            history: true
          }
        }, userConfig);
        if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {
          userConfig.theme = _theme2.default;
        } else {
          userConfig.theme = Quill.import('themes/' + userConfig.theme);
          if (userConfig.theme == null) {
            throw new Error('Invalid theme ' + userConfig.theme + '. Did you register it?');
          }
        }
        var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);
        [themeConfig, userConfig].forEach(function (config) {
          config.modules = config.modules || {};
          Object.keys(config.modules).forEach(function (module) {
            if (config.modules[module] === true) {
              config.modules[module] = {};
            }
          });
        });
        var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));
        var moduleConfig = moduleNames.reduce(function (config, name) {
          var moduleClass = Quill.import('modules/' + name);
          if (moduleClass == null) {
            debug.error('Cannot load ' + name + ' module. Are you sure you registered it?');
          } else {
            config[name] = moduleClass.DEFAULTS || {};
          }
          return config;
        }, {});
        // Special case toolbar shorthand
        if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {
          userConfig.modules.toolbar = {
            container: userConfig.modules.toolbar
          };
        }
        userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);
        ['bounds', 'container', 'scrollingContainer'].forEach(function (key) {
          if (typeof userConfig[key] === 'string') {
            userConfig[key] = document.querySelector(userConfig[key]);
          }
        });
        userConfig.modules = Object.keys(userConfig.modules).reduce(function (config, name) {
          if (userConfig.modules[name]) {
            config[name] = userConfig.modules[name];
          }
          return config;
        }, {});
        return userConfig;
      }

      // Handle selection preservation and TEXT_CHANGE emission
      // common to modification APIs
      function modify(modifier, source, index, shift) {
        if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {
          return new _quillDelta2.default();
        }
        var range = index == null ? null : this.getSelection();
        var oldDelta = this.editor.delta;
        var change = modifier();
        if (range != null) {
          if (index === true) index = range.index;
          if (shift == null) {
            range = shiftRange(range, change, source);
          } else if (shift !== 0) {
            range = shiftRange(range, index, shift, source);
          }
          this.setSelection(range, _emitter4.default.sources.SILENT);
        }
        if (change.length() > 0) {
          var _emitter;

          var args = [_emitter4.default.events.TEXT_CHANGE, change, oldDelta, source];
          (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
          if (source !== _emitter4.default.sources.SILENT) {
            var _emitter2;

            (_emitter2 = this.emitter).emit.apply(_emitter2, args);
          }
        }
        return change;
      }

      function overload(index, length, name, value, source) {
        var formats = {};
        if (typeof index.index === 'number' && typeof index.length === 'number') {
          // Allow for throwaway end (used by insertText/insertEmbed)
          if (typeof length !== 'number') {
            source = value, value = name, name = length, length = index.length, index = index.index;
          } else {
            length = index.length, index = index.index;
          }
        } else if (typeof length !== 'number') {
          source = value, value = name, name = length, length = 0;
        }
        // Handle format being object, two format name/value strings or excluded
        if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
          formats = name;
          source = value;
        } else if (typeof name === 'string') {
          if (value != null) {
            formats[name] = value;
          } else {
            source = name;
          }
        }
        // Handle optional source
        source = source || _emitter4.default.sources.API;
        return [index, length, formats, source];
      }

      function shiftRange(range, index, length, source) {
        if (range == null) return null;
        var start = void 0,
            end = void 0;
        if (index instanceof _quillDelta2.default) {
          var _map = [range.index, range.index + range.length].map(function (pos) {
            return index.transformPosition(pos, source !== _emitter4.default.sources.USER);
          });

          var _map2 = _slicedToArray(_map, 2);

          start = _map2[0];
          end = _map2[1];
        } else {
          var _map3 = [range.index, range.index + range.length].map(function (pos) {
            if (pos < index || pos === index && source === _emitter4.default.sources.USER) return pos;
            if (length >= 0) {
              return pos + length;
            } else {
              return Math.max(index, pos + length);
            }
          });

          var _map4 = _slicedToArray(_map3, 2);

          start = _map4[0];
          end = _map4[1];
        }
        return new _selection.Range(start, end - start);
      }

      exports.expandConfig = expandConfig;
      exports.overload = overload;
      exports.default = Quill;

      /***/
    },
    /* 6 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _text = __webpack_require__(7);

      var _text2 = _interopRequireDefault(_text);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Inline = function (_Parchment$Inline) {
        _inherits(Inline, _Parchment$Inline);

        function Inline() {
          _classCallCheck(this, Inline);

          return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));
        }

        _createClass(Inline, [{
          key: 'formatAt',
          value: function formatAt(index, length, name, value) {
            if (Inline.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {
              var blot = this.isolate(index, length);
              if (value) {
                blot.wrap(name, value);
              }
            } else {
              _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'formatAt', this).call(this, index, length, name, value);
            }
          }
        }, {
          key: 'optimize',
          value: function optimize(context) {
            _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'optimize', this).call(this, context);
            if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
              var parent = this.parent.isolate(this.offset(), this.length());
              this.moveChildren(parent);
              parent.wrap(this);
            }
          }
        }], [{
          key: 'compare',
          value: function compare(self, other) {
            var selfIndex = Inline.order.indexOf(self);
            var otherIndex = Inline.order.indexOf(other);
            if (selfIndex >= 0 || otherIndex >= 0) {
              return selfIndex - otherIndex;
            } else if (self === other) {
              return 0;
            } else if (self < other) {
              return -1;
            } else {
              return 1;
            }
          }
        }]);

        return Inline;
      }(_parchment2.default.Inline);

      Inline.allowedChildren = [Inline, _parchment2.default.Embed, _text2.default];
      // Lower index means deeper in the DOM tree, since not found (-1) is for embeds
      Inline.order = ['cursor', 'inline', // Must be lower
      'underline', 'strike', 'italic', 'bold', 'script', 'link', 'code' // Must be higher
      ];

      exports.default = Inline;

      /***/
    },
    /* 7 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var TextBlot = function (_Parchment$Text) {
        _inherits(TextBlot, _Parchment$Text);

        function TextBlot() {
          _classCallCheck(this, TextBlot);

          return _possibleConstructorReturn(this, (TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)).apply(this, arguments));
        }

        return TextBlot;
      }(_parchment2.default.Text);

      exports.default = TextBlot;

      /***/
    },
    /* 8 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _eventemitter = __webpack_require__(54);

      var _eventemitter2 = _interopRequireDefault(_eventemitter);

      var _logger = __webpack_require__(10);

      var _logger2 = _interopRequireDefault(_logger);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var debug = (0, _logger2.default)('quill:events');

      var EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];

      EVENTS.forEach(function (eventName) {
        document.addEventListener(eventName, function () {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          [].slice.call(document.querySelectorAll('.ql-container')).forEach(function (node) {
            // TODO use WeakMap
            if (node.__quill && node.__quill.emitter) {
              var _node$__quill$emitter;

              (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);
            }
          });
        });
      });

      var Emitter = function (_EventEmitter) {
        _inherits(Emitter, _EventEmitter);

        function Emitter() {
          _classCallCheck(this, Emitter);

          var _this = _possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));

          _this.listeners = {};
          _this.on('error', debug.error);
          return _this;
        }

        _createClass(Emitter, [{
          key: 'emit',
          value: function emit() {
            debug.log.apply(debug, arguments);
            _get(Emitter.prototype.__proto__ || Object.getPrototypeOf(Emitter.prototype), 'emit', this).apply(this, arguments);
          }
        }, {
          key: 'handleDOM',
          value: function handleDOM(event) {
            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
              args[_key2 - 1] = arguments[_key2];
            }

            (this.listeners[event.type] || []).forEach(function (_ref) {
              var node = _ref.node,
                  handler = _ref.handler;

              if (event.target === node || node.contains(event.target)) {
                handler.apply(undefined, [event].concat(args));
              }
            });
          }
        }, {
          key: 'listenDOM',
          value: function listenDOM(eventName, node, handler) {
            if (!this.listeners[eventName]) {
              this.listeners[eventName] = [];
            }
            this.listeners[eventName].push({ node: node, handler: handler });
          }
        }]);

        return Emitter;
      }(_eventemitter2.default);

      Emitter.events = {
        EDITOR_CHANGE: 'editor-change',
        SCROLL_BEFORE_UPDATE: 'scroll-before-update',
        SCROLL_OPTIMIZE: 'scroll-optimize',
        SCROLL_UPDATE: 'scroll-update',
        SELECTION_CHANGE: 'selection-change',
        TEXT_CHANGE: 'text-change'
      };
      Emitter.sources = {
        API: 'api',
        SILENT: 'silent',
        USER: 'user'
      };

      exports.default = Emitter;

      /***/
    },
    /* 9 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var Module = function Module(quill) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Module);

        this.quill = quill;
        this.options = options;
      };

      Module.DEFAULTS = {};

      exports.default = Module;

      /***/
    },
    /* 10 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      var levels = ['error', 'warn', 'log', 'info'];
      var level = 'warn';

      function debug(method) {
        if (levels.indexOf(method) <= levels.indexOf(level)) {
          var _console;

          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          (_console = console)[method].apply(_console, args); // eslint-disable-line no-console
        }
      }

      function namespace(ns) {
        return levels.reduce(function (logger, method) {
          logger[method] = debug.bind(console, method, ns);
          return logger;
        }, {});
      }

      debug.level = namespace.level = function (newLevel) {
        level = newLevel;
      };

      exports.default = namespace;

      /***/
    },
    /* 11 */
    /***/function (module, exports, __webpack_require__) {

      var pSlice = Array.prototype.slice;
      var objectKeys = __webpack_require__(52);
      var isArguments = __webpack_require__(53);

      var deepEqual = module.exports = function (actual, expected, opts) {
        if (!opts) opts = {};
        // 7.1. All identical values are equivalent, as determined by ===.
        if (actual === expected) {
          return true;
        } else if (actual instanceof Date && expected instanceof Date) {
          return actual.getTime() === expected.getTime();

          // 7.3. Other pairs that do not both pass typeof value == 'object',
          // equivalence is determined by ==.
        } else if (!actual || !expected || (typeof actual === 'undefined' ? 'undefined' : _typeof2(actual)) != 'object' && (typeof expected === 'undefined' ? 'undefined' : _typeof2(expected)) != 'object') {
          return opts.strict ? actual === expected : actual == expected;

          // 7.4. For all other Object pairs, including Array objects, equivalence is
          // determined by having the same number of owned properties (as verified
          // with Object.prototype.hasOwnProperty.call), the same set of keys
          // (although not necessarily the same order), equivalent values for every
          // corresponding key, and an identical 'prototype' property. Note: this
          // accounts for both named and indexed properties on Arrays.
        } else {
          return objEquiv(actual, expected, opts);
        }
      };

      function isUndefinedOrNull(value) {
        return value === null || value === undefined;
      }

      function isBuffer(x) {
        if (!x || (typeof x === 'undefined' ? 'undefined' : _typeof2(x)) !== 'object' || typeof x.length !== 'number') return false;
        if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
          return false;
        }
        if (x.length > 0 && typeof x[0] !== 'number') return false;
        return true;
      }

      function objEquiv(a, b, opts) {
        var i, key;
        if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;
        // an identical 'prototype' property.
        if (a.prototype !== b.prototype) return false;
        //~~~I've managed to break Object.keys through screwy arguments passing.
        //   Converting to array solves the problem.
        if (isArguments(a)) {
          if (!isArguments(b)) {
            return false;
          }
          a = pSlice.call(a);
          b = pSlice.call(b);
          return deepEqual(a, b, opts);
        }
        if (isBuffer(a)) {
          if (!isBuffer(b)) {
            return false;
          }
          if (a.length !== b.length) return false;
          for (i = 0; i < a.length; i++) {
            if (a[i] !== b[i]) return false;
          }
          return true;
        }
        try {
          var ka = objectKeys(a),
              kb = objectKeys(b);
        } catch (e) {
          //happens when one is a string literal and the other isn't
          return false;
        }
        // having the same number of owned properties (keys incorporates
        // hasOwnProperty)
        if (ka.length != kb.length) return false;
        //the same set of keys (although not necessarily the same order),
        ka.sort();
        kb.sort();
        //~~~cheap key test
        for (i = ka.length - 1; i >= 0; i--) {
          if (ka[i] != kb[i]) return false;
        }
        //equivalent values for every corresponding key, and
        //~~~possibly expensive deep test
        for (i = ka.length - 1; i >= 0; i--) {
          key = ka[i];
          if (!deepEqual(a[key], b[key], opts)) return false;
        }
        return (typeof a === 'undefined' ? 'undefined' : _typeof2(a)) === (typeof b === 'undefined' ? 'undefined' : _typeof2(b));
      }

      /***/
    },
    /* 12 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", { value: true });
      var Registry = __webpack_require__(1);
      var Attributor = /** @class */function () {
        function Attributor(attrName, keyName, options) {
          if (options === void 0) {
            options = {};
          }
          this.attrName = attrName;
          this.keyName = keyName;
          var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
          if (options.scope != null) {
            // Ignore type bits, force attribute bit
            this.scope = options.scope & Registry.Scope.LEVEL | attributeBit;
          } else {
            this.scope = Registry.Scope.ATTRIBUTE;
          }
          if (options.whitelist != null) this.whitelist = options.whitelist;
        }
        Attributor.keys = function (node) {
          return [].map.call(node.attributes, function (item) {
            return item.name;
          });
        };
        Attributor.prototype.add = function (node, value) {
          if (!this.canAdd(node, value)) return false;
          node.setAttribute(this.keyName, value);
          return true;
        };
        Attributor.prototype.canAdd = function (node, value) {
          var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
          if (match == null) return false;
          if (this.whitelist == null) return true;
          if (typeof value === 'string') {
            return this.whitelist.indexOf(value.replace(/["']/g, '')) > -1;
          } else {
            return this.whitelist.indexOf(value) > -1;
          }
        };
        Attributor.prototype.remove = function (node) {
          node.removeAttribute(this.keyName);
        };
        Attributor.prototype.value = function (node) {
          var value = node.getAttribute(this.keyName);
          if (this.canAdd(node, value) && value) {
            return value;
          }
          return '';
        };
        return Attributor;
      }();
      exports.default = Attributor;

      /***/
    },
    /* 13 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.Code = undefined;

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      var _text = __webpack_require__(7);

      var _text2 = _interopRequireDefault(_text);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Code = function (_Inline) {
        _inherits(Code, _Inline);

        function Code() {
          _classCallCheck(this, Code);

          return _possibleConstructorReturn(this, (Code.__proto__ || Object.getPrototypeOf(Code)).apply(this, arguments));
        }

        return Code;
      }(_inline2.default);

      Code.blotName = 'code';
      Code.tagName = 'CODE';

      var CodeBlock = function (_Block) {
        _inherits(CodeBlock, _Block);

        function CodeBlock() {
          _classCallCheck(this, CodeBlock);

          return _possibleConstructorReturn(this, (CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).apply(this, arguments));
        }

        _createClass(CodeBlock, [{
          key: 'delta',
          value: function delta() {
            var _this3 = this;

            var text = this.domNode.textContent;
            if (text.endsWith('\n')) {
              // Should always be true
              text = text.slice(0, -1);
            }
            return text.split('\n').reduce(function (delta, frag) {
              return delta.insert(frag).insert('\n', _this3.formats());
            }, new _quillDelta2.default());
          }
        }, {
          key: 'format',
          value: function format(name, value) {
            if (name === this.statics.blotName && value) return;

            var _descendant = this.descendant(_text2.default, this.length() - 1),
                _descendant2 = _slicedToArray(_descendant, 1),
                text = _descendant2[0];

            if (text != null) {
              text.deleteAt(text.length() - 1, 1);
            }
            _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'format', this).call(this, name, value);
          }
        }, {
          key: 'formatAt',
          value: function formatAt(index, length, name, value) {
            if (length === 0) return;
            if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {
              return;
            }
            var nextNewline = this.newlineIndex(index);
            if (nextNewline < 0 || nextNewline >= index + length) return;
            var prevNewline = this.newlineIndex(index, true) + 1;
            var isolateLength = nextNewline - prevNewline + 1;
            var blot = this.isolate(prevNewline, isolateLength);
            var next = blot.next;
            blot.format(name, value);
            if (next instanceof CodeBlock) {
              next.formatAt(0, index - prevNewline + length - isolateLength, name, value);
            }
          }
        }, {
          key: 'insertAt',
          value: function insertAt(index, value, def) {
            if (def != null) return;

            var _descendant3 = this.descendant(_text2.default, index),
                _descendant4 = _slicedToArray(_descendant3, 2),
                text = _descendant4[0],
                offset = _descendant4[1];

            text.insertAt(offset, value);
          }
        }, {
          key: 'length',
          value: function length() {
            var length = this.domNode.textContent.length;
            if (!this.domNode.textContent.endsWith('\n')) {
              return length + 1;
            }
            return length;
          }
        }, {
          key: 'newlineIndex',
          value: function newlineIndex(searchIndex) {
            var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (!reverse) {
              var offset = this.domNode.textContent.slice(searchIndex).indexOf('\n');
              return offset > -1 ? searchIndex + offset : -1;
            } else {
              return this.domNode.textContent.slice(0, searchIndex).lastIndexOf('\n');
            }
          }
        }, {
          key: 'optimize',
          value: function optimize(context) {
            if (!this.domNode.textContent.endsWith('\n')) {
              this.appendChild(_parchment2.default.create('text', '\n'));
            }
            _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'optimize', this).call(this, context);
            var next = this.next;
            if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
              next.optimize(context);
              next.moveChildren(this);
              next.remove();
            }
          }
        }, {
          key: 'replace',
          value: function replace(target) {
            _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'replace', this).call(this, target);
            [].slice.call(this.domNode.querySelectorAll('*')).forEach(function (node) {
              var blot = _parchment2.default.find(node);
              if (blot == null) {
                node.parentNode.removeChild(node);
              } else if (blot instanceof _parchment2.default.Embed) {
                blot.remove();
              } else {
                blot.unwrap();
              }
            });
          }
        }], [{
          key: 'create',
          value: function create(value) {
            var domNode = _get(CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock), 'create', this).call(this, value);
            domNode.setAttribute('spellcheck', false);
            return domNode;
          }
        }, {
          key: 'formats',
          value: function formats() {
            return true;
          }
        }]);

        return CodeBlock;
      }(_block2.default);

      CodeBlock.blotName = 'code-block';
      CodeBlock.tagName = 'PRE';
      CodeBlock.TAB = '  ';

      exports.Code = Code;
      exports.default = CodeBlock;

      /***/
    },
    /* 14 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
        return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      };

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _op = __webpack_require__(20);

      var _op2 = _interopRequireDefault(_op);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _code = __webpack_require__(13);

      var _code2 = _interopRequireDefault(_code);

      var _cursor = __webpack_require__(24);

      var _cursor2 = _interopRequireDefault(_cursor);

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      var _break = __webpack_require__(16);

      var _break2 = _interopRequireDefault(_break);

      var _clone = __webpack_require__(21);

      var _clone2 = _interopRequireDefault(_clone);

      var _deepEqual = __webpack_require__(11);

      var _deepEqual2 = _interopRequireDefault(_deepEqual);

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var ASCII = /^[ -~]*$/;

      var Editor = function () {
        function Editor(scroll) {
          _classCallCheck(this, Editor);

          this.scroll = scroll;
          this.delta = this.getDelta();
        }

        _createClass(Editor, [{
          key: 'applyDelta',
          value: function applyDelta(delta) {
            var _this = this;

            var consumeNextNewline = false;
            this.scroll.update();
            var scrollLength = this.scroll.length();
            this.scroll.batchStart();
            delta = normalizeDelta(delta);
            delta.reduce(function (index, op) {
              var length = op.retain || op.delete || op.insert.length || 1;
              var attributes = op.attributes || {};
              if (op.insert != null) {
                if (typeof op.insert === 'string') {
                  var text = op.insert;
                  if (text.endsWith('\n') && consumeNextNewline) {
                    consumeNextNewline = false;
                    text = text.slice(0, -1);
                  }
                  if (index >= scrollLength && !text.endsWith('\n')) {
                    consumeNextNewline = true;
                  }
                  _this.scroll.insertAt(index, text);

                  var _scroll$line = _this.scroll.line(index),
                      _scroll$line2 = _slicedToArray(_scroll$line, 2),
                      line = _scroll$line2[0],
                      offset = _scroll$line2[1];

                  var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));
                  if (line instanceof _block2.default) {
                    var _line$descendant = line.descendant(_parchment2.default.Leaf, offset),
                        _line$descendant2 = _slicedToArray(_line$descendant, 1),
                        leaf = _line$descendant2[0];

                    formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));
                  }
                  attributes = _op2.default.attributes.diff(formats, attributes) || {};
                } else if (_typeof(op.insert) === 'object') {
                  var key = Object.keys(op.insert)[0]; // There should only be one key
                  if (key == null) return index;
                  _this.scroll.insertAt(index, key, op.insert[key]);
                }
                scrollLength += length;
              }
              Object.keys(attributes).forEach(function (name) {
                _this.scroll.formatAt(index, length, name, attributes[name]);
              });
              return index + length;
            }, 0);
            delta.reduce(function (index, op) {
              if (typeof op.delete === 'number') {
                _this.scroll.deleteAt(index, op.delete);
                return index;
              }
              return index + (op.retain || op.insert.length || 1);
            }, 0);
            this.scroll.batchEnd();
            return this.update(delta);
          }
        }, {
          key: 'deleteText',
          value: function deleteText(index, length) {
            this.scroll.deleteAt(index, length);
            return this.update(new _quillDelta2.default().retain(index).delete(length));
          }
        }, {
          key: 'formatLine',
          value: function formatLine(index, length) {
            var _this2 = this;

            var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            this.scroll.update();
            Object.keys(formats).forEach(function (format) {
              if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format]) return;
              var lines = _this2.scroll.lines(index, Math.max(length, 1));
              var lengthRemaining = length;
              lines.forEach(function (line) {
                var lineLength = line.length();
                if (!(line instanceof _code2.default)) {
                  line.format(format, formats[format]);
                } else {
                  var codeIndex = index - line.offset(_this2.scroll);
                  var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
                  line.formatAt(codeIndex, codeLength, format, formats[format]);
                }
                lengthRemaining -= lineLength;
              });
            });
            this.scroll.optimize();
            return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
          }
        }, {
          key: 'formatText',
          value: function formatText(index, length) {
            var _this3 = this;

            var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            Object.keys(formats).forEach(function (format) {
              _this3.scroll.formatAt(index, length, format, formats[format]);
            });
            return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
          }
        }, {
          key: 'getContents',
          value: function getContents(index, length) {
            return this.delta.slice(index, index + length);
          }
        }, {
          key: 'getDelta',
          value: function getDelta() {
            return this.scroll.lines().reduce(function (delta, line) {
              return delta.concat(line.delta());
            }, new _quillDelta2.default());
          }
        }, {
          key: 'getFormat',
          value: function getFormat(index) {
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            var lines = [],
                leaves = [];
            if (length === 0) {
              this.scroll.path(index).forEach(function (path) {
                var _path = _slicedToArray(path, 1),
                    blot = _path[0];

                if (blot instanceof _block2.default) {
                  lines.push(blot);
                } else if (blot instanceof _parchment2.default.Leaf) {
                  leaves.push(blot);
                }
              });
            } else {
              lines = this.scroll.lines(index, length);
              leaves = this.scroll.descendants(_parchment2.default.Leaf, index, length);
            }
            var formatsArr = [lines, leaves].map(function (blots) {
              if (blots.length === 0) return {};
              var formats = (0, _block.bubbleFormats)(blots.shift());
              while (Object.keys(formats).length > 0) {
                var blot = blots.shift();
                if (blot == null) return formats;
                formats = combineFormats((0, _block.bubbleFormats)(blot), formats);
              }
              return formats;
            });
            return _extend2.default.apply(_extend2.default, formatsArr);
          }
        }, {
          key: 'getText',
          value: function getText(index, length) {
            return this.getContents(index, length).filter(function (op) {
              return typeof op.insert === 'string';
            }).map(function (op) {
              return op.insert;
            }).join('');
          }
        }, {
          key: 'insertEmbed',
          value: function insertEmbed(index, embed, value) {
            this.scroll.insertAt(index, embed, value);
            return this.update(new _quillDelta2.default().retain(index).insert(_defineProperty({}, embed, value)));
          }
        }, {
          key: 'insertText',
          value: function insertText(index, text) {
            var _this4 = this;

            var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
            this.scroll.insertAt(index, text);
            Object.keys(formats).forEach(function (format) {
              _this4.scroll.formatAt(index, text.length, format, formats[format]);
            });
            return this.update(new _quillDelta2.default().retain(index).insert(text, (0, _clone2.default)(formats)));
          }
        }, {
          key: 'isBlank',
          value: function isBlank() {
            if (this.scroll.children.length == 0) return true;
            if (this.scroll.children.length > 1) return false;
            var block = this.scroll.children.head;
            if (block.statics.blotName !== _block2.default.blotName) return false;
            if (block.children.length > 1) return false;
            return block.children.head instanceof _break2.default;
          }
        }, {
          key: 'removeFormat',
          value: function removeFormat(index, length) {
            var text = this.getText(index, length);

            var _scroll$line3 = this.scroll.line(index + length),
                _scroll$line4 = _slicedToArray(_scroll$line3, 2),
                line = _scroll$line4[0],
                offset = _scroll$line4[1];

            var suffixLength = 0,
                suffix = new _quillDelta2.default();
            if (line != null) {
              if (!(line instanceof _code2.default)) {
                suffixLength = line.length() - offset;
              } else {
                suffixLength = line.newlineIndex(offset) - offset + 1;
              }
              suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\n');
            }
            var contents = this.getContents(index, length + suffixLength);
            var diff = contents.diff(new _quillDelta2.default().insert(text).concat(suffix));
            var delta = new _quillDelta2.default().retain(index).concat(diff);
            return this.applyDelta(delta);
          }
        }, {
          key: 'update',
          value: function update(change) {
            var mutations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
            var cursorIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

            var oldDelta = this.delta;
            if (mutations.length === 1 && mutations[0].type === 'characterData' && mutations[0].target.data.match(ASCII) && _parchment2.default.find(mutations[0].target)) {
              // Optimization for character changes
              var textBlot = _parchment2.default.find(mutations[0].target);
              var formats = (0, _block.bubbleFormats)(textBlot);
              var index = textBlot.offset(this.scroll);
              var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, '');
              var oldText = new _quillDelta2.default().insert(oldValue);
              var newText = new _quillDelta2.default().insert(textBlot.value());
              var diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, cursorIndex));
              change = diffDelta.reduce(function (delta, op) {
                if (op.insert) {
                  return delta.insert(op.insert, formats);
                } else {
                  return delta.push(op);
                }
              }, new _quillDelta2.default());
              this.delta = oldDelta.compose(change);
            } else {
              this.delta = this.getDelta();
              if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {
                change = oldDelta.diff(this.delta, cursorIndex);
              }
            }
            return change;
          }
        }]);

        return Editor;
      }();

      function combineFormats(formats, combined) {
        return Object.keys(combined).reduce(function (merged, name) {
          if (formats[name] == null) return merged;
          if (combined[name] === formats[name]) {
            merged[name] = combined[name];
          } else if (Array.isArray(combined[name])) {
            if (combined[name].indexOf(formats[name]) < 0) {
              merged[name] = combined[name].concat([formats[name]]);
            }
          } else {
            merged[name] = [combined[name], formats[name]];
          }
          return merged;
        }, {});
      }

      function normalizeDelta(delta) {
        return delta.reduce(function (delta, op) {
          if (op.insert === 1) {
            var attributes = (0, _clone2.default)(op.attributes);
            delete attributes['image'];
            return delta.insert({ image: op.attributes.image }, attributes);
          }
          if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
            op = (0, _clone2.default)(op);
            if (op.attributes.list) {
              op.attributes.list = 'ordered';
            } else {
              op.attributes.list = 'bullet';
              delete op.attributes.bullet;
            }
          }
          if (typeof op.insert === 'string') {
            var text = op.insert.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
            return delta.insert(text, op.attributes);
          }
          return delta.push(op);
        }, new _quillDelta2.default());
      }

      exports.default = Editor;

      /***/
    },
    /* 15 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.Range = undefined;

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _clone = __webpack_require__(21);

      var _clone2 = _interopRequireDefault(_clone);

      var _deepEqual = __webpack_require__(11);

      var _deepEqual2 = _interopRequireDefault(_deepEqual);

      var _emitter3 = __webpack_require__(8);

      var _emitter4 = _interopRequireDefault(_emitter3);

      var _logger = __webpack_require__(10);

      var _logger2 = _interopRequireDefault(_logger);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _toConsumableArray(arr) {
        if (Array.isArray(arr)) {
          for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
            arr2[i] = arr[i];
          }return arr2;
        } else {
          return Array.from(arr);
        }
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var debug = (0, _logger2.default)('quill:selection');

      var Range = function Range(index) {
        var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

        _classCallCheck(this, Range);

        this.index = index;
        this.length = length;
      };

      var Selection = function () {
        function Selection(scroll, emitter) {
          var _this = this;

          _classCallCheck(this, Selection);

          this.emitter = emitter;
          this.scroll = scroll;
          this.composing = false;
          this.mouseDown = false;
          this.root = this.scroll.domNode;
          this.cursor = _parchment2.default.create('cursor', this);
          // savedRange is last non-null range
          this.lastRange = this.savedRange = new Range(0, 0);
          this.handleComposition();
          this.handleDragging();
          this.emitter.listenDOM('selectionchange', document, function () {
            if (!_this.mouseDown) {
              setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 1);
            }
          });
          this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type, delta) {
            if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {
              _this.update(_emitter4.default.sources.SILENT);
            }
          });
          this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function () {
            if (!_this.hasFocus()) return;
            var native = _this.getNativeRange();
            if (native == null) return;
            if (native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle
            // TODO unclear if this has negative side effects
            _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function () {
              try {
                _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);
              } catch (ignored) {}
            });
          });
          this.emitter.on(_emitter4.default.events.SCROLL_OPTIMIZE, function (mutations, context) {
            if (context.range) {
              var _context$range = context.range,
                  startNode = _context$range.startNode,
                  startOffset = _context$range.startOffset,
                  endNode = _context$range.endNode,
                  endOffset = _context$range.endOffset;

              _this.setNativeRange(startNode, startOffset, endNode, endOffset);
            }
          });
          this.update(_emitter4.default.sources.SILENT);
        }

        _createClass(Selection, [{
          key: 'handleComposition',
          value: function handleComposition() {
            var _this2 = this;

            this.root.addEventListener('compositionstart', function () {
              _this2.composing = true;
            });
            this.root.addEventListener('compositionend', function () {
              _this2.composing = false;
              if (_this2.cursor.parent) {
                var range = _this2.cursor.restore();
                if (!range) return;
                setTimeout(function () {
                  _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);
                }, 1);
              }
            });
          }
        }, {
          key: 'handleDragging',
          value: function handleDragging() {
            var _this3 = this;

            this.emitter.listenDOM('mousedown', document.body, function () {
              _this3.mouseDown = true;
            });
            this.emitter.listenDOM('mouseup', document.body, function () {
              _this3.mouseDown = false;
              _this3.update(_emitter4.default.sources.USER);
            });
          }
        }, {
          key: 'focus',
          value: function focus() {
            if (this.hasFocus()) return;
            this.root.focus();
            this.setRange(this.savedRange);
          }
        }, {
          key: 'format',
          value: function format(_format, value) {
            if (this.scroll.whitelist != null && !this.scroll.whitelist[_format]) return;
            this.scroll.update();
            var nativeRange = this.getNativeRange();
            if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK)) return;
            if (nativeRange.start.node !== this.cursor.textNode) {
              var blot = _parchment2.default.find(nativeRange.start.node, false);
              if (blot == null) return;
              // TODO Give blot ability to not split
              if (blot instanceof _parchment2.default.Leaf) {
                var after = blot.split(nativeRange.start.offset);
                blot.parent.insertBefore(this.cursor, after);
              } else {
                blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen
              }
              this.cursor.attach();
            }
            this.cursor.format(_format, value);
            this.scroll.optimize();
            this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);
            this.update();
          }
        }, {
          key: 'getBounds',
          value: function getBounds(index) {
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            var scrollLength = this.scroll.length();
            index = Math.min(index, scrollLength - 1);
            length = Math.min(index + length, scrollLength - 1) - index;
            var node = void 0,
                _scroll$leaf = this.scroll.leaf(index),
                _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),
                leaf = _scroll$leaf2[0],
                offset = _scroll$leaf2[1];
            if (leaf == null) return null;

            var _leaf$position = leaf.position(offset, true);

            var _leaf$position2 = _slicedToArray(_leaf$position, 2);

            node = _leaf$position2[0];
            offset = _leaf$position2[1];

            var range = document.createRange();
            if (length > 0) {
              range.setStart(node, offset);

              var _scroll$leaf3 = this.scroll.leaf(index + length);

              var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);

              leaf = _scroll$leaf4[0];
              offset = _scroll$leaf4[1];

              if (leaf == null) return null;

              var _leaf$position3 = leaf.position(offset, true);

              var _leaf$position4 = _slicedToArray(_leaf$position3, 2);

              node = _leaf$position4[0];
              offset = _leaf$position4[1];

              range.setEnd(node, offset);
              return range.getBoundingClientRect();
            } else {
              var side = 'left';
              var rect = void 0;
              if (node instanceof Text) {
                if (offset < node.data.length) {
                  range.setStart(node, offset);
                  range.setEnd(node, offset + 1);
                } else {
                  range.setStart(node, offset - 1);
                  range.setEnd(node, offset);
                  side = 'right';
                }
                rect = range.getBoundingClientRect();
              } else {
                rect = leaf.domNode.getBoundingClientRect();
                if (offset > 0) side = 'right';
              }
              return {
                bottom: rect.top + rect.height,
                height: rect.height,
                left: rect[side],
                right: rect[side],
                top: rect.top,
                width: 0
              };
            }
          }
        }, {
          key: 'getNativeRange',
          value: function getNativeRange() {
            var selection = document.getSelection();
            if (selection == null || selection.rangeCount <= 0) return null;
            var nativeRange = selection.getRangeAt(0);
            if (nativeRange == null) return null;
            var range = this.normalizeNative(nativeRange);
            debug.info('getNativeRange', range);
            return range;
          }
        }, {
          key: 'getRange',
          value: function getRange() {
            var normalized = this.getNativeRange();
            if (normalized == null) return [null, null];
            var range = this.normalizedToRange(normalized);
            return [range, normalized];
          }
        }, {
          key: 'hasFocus',
          value: function hasFocus() {
            return document.activeElement === this.root;
          }
        }, {
          key: 'normalizedToRange',
          value: function normalizedToRange(range) {
            var _this4 = this;

            var positions = [[range.start.node, range.start.offset]];
            if (!range.native.collapsed) {
              positions.push([range.end.node, range.end.offset]);
            }
            var indexes = positions.map(function (position) {
              var _position = _slicedToArray(position, 2),
                  node = _position[0],
                  offset = _position[1];

              var blot = _parchment2.default.find(node, true);
              var index = blot.offset(_this4.scroll);
              if (offset === 0) {
                return index;
              } else if (blot instanceof _parchment2.default.Container) {
                return index + blot.length();
              } else {
                return index + blot.index(node, offset);
              }
            });
            var end = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);
            var start = Math.min.apply(Math, [end].concat(_toConsumableArray(indexes)));
            return new Range(start, end - start);
          }
        }, {
          key: 'normalizeNative',
          value: function normalizeNative(nativeRange) {
            if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {
              return null;
            }
            var range = {
              start: { node: nativeRange.startContainer, offset: nativeRange.startOffset },
              end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },
              native: nativeRange
            };
            [range.start, range.end].forEach(function (position) {
              var node = position.node,
                  offset = position.offset;
              while (!(node instanceof Text) && node.childNodes.length > 0) {
                if (node.childNodes.length > offset) {
                  node = node.childNodes[offset];
                  offset = 0;
                } else if (node.childNodes.length === offset) {
                  node = node.lastChild;
                  offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;
                } else {
                  break;
                }
              }
              position.node = node, position.offset = offset;
            });
            return range;
          }
        }, {
          key: 'rangeToNative',
          value: function rangeToNative(range) {
            var _this5 = this;

            var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];
            var args = [];
            var scrollLength = this.scroll.length();
            indexes.forEach(function (index, i) {
              index = Math.min(scrollLength - 1, index);
              var node = void 0,
                  _scroll$leaf5 = _this5.scroll.leaf(index),
                  _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),
                  leaf = _scroll$leaf6[0],
                  offset = _scroll$leaf6[1];
              var _leaf$position5 = leaf.position(offset, i !== 0);

              var _leaf$position6 = _slicedToArray(_leaf$position5, 2);

              node = _leaf$position6[0];
              offset = _leaf$position6[1];

              args.push(node, offset);
            });
            if (args.length < 2) {
              args = args.concat(args);
            }
            return args;
          }
        }, {
          key: 'scrollIntoView',
          value: function scrollIntoView(scrollingContainer) {
            var range = this.lastRange;
            if (range == null) return;
            var bounds = this.getBounds(range.index, range.length);
            if (bounds == null) return;
            var limit = this.scroll.length() - 1;

            var _scroll$line = this.scroll.line(Math.min(range.index, limit)),
                _scroll$line2 = _slicedToArray(_scroll$line, 1),
                first = _scroll$line2[0];

            var last = first;
            if (range.length > 0) {
              var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));

              var _scroll$line4 = _slicedToArray(_scroll$line3, 1);

              last = _scroll$line4[0];
            }
            if (first == null || last == null) return;
            var scrollBounds = scrollingContainer.getBoundingClientRect();
            if (bounds.top < scrollBounds.top) {
              scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;
            } else if (bounds.bottom > scrollBounds.bottom) {
              scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;
            }
          }
        }, {
          key: 'setNativeRange',
          value: function setNativeRange(startNode, startOffset) {
            var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startNode;
            var endOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : startOffset;
            var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

            debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);
            if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {
              return;
            }
            var selection = document.getSelection();
            if (selection == null) return;
            if (startNode != null) {
              if (!this.hasFocus()) this.root.focus();
              var native = (this.getNativeRange() || {}).native;
              if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {

                if (startNode.tagName == "BR") {
                  startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);
                  startNode = startNode.parentNode;
                }
                if (endNode.tagName == "BR") {
                  endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);
                  endNode = endNode.parentNode;
                }
                var range = document.createRange();
                range.setStart(startNode, startOffset);
                range.setEnd(endNode, endOffset);
                selection.removeAllRanges();
                selection.addRange(range);
              }
            } else {
              selection.removeAllRanges();
              this.root.blur();
              document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)
            }
          }
        }, {
          key: 'setRange',
          value: function setRange(range) {
            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;

            if (typeof force === 'string') {
              source = force;
              force = false;
            }
            debug.info('setRange', range);
            if (range != null) {
              var args = this.rangeToNative(range);
              this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));
            } else {
              this.setNativeRange(null);
            }
            this.update(source);
          }
        }, {
          key: 'update',
          value: function update() {
            var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;

            var oldRange = this.lastRange;

            var _getRange = this.getRange(),
                _getRange2 = _slicedToArray(_getRange, 2),
                lastRange = _getRange2[0],
                nativeRange = _getRange2[1];

            this.lastRange = lastRange;
            if (this.lastRange != null) {
              this.savedRange = this.lastRange;
            }
            if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {
              var _emitter;

              if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {
                this.cursor.restore();
              }
              var args = [_emitter4.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];
              (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
              if (source !== _emitter4.default.sources.SILENT) {
                var _emitter2;

                (_emitter2 = this.emitter).emit.apply(_emitter2, args);
              }
            }
          }
        }]);

        return Selection;
      }();

      function contains(parent, descendant) {
        try {
          // Firefox inserts inaccessible nodes around video elements
          descendant.parentNode;
        } catch (e) {
          return false;
        }
        // IE11 has bug with Text nodes
        // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect
        if (descendant instanceof Text) {
          descendant = descendant.parentNode;
        }
        return parent.contains(descendant);
      }

      exports.Range = Range;
      exports.default = Selection;

      /***/
    },
    /* 16 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Break = function (_Parchment$Embed) {
        _inherits(Break, _Parchment$Embed);

        function Break() {
          _classCallCheck(this, Break);

          return _possibleConstructorReturn(this, (Break.__proto__ || Object.getPrototypeOf(Break)).apply(this, arguments));
        }

        _createClass(Break, [{
          key: 'insertInto',
          value: function insertInto(parent, ref) {
            if (parent.children.length === 0) {
              _get(Break.prototype.__proto__ || Object.getPrototypeOf(Break.prototype), 'insertInto', this).call(this, parent, ref);
            } else {
              this.remove();
            }
          }
        }, {
          key: 'length',
          value: function length() {
            return 0;
          }
        }, {
          key: 'value',
          value: function value() {
            return '';
          }
        }], [{
          key: 'value',
          value: function value() {
            return undefined;
          }
        }]);

        return Break;
      }(_parchment2.default.Embed);

      Break.blotName = 'break';
      Break.tagName = 'BR';

      exports.default = Break;

      /***/
    },
    /* 17 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var linked_list_1 = __webpack_require__(44);
      var shadow_1 = __webpack_require__(30);
      var Registry = __webpack_require__(1);
      var ContainerBlot = /** @class */function (_super) {
        __extends(ContainerBlot, _super);
        function ContainerBlot(domNode) {
          var _this = _super.call(this, domNode) || this;
          _this.build();
          return _this;
        }
        ContainerBlot.prototype.appendChild = function (other) {
          this.insertBefore(other);
        };
        ContainerBlot.prototype.attach = function () {
          _super.prototype.attach.call(this);
          this.children.forEach(function (child) {
            child.attach();
          });
        };
        ContainerBlot.prototype.build = function () {
          var _this = this;
          this.children = new linked_list_1.default();
          // Need to be reversed for if DOM nodes already in order
          [].slice.call(this.domNode.childNodes).reverse().forEach(function (node) {
            try {
              var child = makeBlot(node);
              _this.insertBefore(child, _this.children.head || undefined);
            } catch (err) {
              if (err instanceof Registry.ParchmentError) return;else throw err;
            }
          });
        };
        ContainerBlot.prototype.deleteAt = function (index, length) {
          if (index === 0 && length === this.length()) {
            return this.remove();
          }
          this.children.forEachAt(index, length, function (child, offset, length) {
            child.deleteAt(offset, length);
          });
        };
        ContainerBlot.prototype.descendant = function (criteria, index) {
          var _a = this.children.find(index),
              child = _a[0],
              offset = _a[1];
          if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
            return [child, offset];
          } else if (child instanceof ContainerBlot) {
            return child.descendant(criteria, offset);
          } else {
            return [null, -1];
          }
        };
        ContainerBlot.prototype.descendants = function (criteria, index, length) {
          if (index === void 0) {
            index = 0;
          }
          if (length === void 0) {
            length = Number.MAX_VALUE;
          }
          var descendants = [];
          var lengthLeft = length;
          this.children.forEachAt(index, length, function (child, index, length) {
            if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
              descendants.push(child);
            }
            if (child instanceof ContainerBlot) {
              descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));
            }
            lengthLeft -= length;
          });
          return descendants;
        };
        ContainerBlot.prototype.detach = function () {
          this.children.forEach(function (child) {
            child.detach();
          });
          _super.prototype.detach.call(this);
        };
        ContainerBlot.prototype.formatAt = function (index, length, name, value) {
          this.children.forEachAt(index, length, function (child, offset, length) {
            child.formatAt(offset, length, name, value);
          });
        };
        ContainerBlot.prototype.insertAt = function (index, value, def) {
          var _a = this.children.find(index),
              child = _a[0],
              offset = _a[1];
          if (child) {
            child.insertAt(offset, value, def);
          } else {
            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
            this.appendChild(blot);
          }
        };
        ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {
          if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function (child) {
            return childBlot instanceof child;
          })) {
            throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
          }
          childBlot.insertInto(this, refBlot);
        };
        ContainerBlot.prototype.length = function () {
          return this.children.reduce(function (memo, child) {
            return memo + child.length();
          }, 0);
        };
        ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {
          this.children.forEach(function (child) {
            targetParent.insertBefore(child, refNode);
          });
        };
        ContainerBlot.prototype.optimize = function (context) {
          _super.prototype.optimize.call(this, context);
          if (this.children.length === 0) {
            if (this.statics.defaultChild != null) {
              var child = Registry.create(this.statics.defaultChild);
              this.appendChild(child);
              child.optimize(context);
            } else {
              this.remove();
            }
          }
        };
        ContainerBlot.prototype.path = function (index, inclusive) {
          if (inclusive === void 0) {
            inclusive = false;
          }
          var _a = this.children.find(index, inclusive),
              child = _a[0],
              offset = _a[1];
          var position = [[this, index]];
          if (child instanceof ContainerBlot) {
            return position.concat(child.path(offset, inclusive));
          } else if (child != null) {
            position.push([child, offset]);
          }
          return position;
        };
        ContainerBlot.prototype.removeChild = function (child) {
          this.children.remove(child);
        };
        ContainerBlot.prototype.replace = function (target) {
          if (target instanceof ContainerBlot) {
            target.moveChildren(this);
          }
          _super.prototype.replace.call(this, target);
        };
        ContainerBlot.prototype.split = function (index, force) {
          if (force === void 0) {
            force = false;
          }
          if (!force) {
            if (index === 0) return this;
            if (index === this.length()) return this.next;
          }
          var after = this.clone();
          this.parent.insertBefore(after, this.next);
          this.children.forEachAt(index, this.length(), function (child, offset, length) {
            child = child.split(offset, force);
            after.appendChild(child);
          });
          return after;
        };
        ContainerBlot.prototype.unwrap = function () {
          this.moveChildren(this.parent, this.next);
          this.remove();
        };
        ContainerBlot.prototype.update = function (mutations, context) {
          var _this = this;
          var addedNodes = [];
          var removedNodes = [];
          mutations.forEach(function (mutation) {
            if (mutation.target === _this.domNode && mutation.type === 'childList') {
              addedNodes.push.apply(addedNodes, mutation.addedNodes);
              removedNodes.push.apply(removedNodes, mutation.removedNodes);
            }
          });
          removedNodes.forEach(function (node) {
            // Check node has actually been removed
            // One exception is Chrome does not immediately remove IFRAMEs
            // from DOM but MutationRecord is correct in its reported removal
            if (node.parentNode != null &&
            // @ts-ignore
            node.tagName !== 'IFRAME' && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
              return;
            }
            var blot = Registry.find(node);
            if (blot == null) return;
            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
              blot.detach();
            }
          });
          addedNodes.filter(function (node) {
            return node.parentNode == _this.domNode;
          }).sort(function (a, b) {
            if (a === b) return 0;
            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {
              return 1;
            }
            return -1;
          }).forEach(function (node) {
            var refBlot = null;
            if (node.nextSibling != null) {
              refBlot = Registry.find(node.nextSibling);
            }
            var blot = makeBlot(node);
            if (blot.next != refBlot || blot.next == null) {
              if (blot.parent != null) {
                blot.parent.removeChild(_this);
              }
              _this.insertBefore(blot, refBlot || undefined);
            }
          });
        };
        return ContainerBlot;
      }(shadow_1.default);
      function makeBlot(node) {
        var blot = Registry.find(node);
        if (blot == null) {
          try {
            blot = Registry.create(node);
          } catch (e) {
            blot = Registry.create(Registry.Scope.INLINE);
            [].slice.call(node.childNodes).forEach(function (child) {
              // @ts-ignore
              blot.domNode.appendChild(child);
            });
            if (node.parentNode) {
              node.parentNode.replaceChild(blot.domNode, node);
            }
            blot.attach();
          }
        }
        return blot;
      }
      exports.default = ContainerBlot;

      /***/
    },
    /* 18 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var attributor_1 = __webpack_require__(12);
      var store_1 = __webpack_require__(31);
      var container_1 = __webpack_require__(17);
      var Registry = __webpack_require__(1);
      var FormatBlot = /** @class */function (_super) {
        __extends(FormatBlot, _super);
        function FormatBlot(domNode) {
          var _this = _super.call(this, domNode) || this;
          _this.attributes = new store_1.default(_this.domNode);
          return _this;
        }
        FormatBlot.formats = function (domNode) {
          if (typeof this.tagName === 'string') {
            return true;
          } else if (Array.isArray(this.tagName)) {
            return domNode.tagName.toLowerCase();
          }
          return undefined;
        };
        FormatBlot.prototype.format = function (name, value) {
          var format = Registry.query(name);
          if (format instanceof attributor_1.default) {
            this.attributes.attribute(format, value);
          } else if (value) {
            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {
              this.replaceWith(name, value);
            }
          }
        };
        FormatBlot.prototype.formats = function () {
          var formats = this.attributes.values();
          var format = this.statics.formats(this.domNode);
          if (format != null) {
            formats[this.statics.blotName] = format;
          }
          return formats;
        };
        FormatBlot.prototype.replaceWith = function (name, value) {
          var replacement = _super.prototype.replaceWith.call(this, name, value);
          this.attributes.copy(replacement);
          return replacement;
        };
        FormatBlot.prototype.update = function (mutations, context) {
          var _this = this;
          _super.prototype.update.call(this, mutations, context);
          if (mutations.some(function (mutation) {
            return mutation.target === _this.domNode && mutation.type === 'attributes';
          })) {
            this.attributes.build();
          }
        };
        FormatBlot.prototype.wrap = function (name, value) {
          var wrapper = _super.prototype.wrap.call(this, name, value);
          if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {
            this.attributes.move(wrapper);
          }
          return wrapper;
        };
        return FormatBlot;
      }(container_1.default);
      exports.default = FormatBlot;

      /***/
    },
    /* 19 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var shadow_1 = __webpack_require__(30);
      var Registry = __webpack_require__(1);
      var LeafBlot = /** @class */function (_super) {
        __extends(LeafBlot, _super);
        function LeafBlot() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        LeafBlot.value = function (domNode) {
          return true;
        };
        LeafBlot.prototype.index = function (node, offset) {
          if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
            return Math.min(offset, 1);
          }
          return -1;
        };
        LeafBlot.prototype.position = function (index, inclusive) {
          var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
          if (index > 0) offset += 1;
          return [this.parent.domNode, offset];
        };
        LeafBlot.prototype.value = function () {
          return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;
          var _a;
        };
        LeafBlot.scope = Registry.Scope.INLINE_BLOT;
        return LeafBlot;
      }(shadow_1.default);
      exports.default = LeafBlot;

      /***/
    },
    /* 20 */
    /***/function (module, exports, __webpack_require__) {

      var equal = __webpack_require__(11);
      var extend = __webpack_require__(3);

      var lib = {
        attributes: {
          compose: function compose(a, b, keepNull) {
            if ((typeof a === 'undefined' ? 'undefined' : _typeof2(a)) !== 'object') a = {};
            if ((typeof b === 'undefined' ? 'undefined' : _typeof2(b)) !== 'object') b = {};
            var attributes = extend(true, {}, b);
            if (!keepNull) {
              attributes = Object.keys(attributes).reduce(function (copy, key) {
                if (attributes[key] != null) {
                  copy[key] = attributes[key];
                }
                return copy;
              }, {});
            }
            for (var key in a) {
              if (a[key] !== undefined && b[key] === undefined) {
                attributes[key] = a[key];
              }
            }
            return Object.keys(attributes).length > 0 ? attributes : undefined;
          },

          diff: function diff(a, b) {
            if ((typeof a === 'undefined' ? 'undefined' : _typeof2(a)) !== 'object') a = {};
            if ((typeof b === 'undefined' ? 'undefined' : _typeof2(b)) !== 'object') b = {};
            var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {
              if (!equal(a[key], b[key])) {
                attributes[key] = b[key] === undefined ? null : b[key];
              }
              return attributes;
            }, {});
            return Object.keys(attributes).length > 0 ? attributes : undefined;
          },

          transform: function transform(a, b, priority) {
            if ((typeof a === 'undefined' ? 'undefined' : _typeof2(a)) !== 'object') return b;
            if ((typeof b === 'undefined' ? 'undefined' : _typeof2(b)) !== 'object') return undefined;
            if (!priority) return b; // b simply overwrites us without priority
            var attributes = Object.keys(b).reduce(function (attributes, key) {
              if (a[key] === undefined) attributes[key] = b[key]; // null is a valid value
              return attributes;
            }, {});
            return Object.keys(attributes).length > 0 ? attributes : undefined;
          }
        },

        iterator: function iterator(ops) {
          return new Iterator(ops);
        },

        length: function length(op) {
          if (typeof op['delete'] === 'number') {
            return op['delete'];
          } else if (typeof op.retain === 'number') {
            return op.retain;
          } else {
            return typeof op.insert === 'string' ? op.insert.length : 1;
          }
        }
      };

      function Iterator(ops) {
        this.ops = ops;
        this.index = 0;
        this.offset = 0;
      };

      Iterator.prototype.hasNext = function () {
        return this.peekLength() < Infinity;
      };

      Iterator.prototype.next = function (length) {
        if (!length) length = Infinity;
        var nextOp = this.ops[this.index];
        if (nextOp) {
          var offset = this.offset;
          var opLength = lib.length(nextOp);
          if (length >= opLength - offset) {
            length = opLength - offset;
            this.index += 1;
            this.offset = 0;
          } else {
            this.offset += length;
          }
          if (typeof nextOp['delete'] === 'number') {
            return { 'delete': length };
          } else {
            var retOp = {};
            if (nextOp.attributes) {
              retOp.attributes = nextOp.attributes;
            }
            if (typeof nextOp.retain === 'number') {
              retOp.retain = length;
            } else if (typeof nextOp.insert === 'string') {
              retOp.insert = nextOp.insert.substr(offset, length);
            } else {
              // offset should === 0, length should === 1
              retOp.insert = nextOp.insert;
            }
            return retOp;
          }
        } else {
          return { retain: Infinity };
        }
      };

      Iterator.prototype.peek = function () {
        return this.ops[this.index];
      };

      Iterator.prototype.peekLength = function () {
        if (this.ops[this.index]) {
          // Should never return 0 if our index is being managed correctly
          return lib.length(this.ops[this.index]) - this.offset;
        } else {
          return Infinity;
        }
      };

      Iterator.prototype.peekType = function () {
        if (this.ops[this.index]) {
          if (typeof this.ops[this.index]['delete'] === 'number') {
            return 'delete';
          } else if (typeof this.ops[this.index].retain === 'number') {
            return 'retain';
          } else {
            return 'insert';
          }
        }
        return 'retain';
      };

      module.exports = lib;

      /***/
    },
    /* 21 */
    /***/function (module, exports) {

      var clone = function () {
        'use strict';

        function _instanceof(obj, type) {
          return type != null && obj instanceof type;
        }

        var nativeMap;
        try {
          nativeMap = Map;
        } catch (_) {
          // maybe a reference error because no `Map`. Give it a dummy value that no
          // value will ever be an instanceof.
          nativeMap = function nativeMap() {};
        }

        var nativeSet;
        try {
          nativeSet = Set;
        } catch (_) {
          nativeSet = function nativeSet() {};
        }

        var nativePromise;
        try {
          nativePromise = Promise;
        } catch (_) {
          nativePromise = function nativePromise() {};
        }

        /**
         * Clones (copies) an Object using deep copying.
         *
         * This function supports circular references by default, but if you are certain
         * there are no circular references in your object, you can save some CPU time
         * by calling clone(obj, false).
         *
         * Caution: if `circular` is false and `parent` contains circular references,
         * your program may enter an infinite loop and crash.
         *
         * @param `parent` - the object to be cloned
         * @param `circular` - set to true if the object to be cloned may contain
         *    circular references. (optional - true by default)
         * @param `depth` - set to a number if the object is only to be cloned to
         *    a particular depth. (optional - defaults to Infinity)
         * @param `prototype` - sets the prototype to be used when cloning an object.
         *    (optional - defaults to parent prototype).
         * @param `includeNonEnumerable` - set to true if the non-enumerable properties
         *    should be cloned as well. Non-enumerable properties on the prototype
         *    chain will be ignored. (optional - false by default)
        */
        function clone(parent, circular, depth, prototype, includeNonEnumerable) {
          if ((typeof circular === 'undefined' ? 'undefined' : _typeof2(circular)) === 'object') {
            depth = circular.depth;
            prototype = circular.prototype;
            includeNonEnumerable = circular.includeNonEnumerable;
            circular = circular.circular;
          }
          // maintain two arrays for circular references, where corresponding parents
          // and children have the same index
          var allParents = [];
          var allChildren = [];

          var useBuffer = typeof Buffer != 'undefined';

          if (typeof circular == 'undefined') circular = true;

          if (typeof depth == 'undefined') depth = Infinity;

          // recurse this function so we don't reset allParents and allChildren
          function _clone(parent, depth) {
            // cloning null always returns null
            if (parent === null) return null;

            if (depth === 0) return parent;

            var child;
            var proto;
            if ((typeof parent === 'undefined' ? 'undefined' : _typeof2(parent)) != 'object') {
              return parent;
            }

            if (_instanceof(parent, nativeMap)) {
              child = new nativeMap();
            } else if (_instanceof(parent, nativeSet)) {
              child = new nativeSet();
            } else if (_instanceof(parent, nativePromise)) {
              child = new nativePromise(function (resolve, reject) {
                parent.then(function (value) {
                  resolve(_clone(value, depth - 1));
                }, function (err) {
                  reject(_clone(err, depth - 1));
                });
              });
            } else if (clone.__isArray(parent)) {
              child = [];
            } else if (clone.__isRegExp(parent)) {
              child = new RegExp(parent.source, __getRegExpFlags(parent));
              if (parent.lastIndex) child.lastIndex = parent.lastIndex;
            } else if (clone.__isDate(parent)) {
              child = new Date(parent.getTime());
            } else if (useBuffer && Buffer.isBuffer(parent)) {
              child = new Buffer(parent.length);
              parent.copy(child);
              return child;
            } else if (_instanceof(parent, Error)) {
              child = Object.create(parent);
            } else {
              if (typeof prototype == 'undefined') {
                proto = Object.getPrototypeOf(parent);
                child = Object.create(proto);
              } else {
                child = Object.create(prototype);
                proto = prototype;
              }
            }

            if (circular) {
              var index = allParents.indexOf(parent);

              if (index != -1) {
                return allChildren[index];
              }
              allParents.push(parent);
              allChildren.push(child);
            }

            if (_instanceof(parent, nativeMap)) {
              parent.forEach(function (value, key) {
                var keyChild = _clone(key, depth - 1);
                var valueChild = _clone(value, depth - 1);
                child.set(keyChild, valueChild);
              });
            }
            if (_instanceof(parent, nativeSet)) {
              parent.forEach(function (value) {
                var entryChild = _clone(value, depth - 1);
                child.add(entryChild);
              });
            }

            for (var i in parent) {
              var attrs;
              if (proto) {
                attrs = Object.getOwnPropertyDescriptor(proto, i);
              }

              if (attrs && attrs.set == null) {
                continue;
              }
              child[i] = _clone(parent[i], depth - 1);
            }

            if (Object.getOwnPropertySymbols) {
              var symbols = Object.getOwnPropertySymbols(parent);
              for (var i = 0; i < symbols.length; i++) {
                // Don't need to worry about cloning a symbol because it is a primitive,
                // like a number or string.
                var symbol = symbols[i];
                var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
                if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
                  continue;
                }
                child[symbol] = _clone(parent[symbol], depth - 1);
                if (!descriptor.enumerable) {
                  Object.defineProperty(child, symbol, {
                    enumerable: false
                  });
                }
              }
            }

            if (includeNonEnumerable) {
              var allPropertyNames = Object.getOwnPropertyNames(parent);
              for (var i = 0; i < allPropertyNames.length; i++) {
                var propertyName = allPropertyNames[i];
                var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
                if (descriptor && descriptor.enumerable) {
                  continue;
                }
                child[propertyName] = _clone(parent[propertyName], depth - 1);
                Object.defineProperty(child, propertyName, {
                  enumerable: false
                });
              }
            }

            return child;
          }

          return _clone(parent, depth);
        }

        /**
         * Simple flat clone using prototype, accepts only objects, usefull for property
         * override on FLAT configuration object (no nested props).
         *
         * USE WITH CAUTION! This may not behave as you wish if you do not know how this
         * works.
         */
        clone.clonePrototype = function clonePrototype(parent) {
          if (parent === null) return null;

          var c = function c() {};
          c.prototype = parent;
          return new c();
        };

        // private utility functions

        function __objToStr(o) {
          return Object.prototype.toString.call(o);
        }
        clone.__objToStr = __objToStr;

        function __isDate(o) {
          return (typeof o === 'undefined' ? 'undefined' : _typeof2(o)) === 'object' && __objToStr(o) === '[object Date]';
        }
        clone.__isDate = __isDate;

        function __isArray(o) {
          return (typeof o === 'undefined' ? 'undefined' : _typeof2(o)) === 'object' && __objToStr(o) === '[object Array]';
        }
        clone.__isArray = __isArray;

        function __isRegExp(o) {
          return (typeof o === 'undefined' ? 'undefined' : _typeof2(o)) === 'object' && __objToStr(o) === '[object RegExp]';
        }
        clone.__isRegExp = __isRegExp;

        function __getRegExpFlags(re) {
          var flags = '';
          if (re.global) flags += 'g';
          if (re.ignoreCase) flags += 'i';
          if (re.multiline) flags += 'm';
          return flags;
        }
        clone.__getRegExpFlags = __getRegExpFlags;

        return clone;
      }();

      if ((typeof module === 'undefined' ? 'undefined' : _typeof2(module)) === 'object' && module.exports) {
        module.exports = clone;
      }

      /***/
    },
    /* 22 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _emitter = __webpack_require__(8);

      var _emitter2 = _interopRequireDefault(_emitter);

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      var _break = __webpack_require__(16);

      var _break2 = _interopRequireDefault(_break);

      var _code = __webpack_require__(13);

      var _code2 = _interopRequireDefault(_code);

      var _container = __webpack_require__(25);

      var _container2 = _interopRequireDefault(_container);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      function isLine(blot) {
        return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;
      }

      var Scroll = function (_Parchment$Scroll) {
        _inherits(Scroll, _Parchment$Scroll);

        function Scroll(domNode, config) {
          _classCallCheck(this, Scroll);

          var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, domNode));

          _this.emitter = config.emitter;
          if (Array.isArray(config.whitelist)) {
            _this.whitelist = config.whitelist.reduce(function (whitelist, format) {
              whitelist[format] = true;
              return whitelist;
            }, {});
          }
          // Some reason fixes composition issues with character languages in Windows/Chrome, Safari
          _this.domNode.addEventListener('DOMNodeInserted', function () {});
          _this.optimize();
          _this.enable();
          return _this;
        }

        _createClass(Scroll, [{
          key: 'batchStart',
          value: function batchStart() {
            this.batch = true;
          }
        }, {
          key: 'batchEnd',
          value: function batchEnd() {
            this.batch = false;
            this.optimize();
          }
        }, {
          key: 'deleteAt',
          value: function deleteAt(index, length) {
            var _line = this.line(index),
                _line2 = _slicedToArray(_line, 2),
                first = _line2[0],
                offset = _line2[1];

            var _line3 = this.line(index + length),
                _line4 = _slicedToArray(_line3, 1),
                last = _line4[0];

            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'deleteAt', this).call(this, index, length);
            if (last != null && first !== last && offset > 0) {
              if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {
                this.optimize();
                return;
              }
              if (first instanceof _code2.default) {
                var newlineIndex = first.newlineIndex(first.length(), true);
                if (newlineIndex > -1) {
                  first = first.split(newlineIndex + 1);
                  if (first === last) {
                    this.optimize();
                    return;
                  }
                }
              } else if (last instanceof _code2.default) {
                var _newlineIndex = last.newlineIndex(0);
                if (_newlineIndex > -1) {
                  last.split(_newlineIndex + 1);
                }
              }
              var ref = last.children.head instanceof _break2.default ? null : last.children.head;
              first.moveChildren(last, ref);
              first.remove();
            }
            this.optimize();
          }
        }, {
          key: 'enable',
          value: function enable() {
            var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

            this.domNode.setAttribute('contenteditable', enabled);
          }
        }, {
          key: 'formatAt',
          value: function formatAt(index, length, format, value) {
            if (this.whitelist != null && !this.whitelist[format]) return;
            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'formatAt', this).call(this, index, length, format, value);
            this.optimize();
          }
        }, {
          key: 'insertAt',
          value: function insertAt(index, value, def) {
            if (def != null && this.whitelist != null && !this.whitelist[value]) return;
            if (index >= this.length()) {
              if (def == null || _parchment2.default.query(value, _parchment2.default.Scope.BLOCK) == null) {
                var blot = _parchment2.default.create(this.statics.defaultChild);
                this.appendChild(blot);
                if (def == null && value.endsWith('\n')) {
                  value = value.slice(0, -1);
                }
                blot.insertAt(0, value, def);
              } else {
                var embed = _parchment2.default.create(value, def);
                this.appendChild(embed);
              }
            } else {
              _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertAt', this).call(this, index, value, def);
            }
            this.optimize();
          }
        }, {
          key: 'insertBefore',
          value: function insertBefore(blot, ref) {
            if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {
              var wrapper = _parchment2.default.create(this.statics.defaultChild);
              wrapper.appendChild(blot);
              blot = wrapper;
            }
            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertBefore', this).call(this, blot, ref);
          }
        }, {
          key: 'leaf',
          value: function leaf(index) {
            return this.path(index).pop() || [null, -1];
          }
        }, {
          key: 'line',
          value: function line(index) {
            if (index === this.length()) {
              return this.line(index - 1);
            }
            return this.descendant(isLine, index);
          }
        }, {
          key: 'lines',
          value: function lines() {
            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

            var getLines = function getLines(blot, index, length) {
              var lines = [],
                  lengthLeft = length;
              blot.children.forEachAt(index, length, function (child, index, length) {
                if (isLine(child)) {
                  lines.push(child);
                } else if (child instanceof _parchment2.default.Container) {
                  lines = lines.concat(getLines(child, index, lengthLeft));
                }
                lengthLeft -= length;
              });
              return lines;
            };
            return getLines(this, index, length);
          }
        }, {
          key: 'optimize',
          value: function optimize() {
            var mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
            var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            if (this.batch === true) return;
            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'optimize', this).call(this, mutations, context);
            if (mutations.length > 0) {
              this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);
            }
          }
        }, {
          key: 'path',
          value: function path(index) {
            return _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'path', this).call(this, index).slice(1); // Exclude self
          }
        }, {
          key: 'update',
          value: function update(mutations) {
            if (this.batch === true) return;
            var source = _emitter2.default.sources.USER;
            if (typeof mutations === 'string') {
              source = mutations;
            }
            if (!Array.isArray(mutations)) {
              mutations = this.observer.takeRecords();
            }
            if (mutations.length > 0) {
              this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);
            }
            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'update', this).call(this, mutations.concat([])); // pass copy
            if (mutations.length > 0) {
              this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);
            }
          }
        }]);

        return Scroll;
      }(_parchment2.default.Scroll);

      Scroll.blotName = 'scroll';
      Scroll.className = 'ql-editor';
      Scroll.tagName = 'DIV';
      Scroll.defaultChild = 'block';
      Scroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];

      exports.default = Scroll;

      /***/
    },
    /* 23 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.SHORTKEY = exports.default = undefined;

      var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
        return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      };

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _clone = __webpack_require__(21);

      var _clone2 = _interopRequireDefault(_clone);

      var _deepEqual = __webpack_require__(11);

      var _deepEqual2 = _interopRequireDefault(_deepEqual);

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _op = __webpack_require__(20);

      var _op2 = _interopRequireDefault(_op);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _logger = __webpack_require__(10);

      var _logger2 = _interopRequireDefault(_logger);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var debug = (0, _logger2.default)('quill:keyboard');

      var SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';

      var Keyboard = function (_Module) {
        _inherits(Keyboard, _Module);

        _createClass(Keyboard, null, [{
          key: 'match',
          value: function match(evt, binding) {
            binding = normalize(binding);
            if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(function (key) {
              return !!binding[key] !== evt[key] && binding[key] !== null;
            })) {
              return false;
            }
            return binding.key === (evt.which || evt.keyCode);
          }
        }]);

        function Keyboard(quill, options) {
          _classCallCheck(this, Keyboard);

          var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this, quill, options));

          _this.bindings = {};
          Object.keys(_this.options.bindings).forEach(function (name) {
            if (name === 'list autofill' && quill.scroll.whitelist != null && !quill.scroll.whitelist['list']) {
              return;
            }
            if (_this.options.bindings[name]) {
              _this.addBinding(_this.options.bindings[name]);
            }
          });
          _this.addBinding({ key: Keyboard.keys.ENTER, shiftKey: null }, handleEnter);
          _this.addBinding({ key: Keyboard.keys.ENTER, metaKey: null, ctrlKey: null, altKey: null }, function () {});
          if (/Firefox/i.test(navigator.userAgent)) {
            // Need to handle delete and backspace for Firefox in the general case #1171
            _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true }, handleBackspace);
            _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true }, handleDelete);
          } else {
            _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);
            _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true, suffix: /^.?$/ }, handleDelete);
          }
          _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: false }, handleDeleteRange);
          _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: false }, handleDeleteRange);
          _this.addBinding({ key: Keyboard.keys.BACKSPACE, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null }, { collapsed: true, offset: 0 }, handleBackspace);
          _this.listen();
          return _this;
        }

        _createClass(Keyboard, [{
          key: 'addBinding',
          value: function addBinding(key) {
            var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

            var binding = normalize(key);
            if (binding == null || binding.key == null) {
              return debug.warn('Attempted to add invalid keyboard binding', binding);
            }
            if (typeof context === 'function') {
              context = { handler: context };
            }
            if (typeof handler === 'function') {
              handler = { handler: handler };
            }
            binding = (0, _extend2.default)(binding, context, handler);
            this.bindings[binding.key] = this.bindings[binding.key] || [];
            this.bindings[binding.key].push(binding);
          }
        }, {
          key: 'listen',
          value: function listen() {
            var _this2 = this;

            this.quill.root.addEventListener('keydown', function (evt) {
              if (evt.defaultPrevented) return;
              var which = evt.which || evt.keyCode;
              var bindings = (_this2.bindings[which] || []).filter(function (binding) {
                return Keyboard.match(evt, binding);
              });
              if (bindings.length === 0) return;
              var range = _this2.quill.getSelection();
              if (range == null || !_this2.quill.hasFocus()) return;

              var _quill$getLine = _this2.quill.getLine(range.index),
                  _quill$getLine2 = _slicedToArray(_quill$getLine, 2),
                  line = _quill$getLine2[0],
                  offset = _quill$getLine2[1];

              var _quill$getLeaf = _this2.quill.getLeaf(range.index),
                  _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),
                  leafStart = _quill$getLeaf2[0],
                  offsetStart = _quill$getLeaf2[1];

              var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length),
                  _ref2 = _slicedToArray(_ref, 2),
                  leafEnd = _ref2[0],
                  offsetEnd = _ref2[1];

              var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : '';
              var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : '';
              var curContext = {
                collapsed: range.length === 0,
                empty: range.length === 0 && line.length() <= 1,
                format: _this2.quill.getFormat(range),
                offset: offset,
                prefix: prefixText,
                suffix: suffixText
              };
              var prevented = bindings.some(function (binding) {
                if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) return false;
                if (binding.empty != null && binding.empty !== curContext.empty) return false;
                if (binding.offset != null && binding.offset !== curContext.offset) return false;
                if (Array.isArray(binding.format)) {
                  // any format is present
                  if (binding.format.every(function (name) {
                    return curContext.format[name] == null;
                  })) {
                    return false;
                  }
                } else if (_typeof(binding.format) === 'object') {
                  // all formats must match
                  if (!Object.keys(binding.format).every(function (name) {
                    if (binding.format[name] === true) return curContext.format[name] != null;
                    if (binding.format[name] === false) return curContext.format[name] == null;
                    return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);
                  })) {
                    return false;
                  }
                }
                if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) return false;
                if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) return false;
                return binding.handler.call(_this2, range, curContext) !== true;
              });
              if (prevented) {
                evt.preventDefault();
              }
            });
          }
        }]);

        return Keyboard;
      }(_module2.default);

      Keyboard.keys = {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        ESCAPE: 27,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        DELETE: 46
      };

      Keyboard.DEFAULTS = {
        bindings: {
          'bold': makeFormatHandler('bold'),
          'italic': makeFormatHandler('italic'),
          'underline': makeFormatHandler('underline'),
          'indent': {
            // highlight tab or tab at beginning of list, indent or blockquote
            key: Keyboard.keys.TAB,
            format: ['blockquote', 'indent', 'list'],
            handler: function handler(range, context) {
              if (context.collapsed && context.offset !== 0) return true;
              this.quill.format('indent', '+1', _quill2.default.sources.USER);
            }
          },
          'outdent': {
            key: Keyboard.keys.TAB,
            shiftKey: true,
            format: ['blockquote', 'indent', 'list'],
            // highlight tab or tab at beginning of list, indent or blockquote
            handler: function handler(range, context) {
              if (context.collapsed && context.offset !== 0) return true;
              this.quill.format('indent', '-1', _quill2.default.sources.USER);
            }
          },
          'outdent backspace': {
            key: Keyboard.keys.BACKSPACE,
            collapsed: true,
            shiftKey: null,
            metaKey: null,
            ctrlKey: null,
            altKey: null,
            format: ['indent', 'list'],
            offset: 0,
            handler: function handler(range, context) {
              if (context.format.indent != null) {
                this.quill.format('indent', '-1', _quill2.default.sources.USER);
              } else if (context.format.list != null) {
                this.quill.format('list', false, _quill2.default.sources.USER);
              }
            }
          },
          'indent code-block': makeCodeBlockHandler(true),
          'outdent code-block': makeCodeBlockHandler(false),
          'remove tab': {
            key: Keyboard.keys.TAB,
            shiftKey: true,
            collapsed: true,
            prefix: /\t$/,
            handler: function handler(range) {
              this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);
            }
          },
          'tab': {
            key: Keyboard.keys.TAB,
            handler: function handler(range) {
              this.quill.history.cutoff();
              var delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert('\t');
              this.quill.updateContents(delta, _quill2.default.sources.USER);
              this.quill.history.cutoff();
              this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
            }
          },
          'list empty enter': {
            key: Keyboard.keys.ENTER,
            collapsed: true,
            format: ['list'],
            empty: true,
            handler: function handler(range, context) {
              this.quill.format('list', false, _quill2.default.sources.USER);
              if (context.format.indent) {
                this.quill.format('indent', false, _quill2.default.sources.USER);
              }
            }
          },
          'checklist enter': {
            key: Keyboard.keys.ENTER,
            collapsed: true,
            format: { list: 'checked' },
            handler: function handler(range) {
              var _quill$getLine3 = this.quill.getLine(range.index),
                  _quill$getLine4 = _slicedToArray(_quill$getLine3, 2),
                  line = _quill$getLine4[0],
                  offset = _quill$getLine4[1];

              var formats = (0, _extend2.default)({}, line.formats(), { list: 'checked' });
              var delta = new _quillDelta2.default().retain(range.index).insert('\n', formats).retain(line.length() - offset - 1).retain(1, { list: 'unchecked' });
              this.quill.updateContents(delta, _quill2.default.sources.USER);
              this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
              this.quill.scrollIntoView();
            }
          },
          'header enter': {
            key: Keyboard.keys.ENTER,
            collapsed: true,
            format: ['header'],
            suffix: /^$/,
            handler: function handler(range, context) {
              var _quill$getLine5 = this.quill.getLine(range.index),
                  _quill$getLine6 = _slicedToArray(_quill$getLine5, 2),
                  line = _quill$getLine6[0],
                  offset = _quill$getLine6[1];

              var delta = new _quillDelta2.default().retain(range.index).insert('\n', context.format).retain(line.length() - offset - 1).retain(1, { header: null });
              this.quill.updateContents(delta, _quill2.default.sources.USER);
              this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
              this.quill.scrollIntoView();
            }
          },
          'list autofill': {
            key: ' ',
            collapsed: true,
            format: { list: false },
            prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
            handler: function handler(range, context) {
              var length = context.prefix.length;

              var _quill$getLine7 = this.quill.getLine(range.index),
                  _quill$getLine8 = _slicedToArray(_quill$getLine7, 2),
                  line = _quill$getLine8[0],
                  offset = _quill$getLine8[1];

              if (offset > length) return true;
              var value = void 0;
              switch (context.prefix.trim()) {
                case '[]':case '[ ]':
                  value = 'unchecked';
                  break;
                case '[x]':
                  value = 'checked';
                  break;
                case '-':case '*':
                  value = 'bullet';
                  break;
                default:
                  value = 'ordered';
              }
              this.quill.insertText(range.index, ' ', _quill2.default.sources.USER);
              this.quill.history.cutoff();
              var delta = new _quillDelta2.default().retain(range.index - offset).delete(length + 1).retain(line.length() - 2 - offset).retain(1, { list: value });
              this.quill.updateContents(delta, _quill2.default.sources.USER);
              this.quill.history.cutoff();
              this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);
            }
          },
          'code exit': {
            key: Keyboard.keys.ENTER,
            collapsed: true,
            format: ['code-block'],
            prefix: /\n\n$/,
            suffix: /^\s+$/,
            handler: function handler(range) {
              var _quill$getLine9 = this.quill.getLine(range.index),
                  _quill$getLine10 = _slicedToArray(_quill$getLine9, 2),
                  line = _quill$getLine10[0],
                  offset = _quill$getLine10[1];

              var delta = new _quillDelta2.default().retain(range.index + line.length() - offset - 2).retain(1, { 'code-block': null }).delete(1);
              this.quill.updateContents(delta, _quill2.default.sources.USER);
            }
          },
          'embed left': makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
          'embed left shift': makeEmbedArrowHandler(Keyboard.keys.LEFT, true),
          'embed right': makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
          'embed right shift': makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)
        }
      };

      function makeEmbedArrowHandler(key, shiftKey) {
        var _ref3;

        var where = key === Keyboard.keys.LEFT ? 'prefix' : 'suffix';
        return _ref3 = {
          key: key,
          shiftKey: shiftKey,
          altKey: null
        }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, 'handler', function handler(range) {
          var index = range.index;
          if (key === Keyboard.keys.RIGHT) {
            index += range.length + 1;
          }

          var _quill$getLeaf3 = this.quill.getLeaf(index),
              _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1),
              leaf = _quill$getLeaf4[0];

          if (!(leaf instanceof _parchment2.default.Embed)) return true;
          if (key === Keyboard.keys.LEFT) {
            if (shiftKey) {
              this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);
            } else {
              this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);
            }
          } else {
            if (shiftKey) {
              this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);
            } else {
              this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);
            }
          }
          return false;
        }), _ref3;
      }

      function handleBackspace(range, context) {
        if (range.index === 0 || this.quill.getLength() <= 1) return;

        var _quill$getLine11 = this.quill.getLine(range.index),
            _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),
            line = _quill$getLine12[0];

        var formats = {};
        if (context.offset === 0) {
          var _quill$getLine13 = this.quill.getLine(range.index - 1),
              _quill$getLine14 = _slicedToArray(_quill$getLine13, 1),
              prev = _quill$getLine14[0];

          if (prev != null && prev.length() > 1) {
            var curFormats = line.formats();
            var prevFormats = this.quill.getFormat(range.index - 1, 1);
            formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};
          }
        }
        // Check for astral symbols
        var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(context.prefix) ? 2 : 1;
        this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);
        if (Object.keys(formats).length > 0) {
          this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);
        }
        this.quill.focus();
      }

      function handleDelete(range, context) {
        // Check for astral symbols
        var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(context.suffix) ? 2 : 1;
        if (range.index >= this.quill.getLength() - length) return;
        var formats = {},
            nextLength = 0;

        var _quill$getLine15 = this.quill.getLine(range.index),
            _quill$getLine16 = _slicedToArray(_quill$getLine15, 1),
            line = _quill$getLine16[0];

        if (context.offset >= line.length() - 1) {
          var _quill$getLine17 = this.quill.getLine(range.index + 1),
              _quill$getLine18 = _slicedToArray(_quill$getLine17, 1),
              next = _quill$getLine18[0];

          if (next) {
            var curFormats = line.formats();
            var nextFormats = this.quill.getFormat(range.index, 1);
            formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};
            nextLength = next.length();
          }
        }
        this.quill.deleteText(range.index, length, _quill2.default.sources.USER);
        if (Object.keys(formats).length > 0) {
          this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);
        }
      }

      function handleDeleteRange(range) {
        var lines = this.quill.getLines(range);
        var formats = {};
        if (lines.length > 1) {
          var firstFormats = lines[0].formats();
          var lastFormats = lines[lines.length - 1].formats();
          formats = _op2.default.attributes.diff(lastFormats, firstFormats) || {};
        }
        this.quill.deleteText(range, _quill2.default.sources.USER);
        if (Object.keys(formats).length > 0) {
          this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);
        }
        this.quill.setSelection(range.index, _quill2.default.sources.SILENT);
        this.quill.focus();
      }

      function handleEnter(range, context) {
        var _this3 = this;

        if (range.length > 0) {
          this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change
        }
        var lineFormats = Object.keys(context.format).reduce(function (lineFormats, format) {
          if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {
            lineFormats[format] = context.format[format];
          }
          return lineFormats;
        }, {});
        this.quill.insertText(range.index, '\n', lineFormats, _quill2.default.sources.USER);
        // Earlier scroll.deleteAt might have messed up our selection,
        // so insertText's built in selection preservation is not reliable
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
        this.quill.focus();
        Object.keys(context.format).forEach(function (name) {
          if (lineFormats[name] != null) return;
          if (Array.isArray(context.format[name])) return;
          if (name === 'link') return;
          _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);
        });
      }

      function makeCodeBlockHandler(indent) {
        return {
          key: Keyboard.keys.TAB,
          shiftKey: !indent,
          format: { 'code-block': true },
          handler: function handler(range) {
            var CodeBlock = _parchment2.default.query('code-block');
            var index = range.index,
                length = range.length;

            var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index),
                _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
                block = _quill$scroll$descend2[0],
                offset = _quill$scroll$descend2[1];

            if (block == null) return;
            var scrollIndex = this.quill.getIndex(block);
            var start = block.newlineIndex(offset, true) + 1;
            var end = block.newlineIndex(scrollIndex + offset + length);
            var lines = block.domNode.textContent.slice(start, end).split('\n');
            offset = 0;
            lines.forEach(function (line, i) {
              if (indent) {
                block.insertAt(start + offset, CodeBlock.TAB);
                offset += CodeBlock.TAB.length;
                if (i === 0) {
                  index += CodeBlock.TAB.length;
                } else {
                  length += CodeBlock.TAB.length;
                }
              } else if (line.startsWith(CodeBlock.TAB)) {
                block.deleteAt(start + offset, CodeBlock.TAB.length);
                offset -= CodeBlock.TAB.length;
                if (i === 0) {
                  index -= CodeBlock.TAB.length;
                } else {
                  length -= CodeBlock.TAB.length;
                }
              }
              offset += line.length + 1;
            });
            this.quill.update(_quill2.default.sources.USER);
            this.quill.setSelection(index, length, _quill2.default.sources.SILENT);
          }
        };
      }

      function makeFormatHandler(format) {
        return {
          key: format[0].toUpperCase(),
          shortKey: true,
          handler: function handler(range, context) {
            this.quill.format(format, !context.format[format], _quill2.default.sources.USER);
          }
        };
      }

      function normalize(binding) {
        if (typeof binding === 'string' || typeof binding === 'number') {
          return normalize({ key: binding });
        }
        if ((typeof binding === 'undefined' ? 'undefined' : _typeof(binding)) === 'object') {
          binding = (0, _clone2.default)(binding, false);
        }
        if (typeof binding.key === 'string') {
          if (Keyboard.keys[binding.key.toUpperCase()] != null) {
            binding.key = Keyboard.keys[binding.key.toUpperCase()];
          } else if (binding.key.length === 1) {
            binding.key = binding.key.toUpperCase().charCodeAt(0);
          } else {
            return null;
          }
        }
        if (binding.shortKey) {
          binding[SHORTKEY] = binding.shortKey;
          delete binding.shortKey;
        }
        return binding;
      }

      exports.default = Keyboard;
      exports.SHORTKEY = SHORTKEY;

      /***/
    },
    /* 24 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _text = __webpack_require__(7);

      var _text2 = _interopRequireDefault(_text);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Cursor = function (_Parchment$Embed) {
        _inherits(Cursor, _Parchment$Embed);

        _createClass(Cursor, null, [{
          key: 'value',
          value: function value() {
            return undefined;
          }
        }]);

        function Cursor(domNode, selection) {
          _classCallCheck(this, Cursor);

          var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this, domNode));

          _this.selection = selection;
          _this.textNode = document.createTextNode(Cursor.CONTENTS);
          _this.domNode.appendChild(_this.textNode);
          _this._length = 0;
          return _this;
        }

        _createClass(Cursor, [{
          key: 'detach',
          value: function detach() {
            // super.detach() will also clear domNode.__blot
            if (this.parent != null) this.parent.removeChild(this);
          }
        }, {
          key: 'format',
          value: function format(name, value) {
            if (this._length !== 0) {
              return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'format', this).call(this, name, value);
            }
            var target = this,
                index = 0;
            while (target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT) {
              index += target.offset(target.parent);
              target = target.parent;
            }
            if (target != null) {
              this._length = Cursor.CONTENTS.length;
              target.optimize();
              target.formatAt(index, Cursor.CONTENTS.length, name, value);
              this._length = 0;
            }
          }
        }, {
          key: 'index',
          value: function index(node, offset) {
            if (node === this.textNode) return 0;
            return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'index', this).call(this, node, offset);
          }
        }, {
          key: 'length',
          value: function length() {
            return this._length;
          }
        }, {
          key: 'position',
          value: function position() {
            return [this.textNode, this.textNode.data.length];
          }
        }, {
          key: 'remove',
          value: function remove() {
            _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'remove', this).call(this);
            this.parent = null;
          }
        }, {
          key: 'restore',
          value: function restore() {
            if (this.selection.composing || this.parent == null) return;
            var textNode = this.textNode;
            var range = this.selection.getNativeRange();
            var restoreText = void 0,
                start = void 0,
                end = void 0;
            if (range != null && range.start.node === textNode && range.end.node === textNode) {
              var _ref = [textNode, range.start.offset, range.end.offset];
              restoreText = _ref[0];
              start = _ref[1];
              end = _ref[2];
            }
            // Link format will insert text outside of anchor tag
            while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
              this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
            }
            if (this.textNode.data !== Cursor.CONTENTS) {
              var text = this.textNode.data.split(Cursor.CONTENTS).join('');
              if (this.next instanceof _text2.default) {
                restoreText = this.next.domNode;
                this.next.insertAt(0, text);
                this.textNode.data = Cursor.CONTENTS;
              } else {
                this.textNode.data = text;
                this.parent.insertBefore(_parchment2.default.create(this.textNode), this);
                this.textNode = document.createTextNode(Cursor.CONTENTS);
                this.domNode.appendChild(this.textNode);
              }
            }
            this.remove();
            if (start != null) {
              var _map = [start, end].map(function (offset) {
                return Math.max(0, Math.min(restoreText.data.length, offset - 1));
              });

              var _map2 = _slicedToArray(_map, 2);

              start = _map2[0];
              end = _map2[1];

              return {
                startNode: restoreText,
                startOffset: start,
                endNode: restoreText,
                endOffset: end
              };
            }
          }
        }, {
          key: 'update',
          value: function update(mutations, context) {
            var _this2 = this;

            if (mutations.some(function (mutation) {
              return mutation.type === 'characterData' && mutation.target === _this2.textNode;
            })) {
              var range = this.restore();
              if (range) context.range = range;
            }
          }
        }, {
          key: 'value',
          value: function value() {
            return '';
          }
        }]);

        return Cursor;
      }(_parchment2.default.Embed);

      Cursor.blotName = 'cursor';
      Cursor.className = 'ql-cursor';
      Cursor.tagName = 'span';
      Cursor.CONTENTS = '\uFEFF'; // Zero width no break space


      exports.default = Cursor;

      /***/
    },
    /* 25 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Container = function (_Parchment$Container) {
        _inherits(Container, _Parchment$Container);

        function Container() {
          _classCallCheck(this, Container);

          return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
        }

        return Container;
      }(_parchment2.default.Container);

      Container.allowedChildren = [_block2.default, _block.BlockEmbed, Container];

      exports.default = Container;

      /***/
    },
    /* 26 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var ColorAttributor = function (_Parchment$Attributor) {
        _inherits(ColorAttributor, _Parchment$Attributor);

        function ColorAttributor() {
          _classCallCheck(this, ColorAttributor);

          return _possibleConstructorReturn(this, (ColorAttributor.__proto__ || Object.getPrototypeOf(ColorAttributor)).apply(this, arguments));
        }

        _createClass(ColorAttributor, [{
          key: 'value',
          value: function value(domNode) {
            var value = _get(ColorAttributor.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor.prototype), 'value', this).call(this, domNode);
            if (!value.startsWith('rgb(')) return value;
            value = value.replace(/^[^\d]+/, '').replace(/[^\d]+$/, '');
            return '#' + value.split(',').map(function (component) {
              return ('00' + parseInt(component).toString(16)).slice(-2);
            }).join('');
          }
        }]);

        return ColorAttributor;
      }(_parchment2.default.Attributor.Style);

      var ColorClass = new _parchment2.default.Attributor.Class('color', 'ql-color', {
        scope: _parchment2.default.Scope.INLINE
      });
      var ColorStyle = new ColorAttributor('color', 'color', {
        scope: _parchment2.default.Scope.INLINE
      });

      exports.ColorAttributor = ColorAttributor;
      exports.ColorClass = ColorClass;
      exports.ColorStyle = ColorStyle;

      /***/
    },
    /* 27 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.sanitize = exports.default = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Link = function (_Inline) {
        _inherits(Link, _Inline);

        function Link() {
          _classCallCheck(this, Link);

          return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
        }

        _createClass(Link, [{
          key: 'format',
          value: function format(name, value) {
            if (name !== this.statics.blotName || !value) return _get(Link.prototype.__proto__ || Object.getPrototypeOf(Link.prototype), 'format', this).call(this, name, value);
            value = this.constructor.sanitize(value);
            this.domNode.setAttribute('href', value);
          }
        }], [{
          key: 'create',
          value: function create(value) {
            var node = _get(Link.__proto__ || Object.getPrototypeOf(Link), 'create', this).call(this, value);
            value = this.sanitize(value);
            node.setAttribute('href', value);
            node.setAttribute('target', '_blank');
            return node;
          }
        }, {
          key: 'formats',
          value: function formats(domNode) {
            return domNode.getAttribute('href');
          }
        }, {
          key: 'sanitize',
          value: function sanitize(url) {
            return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;
          }
        }]);

        return Link;
      }(_inline2.default);

      Link.blotName = 'link';
      Link.tagName = 'A';
      Link.SANITIZED_URL = 'about:blank';
      Link.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];

      function _sanitize(url, protocols) {
        var anchor = document.createElement('a');
        anchor.href = url;
        var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));
        return protocols.indexOf(protocol) > -1;
      }

      exports.default = Link;
      exports.sanitize = _sanitize;

      /***/
    },
    /* 28 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
        return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _keyboard = __webpack_require__(23);

      var _keyboard2 = _interopRequireDefault(_keyboard);

      var _dropdown = __webpack_require__(107);

      var _dropdown2 = _interopRequireDefault(_dropdown);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var optionsCounter = 0;

      function toggleAriaAttribute(element, attribute) {
        element.setAttribute(attribute, !(element.getAttribute(attribute) === 'true'));
      }

      var Picker = function () {
        function Picker(select) {
          var _this = this;

          _classCallCheck(this, Picker);

          this.select = select;
          this.container = document.createElement('span');
          this.buildPicker();
          this.select.style.display = 'none';
          this.select.parentNode.insertBefore(this.container, this.select);

          this.label.addEventListener('mousedown', function () {
            _this.togglePicker();
          });
          this.label.addEventListener('keydown', function (event) {
            switch (event.keyCode) {
              // Allows the "Enter" key to open the picker
              case _keyboard2.default.keys.ENTER:
                _this.togglePicker();
                break;

              // Allows the "Escape" key to close the picker
              case _keyboard2.default.keys.ESCAPE:
                _this.escape();
                event.preventDefault();
                break;
              default:
            }
          });
          this.select.addEventListener('change', this.update.bind(this));
        }

        _createClass(Picker, [{
          key: 'togglePicker',
          value: function togglePicker() {
            this.container.classList.toggle('ql-expanded');
            // Toggle aria-expanded and aria-hidden to make the picker accessible
            toggleAriaAttribute(this.label, 'aria-expanded');
            toggleAriaAttribute(this.options, 'aria-hidden');
          }
        }, {
          key: 'buildItem',
          value: function buildItem(option) {
            var _this2 = this;

            var item = document.createElement('span');
            item.tabIndex = '0';
            item.setAttribute('role', 'button');

            item.classList.add('ql-picker-item');
            if (option.hasAttribute('value')) {
              item.setAttribute('data-value', option.getAttribute('value'));
            }
            if (option.textContent) {
              item.setAttribute('data-label', option.textContent);
            }
            item.addEventListener('click', function () {
              _this2.selectItem(item, true);
            });
            item.addEventListener('keydown', function (event) {
              switch (event.keyCode) {
                // Allows the "Enter" key to select an item
                case _keyboard2.default.keys.ENTER:
                  _this2.selectItem(item, true);
                  event.preventDefault();
                  break;

                // Allows the "Escape" key to close the picker
                case _keyboard2.default.keys.ESCAPE:
                  _this2.escape();
                  event.preventDefault();
                  break;
                default:
              }
            });

            return item;
          }
        }, {
          key: 'buildLabel',
          value: function buildLabel() {
            var label = document.createElement('span');
            label.classList.add('ql-picker-label');
            label.innerHTML = _dropdown2.default;
            label.tabIndex = '0';
            label.setAttribute('role', 'button');
            label.setAttribute('aria-expanded', 'false');
            this.container.appendChild(label);
            return label;
          }
        }, {
          key: 'buildOptions',
          value: function buildOptions() {
            var _this3 = this;

            var options = document.createElement('span');
            options.classList.add('ql-picker-options');

            // Don't want screen readers to read this until options are visible
            options.setAttribute('aria-hidden', 'true');
            options.tabIndex = '-1';

            // Need a unique id for aria-controls
            options.id = 'ql-picker-options-' + optionsCounter;
            optionsCounter += 1;
            this.label.setAttribute('aria-controls', options.id);

            this.options = options;

            [].slice.call(this.select.options).forEach(function (option) {
              var item = _this3.buildItem(option);
              options.appendChild(item);
              if (option.selected === true) {
                _this3.selectItem(item);
              }
            });
            this.container.appendChild(options);
          }
        }, {
          key: 'buildPicker',
          value: function buildPicker() {
            var _this4 = this;

            [].slice.call(this.select.attributes).forEach(function (item) {
              _this4.container.setAttribute(item.name, item.value);
            });
            this.container.classList.add('ql-picker');
            this.label = this.buildLabel();
            this.buildOptions();
          }
        }, {
          key: 'escape',
          value: function escape() {
            var _this5 = this;

            // Close menu and return focus to trigger label
            this.close();
            // Need setTimeout for accessibility to ensure that the browser executes
            // focus on the next process thread and after any DOM content changes
            setTimeout(function () {
              return _this5.label.focus();
            }, 1);
          }
        }, {
          key: 'close',
          value: function close() {
            this.container.classList.remove('ql-expanded');
            this.label.setAttribute('aria-expanded', 'false');
            this.options.setAttribute('aria-hidden', 'true');
          }
        }, {
          key: 'selectItem',
          value: function selectItem(item) {
            var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            var selected = this.container.querySelector('.ql-selected');
            if (item === selected) return;
            if (selected != null) {
              selected.classList.remove('ql-selected');
            }
            if (item == null) return;
            item.classList.add('ql-selected');
            this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);
            if (item.hasAttribute('data-value')) {
              this.label.setAttribute('data-value', item.getAttribute('data-value'));
            } else {
              this.label.removeAttribute('data-value');
            }
            if (item.hasAttribute('data-label')) {
              this.label.setAttribute('data-label', item.getAttribute('data-label'));
            } else {
              this.label.removeAttribute('data-label');
            }
            if (trigger) {
              if (typeof Event === 'function') {
                this.select.dispatchEvent(new Event('change'));
              } else if ((typeof Event === 'undefined' ? 'undefined' : _typeof(Event)) === 'object') {
                // IE11
                var event = document.createEvent('Event');
                event.initEvent('change', true, true);
                this.select.dispatchEvent(event);
              }
              this.close();
            }
          }
        }, {
          key: 'update',
          value: function update() {
            var option = void 0;
            if (this.select.selectedIndex > -1) {
              var item = this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];
              option = this.select.options[this.select.selectedIndex];
              this.selectItem(item);
            } else {
              this.selectItem(null);
            }
            var isActive = option != null && option !== this.select.querySelector('option[selected]');
            this.label.classList.toggle('ql-active', isActive);
          }
        }]);

        return Picker;
      }();

      exports.default = Picker;

      /***/
    },
    /* 29 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      var _break = __webpack_require__(16);

      var _break2 = _interopRequireDefault(_break);

      var _container = __webpack_require__(25);

      var _container2 = _interopRequireDefault(_container);

      var _cursor = __webpack_require__(24);

      var _cursor2 = _interopRequireDefault(_cursor);

      var _embed = __webpack_require__(35);

      var _embed2 = _interopRequireDefault(_embed);

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      var _scroll = __webpack_require__(22);

      var _scroll2 = _interopRequireDefault(_scroll);

      var _text = __webpack_require__(7);

      var _text2 = _interopRequireDefault(_text);

      var _clipboard = __webpack_require__(55);

      var _clipboard2 = _interopRequireDefault(_clipboard);

      var _history = __webpack_require__(42);

      var _history2 = _interopRequireDefault(_history);

      var _keyboard = __webpack_require__(23);

      var _keyboard2 = _interopRequireDefault(_keyboard);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      _quill2.default.register({
        'blots/block': _block2.default,
        'blots/block/embed': _block.BlockEmbed,
        'blots/break': _break2.default,
        'blots/container': _container2.default,
        'blots/cursor': _cursor2.default,
        'blots/embed': _embed2.default,
        'blots/inline': _inline2.default,
        'blots/scroll': _scroll2.default,
        'blots/text': _text2.default,

        'modules/clipboard': _clipboard2.default,
        'modules/history': _history2.default,
        'modules/keyboard': _keyboard2.default
      });

      _parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);

      exports.default = _quill2.default;

      /***/
    },
    /* 30 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", { value: true });
      var Registry = __webpack_require__(1);
      var ShadowBlot = /** @class */function () {
        function ShadowBlot(domNode) {
          this.domNode = domNode;
          // @ts-ignore
          this.domNode[Registry.DATA_KEY] = { blot: this };
        }
        Object.defineProperty(ShadowBlot.prototype, "statics", {
          // Hack for accessing inherited static methods
          get: function get() {
            return this.constructor;
          },
          enumerable: true,
          configurable: true
        });
        ShadowBlot.create = function (value) {
          if (this.tagName == null) {
            throw new Registry.ParchmentError('Blot definition missing tagName');
          }
          var node;
          if (Array.isArray(this.tagName)) {
            if (typeof value === 'string') {
              value = value.toUpperCase();
              if (parseInt(value).toString() === value) {
                value = parseInt(value);
              }
            }
            if (typeof value === 'number') {
              node = document.createElement(this.tagName[value - 1]);
            } else if (this.tagName.indexOf(value) > -1) {
              node = document.createElement(value);
            } else {
              node = document.createElement(this.tagName[0]);
            }
          } else {
            node = document.createElement(this.tagName);
          }
          if (this.className) {
            node.classList.add(this.className);
          }
          return node;
        };
        ShadowBlot.prototype.attach = function () {
          if (this.parent != null) {
            this.scroll = this.parent.scroll;
          }
        };
        ShadowBlot.prototype.clone = function () {
          var domNode = this.domNode.cloneNode(false);
          return Registry.create(domNode);
        };
        ShadowBlot.prototype.detach = function () {
          if (this.parent != null) this.parent.removeChild(this);
          // @ts-ignore
          delete this.domNode[Registry.DATA_KEY];
        };
        ShadowBlot.prototype.deleteAt = function (index, length) {
          var blot = this.isolate(index, length);
          blot.remove();
        };
        ShadowBlot.prototype.formatAt = function (index, length, name, value) {
          var blot = this.isolate(index, length);
          if (Registry.query(name, Registry.Scope.BLOT) != null && value) {
            blot.wrap(name, value);
          } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
            var parent = Registry.create(this.statics.scope);
            blot.wrap(parent);
            parent.format(name, value);
          }
        };
        ShadowBlot.prototype.insertAt = function (index, value, def) {
          var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
          var ref = this.split(index);
          this.parent.insertBefore(blot, ref);
        };
        ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {
          if (refBlot === void 0) {
            refBlot = null;
          }
          if (this.parent != null) {
            this.parent.children.remove(this);
          }
          var refDomNode = null;
          parentBlot.children.insertBefore(this, refBlot);
          if (refBlot != null) {
            refDomNode = refBlot.domNode;
          }
          if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {
            parentBlot.domNode.insertBefore(this.domNode, refDomNode);
          }
          this.parent = parentBlot;
          this.attach();
        };
        ShadowBlot.prototype.isolate = function (index, length) {
          var target = this.split(index);
          target.split(length);
          return target;
        };
        ShadowBlot.prototype.length = function () {
          return 1;
        };
        ShadowBlot.prototype.offset = function (root) {
          if (root === void 0) {
            root = this.parent;
          }
          if (this.parent == null || this == root) return 0;
          return this.parent.children.offset(this) + this.parent.offset(root);
        };
        ShadowBlot.prototype.optimize = function (context) {
          // TODO clean up once we use WeakMap
          // @ts-ignore
          if (this.domNode[Registry.DATA_KEY] != null) {
            // @ts-ignore
            delete this.domNode[Registry.DATA_KEY].mutations;
          }
        };
        ShadowBlot.prototype.remove = function () {
          if (this.domNode.parentNode != null) {
            this.domNode.parentNode.removeChild(this.domNode);
          }
          this.detach();
        };
        ShadowBlot.prototype.replace = function (target) {
          if (target.parent == null) return;
          target.parent.insertBefore(this, target.next);
          target.remove();
        };
        ShadowBlot.prototype.replaceWith = function (name, value) {
          var replacement = typeof name === 'string' ? Registry.create(name, value) : name;
          replacement.replace(this);
          return replacement;
        };
        ShadowBlot.prototype.split = function (index, force) {
          return index === 0 ? this : this.next;
        };
        ShadowBlot.prototype.update = function (mutations, context) {
          // Nothing to do by default
        };
        ShadowBlot.prototype.wrap = function (name, value) {
          var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;
          if (this.parent != null) {
            this.parent.insertBefore(wrapper, this.next);
          }
          wrapper.appendChild(this);
          return wrapper;
        };
        ShadowBlot.blotName = 'abstract';
        return ShadowBlot;
      }();
      exports.default = ShadowBlot;

      /***/
    },
    /* 31 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", { value: true });
      var attributor_1 = __webpack_require__(12);
      var class_1 = __webpack_require__(32);
      var style_1 = __webpack_require__(33);
      var Registry = __webpack_require__(1);
      var AttributorStore = /** @class */function () {
        function AttributorStore(domNode) {
          this.attributes = {};
          this.domNode = domNode;
          this.build();
        }
        AttributorStore.prototype.attribute = function (attribute, value) {
          // verb
          if (value) {
            if (attribute.add(this.domNode, value)) {
              if (attribute.value(this.domNode) != null) {
                this.attributes[attribute.attrName] = attribute;
              } else {
                delete this.attributes[attribute.attrName];
              }
            }
          } else {
            attribute.remove(this.domNode);
            delete this.attributes[attribute.attrName];
          }
        };
        AttributorStore.prototype.build = function () {
          var _this = this;
          this.attributes = {};
          var attributes = attributor_1.default.keys(this.domNode);
          var classes = class_1.default.keys(this.domNode);
          var styles = style_1.default.keys(this.domNode);
          attributes.concat(classes).concat(styles).forEach(function (name) {
            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
            if (attr instanceof attributor_1.default) {
              _this.attributes[attr.attrName] = attr;
            }
          });
        };
        AttributorStore.prototype.copy = function (target) {
          var _this = this;
          Object.keys(this.attributes).forEach(function (key) {
            var value = _this.attributes[key].value(_this.domNode);
            target.format(key, value);
          });
        };
        AttributorStore.prototype.move = function (target) {
          var _this = this;
          this.copy(target);
          Object.keys(this.attributes).forEach(function (key) {
            _this.attributes[key].remove(_this.domNode);
          });
          this.attributes = {};
        };
        AttributorStore.prototype.values = function () {
          var _this = this;
          return Object.keys(this.attributes).reduce(function (attributes, name) {
            attributes[name] = _this.attributes[name].value(_this.domNode);
            return attributes;
          }, {});
        };
        return AttributorStore;
      }();
      exports.default = AttributorStore;

      /***/
    },
    /* 32 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var attributor_1 = __webpack_require__(12);
      function match(node, prefix) {
        var className = node.getAttribute('class') || '';
        return className.split(/\s+/).filter(function (name) {
          return name.indexOf(prefix + "-") === 0;
        });
      }
      var ClassAttributor = /** @class */function (_super) {
        __extends(ClassAttributor, _super);
        function ClassAttributor() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        ClassAttributor.keys = function (node) {
          return (node.getAttribute('class') || '').split(/\s+/).map(function (name) {
            return name.split('-').slice(0, -1).join('-');
          });
        };
        ClassAttributor.prototype.add = function (node, value) {
          if (!this.canAdd(node, value)) return false;
          this.remove(node);
          node.classList.add(this.keyName + "-" + value);
          return true;
        };
        ClassAttributor.prototype.remove = function (node) {
          var matches = match(node, this.keyName);
          matches.forEach(function (name) {
            node.classList.remove(name);
          });
          if (node.classList.length === 0) {
            node.removeAttribute('class');
          }
        };
        ClassAttributor.prototype.value = function (node) {
          var result = match(node, this.keyName)[0] || '';
          var value = result.slice(this.keyName.length + 1); // +1 for hyphen
          return this.canAdd(node, value) ? value : '';
        };
        return ClassAttributor;
      }(attributor_1.default);
      exports.default = ClassAttributor;

      /***/
    },
    /* 33 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var attributor_1 = __webpack_require__(12);
      function camelize(name) {
        var parts = name.split('-');
        var rest = parts.slice(1).map(function (part) {
          return part[0].toUpperCase() + part.slice(1);
        }).join('');
        return parts[0] + rest;
      }
      var StyleAttributor = /** @class */function (_super) {
        __extends(StyleAttributor, _super);
        function StyleAttributor() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        StyleAttributor.keys = function (node) {
          return (node.getAttribute('style') || '').split(';').map(function (value) {
            var arr = value.split(':');
            return arr[0].trim();
          });
        };
        StyleAttributor.prototype.add = function (node, value) {
          if (!this.canAdd(node, value)) return false;
          // @ts-ignore
          node.style[camelize(this.keyName)] = value;
          return true;
        };
        StyleAttributor.prototype.remove = function (node) {
          // @ts-ignore
          node.style[camelize(this.keyName)] = '';
          if (!node.getAttribute('style')) {
            node.removeAttribute('style');
          }
        };
        StyleAttributor.prototype.value = function (node) {
          // @ts-ignore
          var value = node.style[camelize(this.keyName)];
          return this.canAdd(node, value) ? value : '';
        };
        return StyleAttributor;
      }(attributor_1.default);
      exports.default = StyleAttributor;

      /***/
    },
    /* 34 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var Theme = function () {
        function Theme(quill, options) {
          _classCallCheck(this, Theme);

          this.quill = quill;
          this.options = options;
          this.modules = {};
        }

        _createClass(Theme, [{
          key: 'init',
          value: function init() {
            var _this = this;

            Object.keys(this.options.modules).forEach(function (name) {
              if (_this.modules[name] == null) {
                _this.addModule(name);
              }
            });
          }
        }, {
          key: 'addModule',
          value: function addModule(name) {
            var moduleClass = this.quill.constructor.import('modules/' + name);
            this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});
            return this.modules[name];
          }
        }]);

        return Theme;
      }();

      Theme.DEFAULTS = {
        modules: {}
      };
      Theme.themes = {
        'default': Theme
      };

      exports.default = Theme;

      /***/
    },
    /* 35 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _text = __webpack_require__(7);

      var _text2 = _interopRequireDefault(_text);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var GUARD_TEXT = '\uFEFF';

      var Embed = function (_Parchment$Embed) {
        _inherits(Embed, _Parchment$Embed);

        function Embed(node) {
          _classCallCheck(this, Embed);

          var _this = _possibleConstructorReturn(this, (Embed.__proto__ || Object.getPrototypeOf(Embed)).call(this, node));

          _this.contentNode = document.createElement('span');
          _this.contentNode.setAttribute('contenteditable', false);
          [].slice.call(_this.domNode.childNodes).forEach(function (childNode) {
            _this.contentNode.appendChild(childNode);
          });
          _this.leftGuard = document.createTextNode(GUARD_TEXT);
          _this.rightGuard = document.createTextNode(GUARD_TEXT);
          _this.domNode.appendChild(_this.leftGuard);
          _this.domNode.appendChild(_this.contentNode);
          _this.domNode.appendChild(_this.rightGuard);
          return _this;
        }

        _createClass(Embed, [{
          key: 'index',
          value: function index(node, offset) {
            if (node === this.leftGuard) return 0;
            if (node === this.rightGuard) return 1;
            return _get(Embed.prototype.__proto__ || Object.getPrototypeOf(Embed.prototype), 'index', this).call(this, node, offset);
          }
        }, {
          key: 'restore',
          value: function restore(node) {
            var range = void 0,
                textNode = void 0;
            var text = node.data.split(GUARD_TEXT).join('');
            if (node === this.leftGuard) {
              if (this.prev instanceof _text2.default) {
                var prevLength = this.prev.length();
                this.prev.insertAt(prevLength, text);
                range = {
                  startNode: this.prev.domNode,
                  startOffset: prevLength + text.length
                };
              } else {
                textNode = document.createTextNode(text);
                this.parent.insertBefore(_parchment2.default.create(textNode), this);
                range = {
                  startNode: textNode,
                  startOffset: text.length
                };
              }
            } else if (node === this.rightGuard) {
              if (this.next instanceof _text2.default) {
                this.next.insertAt(0, text);
                range = {
                  startNode: this.next.domNode,
                  startOffset: text.length
                };
              } else {
                textNode = document.createTextNode(text);
                this.parent.insertBefore(_parchment2.default.create(textNode), this.next);
                range = {
                  startNode: textNode,
                  startOffset: text.length
                };
              }
            }
            node.data = GUARD_TEXT;
            return range;
          }
        }, {
          key: 'update',
          value: function update(mutations, context) {
            var _this2 = this;

            mutations.forEach(function (mutation) {
              if (mutation.type === 'characterData' && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {
                var range = _this2.restore(mutation.target);
                if (range) context.range = range;
              }
            });
          }
        }]);

        return Embed;
      }(_parchment2.default.Embed);

      exports.default = Embed;

      /***/
    },
    /* 36 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var config = {
        scope: _parchment2.default.Scope.BLOCK,
        whitelist: ['right', 'center', 'justify']
      };

      var AlignAttribute = new _parchment2.default.Attributor.Attribute('align', 'align', config);
      var AlignClass = new _parchment2.default.Attributor.Class('align', 'ql-align', config);
      var AlignStyle = new _parchment2.default.Attributor.Style('align', 'text-align', config);

      exports.AlignAttribute = AlignAttribute;
      exports.AlignClass = AlignClass;
      exports.AlignStyle = AlignStyle;

      /***/
    },
    /* 37 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.BackgroundStyle = exports.BackgroundClass = undefined;

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _color = __webpack_require__(26);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var BackgroundClass = new _parchment2.default.Attributor.Class('background', 'ql-bg', {
        scope: _parchment2.default.Scope.INLINE
      });
      var BackgroundStyle = new _color.ColorAttributor('background', 'background-color', {
        scope: _parchment2.default.Scope.INLINE
      });

      exports.BackgroundClass = BackgroundClass;
      exports.BackgroundStyle = BackgroundStyle;

      /***/
    },
    /* 38 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var config = {
        scope: _parchment2.default.Scope.BLOCK,
        whitelist: ['rtl']
      };

      var DirectionAttribute = new _parchment2.default.Attributor.Attribute('direction', 'dir', config);
      var DirectionClass = new _parchment2.default.Attributor.Class('direction', 'ql-direction', config);
      var DirectionStyle = new _parchment2.default.Attributor.Style('direction', 'direction', config);

      exports.DirectionAttribute = DirectionAttribute;
      exports.DirectionClass = DirectionClass;
      exports.DirectionStyle = DirectionStyle;

      /***/
    },
    /* 39 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.FontClass = exports.FontStyle = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var config = {
        scope: _parchment2.default.Scope.INLINE,
        whitelist: ['serif', 'monospace']
      };

      var FontClass = new _parchment2.default.Attributor.Class('font', 'ql-font', config);

      var FontStyleAttributor = function (_Parchment$Attributor) {
        _inherits(FontStyleAttributor, _Parchment$Attributor);

        function FontStyleAttributor() {
          _classCallCheck(this, FontStyleAttributor);

          return _possibleConstructorReturn(this, (FontStyleAttributor.__proto__ || Object.getPrototypeOf(FontStyleAttributor)).apply(this, arguments));
        }

        _createClass(FontStyleAttributor, [{
          key: 'value',
          value: function value(node) {
            return _get(FontStyleAttributor.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor.prototype), 'value', this).call(this, node).replace(/["']/g, '');
          }
        }]);

        return FontStyleAttributor;
      }(_parchment2.default.Attributor.Style);

      var FontStyle = new FontStyleAttributor('font', 'font-family', config);

      exports.FontStyle = FontStyle;
      exports.FontClass = FontClass;

      /***/
    },
    /* 40 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.SizeStyle = exports.SizeClass = undefined;

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      var SizeClass = new _parchment2.default.Attributor.Class('size', 'ql-size', {
        scope: _parchment2.default.Scope.INLINE,
        whitelist: ['small', 'large', 'huge']
      });
      var SizeStyle = new _parchment2.default.Attributor.Style('size', 'font-size', {
        scope: _parchment2.default.Scope.INLINE,
        whitelist: ['10px', '18px', '32px']
      });

      exports.SizeClass = SizeClass;
      exports.SizeStyle = SizeStyle;

      /***/
    },
    /* 41 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      module.exports = {
        'align': {
          '': __webpack_require__(76),
          'center': __webpack_require__(77),
          'right': __webpack_require__(78),
          'justify': __webpack_require__(79)
        },
        'background': __webpack_require__(80),
        'blockquote': __webpack_require__(81),
        'bold': __webpack_require__(82),
        'clean': __webpack_require__(83),
        'code': __webpack_require__(58),
        'code-block': __webpack_require__(58),
        'color': __webpack_require__(84),
        'direction': {
          '': __webpack_require__(85),
          'rtl': __webpack_require__(86)
        },
        'float': {
          'center': __webpack_require__(87),
          'full': __webpack_require__(88),
          'left': __webpack_require__(89),
          'right': __webpack_require__(90)
        },
        'formula': __webpack_require__(91),
        'header': {
          '1': __webpack_require__(92),
          '2': __webpack_require__(93)
        },
        'italic': __webpack_require__(94),
        'image': __webpack_require__(95),
        'indent': {
          '+1': __webpack_require__(96),
          '-1': __webpack_require__(97)
        },
        'link': __webpack_require__(98),
        'list': {
          'ordered': __webpack_require__(99),
          'bullet': __webpack_require__(100),
          'check': __webpack_require__(101)
        },
        'script': {
          'sub': __webpack_require__(102),
          'super': __webpack_require__(103)
        },
        'strike': __webpack_require__(104),
        'underline': __webpack_require__(105),
        'video': __webpack_require__(106)
      };

      /***/
    },
    /* 42 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.getLastChangeIndex = exports.default = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var History = function (_Module) {
        _inherits(History, _Module);

        function History(quill, options) {
          _classCallCheck(this, History);

          var _this = _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).call(this, quill, options));

          _this.lastRecorded = 0;
          _this.ignoreChange = false;
          _this.clear();
          _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {
            if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange) return;
            if (!_this.options.userOnly || source === _quill2.default.sources.USER) {
              _this.record(delta, oldDelta);
            } else {
              _this.transform(delta);
            }
          });
          _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true }, _this.undo.bind(_this));
          _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true, shiftKey: true }, _this.redo.bind(_this));
          if (/Win/i.test(navigator.platform)) {
            _this.quill.keyboard.addBinding({ key: 'Y', shortKey: true }, _this.redo.bind(_this));
          }
          return _this;
        }

        _createClass(History, [{
          key: 'change',
          value: function change(source, dest) {
            if (this.stack[source].length === 0) return;
            var delta = this.stack[source].pop();
            this.stack[dest].push(delta);
            this.lastRecorded = 0;
            this.ignoreChange = true;
            this.quill.updateContents(delta[source], _quill2.default.sources.USER);
            this.ignoreChange = false;
            var index = getLastChangeIndex(delta[source]);
            this.quill.setSelection(index);
          }
        }, {
          key: 'clear',
          value: function clear() {
            this.stack = { undo: [], redo: [] };
          }
        }, {
          key: 'cutoff',
          value: function cutoff() {
            this.lastRecorded = 0;
          }
        }, {
          key: 'record',
          value: function record(changeDelta, oldDelta) {
            if (changeDelta.ops.length === 0) return;
            this.stack.redo = [];
            var undoDelta = this.quill.getContents().diff(oldDelta);
            var timestamp = Date.now();
            if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {
              var delta = this.stack.undo.pop();
              undoDelta = undoDelta.compose(delta.undo);
              changeDelta = delta.redo.compose(changeDelta);
            } else {
              this.lastRecorded = timestamp;
            }
            this.stack.undo.push({
              redo: changeDelta,
              undo: undoDelta
            });
            if (this.stack.undo.length > this.options.maxStack) {
              this.stack.undo.shift();
            }
          }
        }, {
          key: 'redo',
          value: function redo() {
            this.change('redo', 'undo');
          }
        }, {
          key: 'transform',
          value: function transform(delta) {
            this.stack.undo.forEach(function (change) {
              change.undo = delta.transform(change.undo, true);
              change.redo = delta.transform(change.redo, true);
            });
            this.stack.redo.forEach(function (change) {
              change.undo = delta.transform(change.undo, true);
              change.redo = delta.transform(change.redo, true);
            });
          }
        }, {
          key: 'undo',
          value: function undo() {
            this.change('undo', 'redo');
          }
        }]);

        return History;
      }(_module2.default);

      History.DEFAULTS = {
        delay: 1000,
        maxStack: 100,
        userOnly: false
      };

      function endsWithNewlineChange(delta) {
        var lastOp = delta.ops[delta.ops.length - 1];
        if (lastOp == null) return false;
        if (lastOp.insert != null) {
          return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\n');
        }
        if (lastOp.attributes != null) {
          return Object.keys(lastOp.attributes).some(function (attr) {
            return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;
          });
        }
        return false;
      }

      function getLastChangeIndex(delta) {
        var deleteLength = delta.reduce(function (length, op) {
          length += op.delete || 0;
          return length;
        }, 0);
        var changeIndex = delta.length() - deleteLength;
        if (endsWithNewlineChange(delta)) {
          changeIndex -= 1;
        }
        return changeIndex;
      }

      exports.default = History;
      exports.getLastChangeIndex = getLastChangeIndex;

      /***/
    },
    /* 43 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.BaseTooltip = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _emitter = __webpack_require__(8);

      var _emitter2 = _interopRequireDefault(_emitter);

      var _keyboard = __webpack_require__(23);

      var _keyboard2 = _interopRequireDefault(_keyboard);

      var _theme = __webpack_require__(34);

      var _theme2 = _interopRequireDefault(_theme);

      var _colorPicker = __webpack_require__(59);

      var _colorPicker2 = _interopRequireDefault(_colorPicker);

      var _iconPicker = __webpack_require__(60);

      var _iconPicker2 = _interopRequireDefault(_iconPicker);

      var _picker = __webpack_require__(28);

      var _picker2 = _interopRequireDefault(_picker);

      var _tooltip = __webpack_require__(61);

      var _tooltip2 = _interopRequireDefault(_tooltip);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var ALIGNS = [false, 'center', 'right', 'justify'];

      var COLORS = ["#000000", "#e60000", "#ff9900", "#ffff00", "#008a00", "#0066cc", "#9933ff", "#ffffff", "#facccc", "#ffebcc", "#ffffcc", "#cce8cc", "#cce0f5", "#ebd6ff", "#bbbbbb", "#f06666", "#ffc266", "#ffff66", "#66b966", "#66a3e0", "#c285ff", "#888888", "#a10000", "#b26b00", "#b2b200", "#006100", "#0047b2", "#6b24b2", "#444444", "#5c0000", "#663d00", "#666600", "#003700", "#002966", "#3d1466"];

      var FONTS = [false, 'serif', 'monospace'];

      var HEADERS = ['1', '2', '3', false];

      var SIZES = ['small', false, 'large', 'huge'];

      var BaseTheme = function (_Theme) {
        _inherits(BaseTheme, _Theme);

        function BaseTheme(quill, options) {
          _classCallCheck(this, BaseTheme);

          var _this = _possibleConstructorReturn(this, (BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)).call(this, quill, options));

          var listener = function listener(e) {
            if (!document.body.contains(quill.root)) {
              return document.body.removeEventListener('click', listener);
            }
            if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {
              _this.tooltip.hide();
            }
            if (_this.pickers != null) {
              _this.pickers.forEach(function (picker) {
                if (!picker.container.contains(e.target)) {
                  picker.close();
                }
              });
            }
          };
          quill.emitter.listenDOM('click', document.body, listener);
          return _this;
        }

        _createClass(BaseTheme, [{
          key: 'addModule',
          value: function addModule(name) {
            var module = _get(BaseTheme.prototype.__proto__ || Object.getPrototypeOf(BaseTheme.prototype), 'addModule', this).call(this, name);
            if (name === 'toolbar') {
              this.extendToolbar(module);
            }
            return module;
          }
        }, {
          key: 'buildButtons',
          value: function buildButtons(buttons, icons) {
            buttons.forEach(function (button) {
              var className = button.getAttribute('class') || '';
              className.split(/\s+/).forEach(function (name) {
                if (!name.startsWith('ql-')) return;
                name = name.slice('ql-'.length);
                if (icons[name] == null) return;
                if (name === 'direction') {
                  button.innerHTML = icons[name][''] + icons[name]['rtl'];
                } else if (typeof icons[name] === 'string') {
                  button.innerHTML = icons[name];
                } else {
                  var value = button.value || '';
                  if (value != null && icons[name][value]) {
                    button.innerHTML = icons[name][value];
                  }
                }
              });
            });
          }
        }, {
          key: 'buildPickers',
          value: function buildPickers(selects, icons) {
            var _this2 = this;

            this.pickers = selects.map(function (select) {
              if (select.classList.contains('ql-align')) {
                if (select.querySelector('option') == null) {
                  fillSelect(select, ALIGNS);
                }
                return new _iconPicker2.default(select, icons.align);
              } else if (select.classList.contains('ql-background') || select.classList.contains('ql-color')) {
                var format = select.classList.contains('ql-background') ? 'background' : 'color';
                if (select.querySelector('option') == null) {
                  fillSelect(select, COLORS, format === 'background' ? '#ffffff' : '#000000');
                }
                return new _colorPicker2.default(select, icons[format]);
              } else {
                if (select.querySelector('option') == null) {
                  if (select.classList.contains('ql-font')) {
                    fillSelect(select, FONTS);
                  } else if (select.classList.contains('ql-header')) {
                    fillSelect(select, HEADERS);
                  } else if (select.classList.contains('ql-size')) {
                    fillSelect(select, SIZES);
                  }
                }
                return new _picker2.default(select);
              }
            });
            var update = function update() {
              _this2.pickers.forEach(function (picker) {
                picker.update();
              });
            };
            this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);
          }
        }]);

        return BaseTheme;
      }(_theme2.default);

      BaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {
        modules: {
          toolbar: {
            handlers: {
              formula: function formula() {
                this.quill.theme.tooltip.edit('formula');
              },
              image: function image() {
                var _this3 = this;

                var fileInput = this.container.querySelector('input.ql-image[type=file]');
                if (fileInput == null) {
                  fileInput = document.createElement('input');
                  fileInput.setAttribute('type', 'file');
                  fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');
                  fileInput.classList.add('ql-image');
                  fileInput.addEventListener('change', function () {
                    if (fileInput.files != null && fileInput.files[0] != null) {
                      var reader = new FileReader();
                      reader.onload = function (e) {
                        var range = _this3.quill.getSelection(true);
                        _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ image: e.target.result }), _emitter2.default.sources.USER);
                        _this3.quill.setSelection(range.index + 1, _emitter2.default.sources.SILENT);
                        fileInput.value = "";
                      };
                      reader.readAsDataURL(fileInput.files[0]);
                    }
                  });
                  this.container.appendChild(fileInput);
                }
                fileInput.click();
              },
              video: function video() {
                this.quill.theme.tooltip.edit('video');
              }
            }
          }
        }
      });

      var BaseTooltip = function (_Tooltip) {
        _inherits(BaseTooltip, _Tooltip);

        function BaseTooltip(quill, boundsContainer) {
          _classCallCheck(this, BaseTooltip);

          var _this4 = _possibleConstructorReturn(this, (BaseTooltip.__proto__ || Object.getPrototypeOf(BaseTooltip)).call(this, quill, boundsContainer));

          _this4.textbox = _this4.root.querySelector('input[type="text"]');
          _this4.listen();
          return _this4;
        }

        _createClass(BaseTooltip, [{
          key: 'listen',
          value: function listen() {
            var _this5 = this;

            this.textbox.addEventListener('keydown', function (event) {
              if (_keyboard2.default.match(event, 'enter')) {
                _this5.save();
                event.preventDefault();
              } else if (_keyboard2.default.match(event, 'escape')) {
                _this5.cancel();
                event.preventDefault();
              }
            });
          }
        }, {
          key: 'cancel',
          value: function cancel() {
            this.hide();
          }
        }, {
          key: 'edit',
          value: function edit() {
            var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'link';
            var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

            this.root.classList.remove('ql-hidden');
            this.root.classList.add('ql-editing');
            if (preview != null) {
              this.textbox.value = preview;
            } else if (mode !== this.root.getAttribute('data-mode')) {
              this.textbox.value = '';
            }
            this.position(this.quill.getBounds(this.quill.selection.savedRange));
            this.textbox.select();
            this.textbox.setAttribute('placeholder', this.textbox.getAttribute('data-' + mode) || '');
            this.root.setAttribute('data-mode', mode);
          }
        }, {
          key: 'restoreFocus',
          value: function restoreFocus() {
            var scrollTop = this.quill.scrollingContainer.scrollTop;
            this.quill.focus();
            this.quill.scrollingContainer.scrollTop = scrollTop;
          }
        }, {
          key: 'save',
          value: function save() {
            var value = this.textbox.value;
            switch (this.root.getAttribute('data-mode')) {
              case 'link':
                {
                  var scrollTop = this.quill.root.scrollTop;
                  if (this.linkRange) {
                    this.quill.formatText(this.linkRange, 'link', value, _emitter2.default.sources.USER);
                    delete this.linkRange;
                  } else {
                    this.restoreFocus();
                    this.quill.format('link', value, _emitter2.default.sources.USER);
                  }
                  this.quill.root.scrollTop = scrollTop;
                  break;
                }
              case 'video':
                {
                  value = extractVideoUrl(value);
                } // eslint-disable-next-line no-fallthrough
              case 'formula':
                {
                  if (!value) break;
                  var range = this.quill.getSelection(true);
                  if (range != null) {
                    var index = range.index + range.length;
                    this.quill.insertEmbed(index, this.root.getAttribute('data-mode'), value, _emitter2.default.sources.USER);
                    if (this.root.getAttribute('data-mode') === 'formula') {
                      this.quill.insertText(index + 1, ' ', _emitter2.default.sources.USER);
                    }
                    this.quill.setSelection(index + 2, _emitter2.default.sources.USER);
                  }
                  break;
                }
              default:
            }
            this.textbox.value = '';
            this.hide();
          }
        }]);

        return BaseTooltip;
      }(_tooltip2.default);

      function extractVideoUrl(url) {
        var match = url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/);
        if (match) {
          return (match[1] || 'https') + '://www.youtube.com/embed/' + match[2] + '?showinfo=0';
        }
        if (match = url.match(/^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/)) {
          // eslint-disable-line no-cond-assign
          return (match[1] || 'https') + '://player.vimeo.com/video/' + match[2] + '/';
        }
        return url;
      }

      function fillSelect(select, values) {
        var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

        values.forEach(function (value) {
          var option = document.createElement('option');
          if (value === defaultValue) {
            option.setAttribute('selected', 'selected');
          } else {
            option.setAttribute('value', value);
          }
          select.appendChild(option);
        });
      }

      exports.BaseTooltip = BaseTooltip;
      exports.default = BaseTheme;

      /***/
    },
    /* 44 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", { value: true });
      var LinkedList = /** @class */function () {
        function LinkedList() {
          this.head = this.tail = null;
          this.length = 0;
        }
        LinkedList.prototype.append = function () {
          var nodes = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            nodes[_i] = arguments[_i];
          }
          this.insertBefore(nodes[0], null);
          if (nodes.length > 1) {
            this.append.apply(this, nodes.slice(1));
          }
        };
        LinkedList.prototype.contains = function (node) {
          var cur,
              next = this.iterator();
          while (cur = next()) {
            if (cur === node) return true;
          }
          return false;
        };
        LinkedList.prototype.insertBefore = function (node, refNode) {
          if (!node) return;
          node.next = refNode;
          if (refNode != null) {
            node.prev = refNode.prev;
            if (refNode.prev != null) {
              refNode.prev.next = node;
            }
            refNode.prev = node;
            if (refNode === this.head) {
              this.head = node;
            }
          } else if (this.tail != null) {
            this.tail.next = node;
            node.prev = this.tail;
            this.tail = node;
          } else {
            node.prev = null;
            this.head = this.tail = node;
          }
          this.length += 1;
        };
        LinkedList.prototype.offset = function (target) {
          var index = 0,
              cur = this.head;
          while (cur != null) {
            if (cur === target) return index;
            index += cur.length();
            cur = cur.next;
          }
          return -1;
        };
        LinkedList.prototype.remove = function (node) {
          if (!this.contains(node)) return;
          if (node.prev != null) node.prev.next = node.next;
          if (node.next != null) node.next.prev = node.prev;
          if (node === this.head) this.head = node.next;
          if (node === this.tail) this.tail = node.prev;
          this.length -= 1;
        };
        LinkedList.prototype.iterator = function (curNode) {
          if (curNode === void 0) {
            curNode = this.head;
          }
          // TODO use yield when we can
          return function () {
            var ret = curNode;
            if (curNode != null) curNode = curNode.next;
            return ret;
          };
        };
        LinkedList.prototype.find = function (index, inclusive) {
          if (inclusive === void 0) {
            inclusive = false;
          }
          var cur,
              next = this.iterator();
          while (cur = next()) {
            var length = cur.length();
            if (index < length || inclusive && index === length && (cur.next == null || cur.next.length() !== 0)) {
              return [cur, index];
            }
            index -= length;
          }
          return [null, 0];
        };
        LinkedList.prototype.forEach = function (callback) {
          var cur,
              next = this.iterator();
          while (cur = next()) {
            callback(cur);
          }
        };
        LinkedList.prototype.forEachAt = function (index, length, callback) {
          if (length <= 0) return;
          var _a = this.find(index),
              startNode = _a[0],
              offset = _a[1];
          var cur,
              curIndex = index - offset,
              next = this.iterator(startNode);
          while ((cur = next()) && curIndex < index + length) {
            var curLength = cur.length();
            if (index > curIndex) {
              callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));
            } else {
              callback(cur, 0, Math.min(curLength, index + length - curIndex));
            }
            curIndex += curLength;
          }
        };
        LinkedList.prototype.map = function (callback) {
          return this.reduce(function (memo, cur) {
            memo.push(callback(cur));
            return memo;
          }, []);
        };
        LinkedList.prototype.reduce = function (callback, memo) {
          var cur,
              next = this.iterator();
          while (cur = next()) {
            memo = callback(memo, cur);
          }
          return memo;
        };
        return LinkedList;
      }();
      exports.default = LinkedList;

      /***/
    },
    /* 45 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var container_1 = __webpack_require__(17);
      var Registry = __webpack_require__(1);
      var OBSERVER_CONFIG = {
        attributes: true,
        characterData: true,
        characterDataOldValue: true,
        childList: true,
        subtree: true
      };
      var MAX_OPTIMIZE_ITERATIONS = 100;
      var ScrollBlot = /** @class */function (_super) {
        __extends(ScrollBlot, _super);
        function ScrollBlot(node) {
          var _this = _super.call(this, node) || this;
          _this.scroll = _this;
          _this.observer = new MutationObserver(function (mutations) {
            _this.update(mutations);
          });
          _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
          _this.attach();
          return _this;
        }
        ScrollBlot.prototype.detach = function () {
          _super.prototype.detach.call(this);
          this.observer.disconnect();
        };
        ScrollBlot.prototype.deleteAt = function (index, length) {
          this.update();
          if (index === 0 && length === this.length()) {
            this.children.forEach(function (child) {
              child.remove();
            });
          } else {
            _super.prototype.deleteAt.call(this, index, length);
          }
        };
        ScrollBlot.prototype.formatAt = function (index, length, name, value) {
          this.update();
          _super.prototype.formatAt.call(this, index, length, name, value);
        };
        ScrollBlot.prototype.insertAt = function (index, value, def) {
          this.update();
          _super.prototype.insertAt.call(this, index, value, def);
        };
        ScrollBlot.prototype.optimize = function (mutations, context) {
          var _this = this;
          if (mutations === void 0) {
            mutations = [];
          }
          if (context === void 0) {
            context = {};
          }
          _super.prototype.optimize.call(this, context);
          // We must modify mutations directly, cannot make copy and then modify
          var records = [].slice.call(this.observer.takeRecords());
          // Array.push currently seems to be implemented by a non-tail recursive function
          // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());
          while (records.length > 0) {
            mutations.push(records.pop());
          } // TODO use WeakMap
          var mark = function mark(blot, markParent) {
            if (markParent === void 0) {
              markParent = true;
            }
            if (blot == null || blot === _this) return;
            if (blot.domNode.parentNode == null) return;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
              // @ts-ignore
              blot.domNode[Registry.DATA_KEY].mutations = [];
            }
            if (markParent) mark(blot.parent);
          };
          var optimize = function optimize(blot) {
            // Post-order traversal
            if (
            // @ts-ignore
            blot.domNode[Registry.DATA_KEY] == null ||
            // @ts-ignore
            blot.domNode[Registry.DATA_KEY].mutations == null) {
              return;
            }
            if (blot instanceof container_1.default) {
              blot.children.forEach(optimize);
            }
            blot.optimize(context);
          };
          var remaining = mutations;
          for (var i = 0; remaining.length > 0; i += 1) {
            if (i >= MAX_OPTIMIZE_ITERATIONS) {
              throw new Error('[Parchment] Maximum optimize iterations reached');
            }
            remaining.forEach(function (mutation) {
              var blot = Registry.find(mutation.target, true);
              if (blot == null) return;
              if (blot.domNode === mutation.target) {
                if (mutation.type === 'childList') {
                  mark(Registry.find(mutation.previousSibling, false));
                  [].forEach.call(mutation.addedNodes, function (node) {
                    var child = Registry.find(node, false);
                    mark(child, false);
                    if (child instanceof container_1.default) {
                      child.children.forEach(function (grandChild) {
                        mark(grandChild, false);
                      });
                    }
                  });
                } else if (mutation.type === 'attributes') {
                  mark(blot.prev);
                }
              }
              mark(blot);
            });
            this.children.forEach(optimize);
            remaining = [].slice.call(this.observer.takeRecords());
            records = remaining.slice();
            while (records.length > 0) {
              mutations.push(records.pop());
            }
          }
        };
        ScrollBlot.prototype.update = function (mutations, context) {
          var _this = this;
          if (context === void 0) {
            context = {};
          }
          mutations = mutations || this.observer.takeRecords();
          // TODO use WeakMap
          mutations.map(function (mutation) {
            var blot = Registry.find(mutation.target, true);
            if (blot == null) return null;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
              // @ts-ignore
              blot.domNode[Registry.DATA_KEY].mutations = [mutation];
              return blot;
            } else {
              // @ts-ignore
              blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
              return null;
            }
          }).forEach(function (blot) {
            if (blot == null || blot === _this ||
            //@ts-ignore
            blot.domNode[Registry.DATA_KEY] == null) return;
            // @ts-ignore
            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
          });
          // @ts-ignore
          if (this.domNode[Registry.DATA_KEY].mutations != null) {
            // @ts-ignore
            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
          }
          this.optimize(mutations, context);
        };
        ScrollBlot.blotName = 'scroll';
        ScrollBlot.defaultChild = 'block';
        ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;
        ScrollBlot.tagName = 'DIV';
        return ScrollBlot;
      }(container_1.default);
      exports.default = ScrollBlot;

      /***/
    },
    /* 46 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var format_1 = __webpack_require__(18);
      var Registry = __webpack_require__(1);
      // Shallow object comparison
      function isEqual(obj1, obj2) {
        if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;
        // @ts-ignore
        for (var prop in obj1) {
          // @ts-ignore
          if (obj1[prop] !== obj2[prop]) return false;
        }
        return true;
      }
      var InlineBlot = /** @class */function (_super) {
        __extends(InlineBlot, _super);
        function InlineBlot() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        InlineBlot.formats = function (domNode) {
          if (domNode.tagName === InlineBlot.tagName) return undefined;
          return _super.formats.call(this, domNode);
        };
        InlineBlot.prototype.format = function (name, value) {
          var _this = this;
          if (name === this.statics.blotName && !value) {
            this.children.forEach(function (child) {
              if (!(child instanceof format_1.default)) {
                child = child.wrap(InlineBlot.blotName, true);
              }
              _this.attributes.copy(child);
            });
            this.unwrap();
          } else {
            _super.prototype.format.call(this, name, value);
          }
        };
        InlineBlot.prototype.formatAt = function (index, length, name, value) {
          if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
            var blot = this.isolate(index, length);
            blot.format(name, value);
          } else {
            _super.prototype.formatAt.call(this, index, length, name, value);
          }
        };
        InlineBlot.prototype.optimize = function (context) {
          _super.prototype.optimize.call(this, context);
          var formats = this.formats();
          if (Object.keys(formats).length === 0) {
            return this.unwrap(); // unformatted span
          }
          var next = this.next;
          if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {
            next.moveChildren(this);
            next.remove();
          }
        };
        InlineBlot.blotName = 'inline';
        InlineBlot.scope = Registry.Scope.INLINE_BLOT;
        InlineBlot.tagName = 'SPAN';
        return InlineBlot;
      }(format_1.default);
      exports.default = InlineBlot;

      /***/
    },
    /* 47 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var format_1 = __webpack_require__(18);
      var Registry = __webpack_require__(1);
      var BlockBlot = /** @class */function (_super) {
        __extends(BlockBlot, _super);
        function BlockBlot() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        BlockBlot.formats = function (domNode) {
          var tagName = Registry.query(BlockBlot.blotName).tagName;
          if (domNode.tagName === tagName) return undefined;
          return _super.formats.call(this, domNode);
        };
        BlockBlot.prototype.format = function (name, value) {
          if (Registry.query(name, Registry.Scope.BLOCK) == null) {
            return;
          } else if (name === this.statics.blotName && !value) {
            this.replaceWith(BlockBlot.blotName);
          } else {
            _super.prototype.format.call(this, name, value);
          }
        };
        BlockBlot.prototype.formatAt = function (index, length, name, value) {
          if (Registry.query(name, Registry.Scope.BLOCK) != null) {
            this.format(name, value);
          } else {
            _super.prototype.formatAt.call(this, index, length, name, value);
          }
        };
        BlockBlot.prototype.insertAt = function (index, value, def) {
          if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {
            // Insert text or inline
            _super.prototype.insertAt.call(this, index, value, def);
          } else {
            var after = this.split(index);
            var blot = Registry.create(value, def);
            after.parent.insertBefore(blot, after);
          }
        };
        BlockBlot.prototype.update = function (mutations, context) {
          if (navigator.userAgent.match(/Trident/)) {
            this.build();
          } else {
            _super.prototype.update.call(this, mutations, context);
          }
        };
        BlockBlot.blotName = 'block';
        BlockBlot.scope = Registry.Scope.BLOCK_BLOT;
        BlockBlot.tagName = 'P';
        return BlockBlot;
      }(format_1.default);
      exports.default = BlockBlot;

      /***/
    },
    /* 48 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var leaf_1 = __webpack_require__(19);
      var EmbedBlot = /** @class */function (_super) {
        __extends(EmbedBlot, _super);
        function EmbedBlot() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        EmbedBlot.formats = function (domNode) {
          return undefined;
        };
        EmbedBlot.prototype.format = function (name, value) {
          // super.formatAt wraps, which is what we want in general,
          // but this allows subclasses to overwrite for formats
          // that just apply to particular embeds
          _super.prototype.formatAt.call(this, 0, this.length(), name, value);
        };
        EmbedBlot.prototype.formatAt = function (index, length, name, value) {
          if (index === 0 && length === this.length()) {
            this.format(name, value);
          } else {
            _super.prototype.formatAt.call(this, index, length, name, value);
          }
        };
        EmbedBlot.prototype.formats = function () {
          return this.statics.formats(this.domNode);
        };
        return EmbedBlot;
      }(leaf_1.default);
      exports.default = EmbedBlot;

      /***/
    },
    /* 49 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var __extends = this && this.__extends || function () {
        var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
          }
        };
        return function (d, b) {
          extendStatics(d, b);
          function __() {
            this.constructor = d;
          }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        };
      }();
      Object.defineProperty(exports, "__esModule", { value: true });
      var leaf_1 = __webpack_require__(19);
      var Registry = __webpack_require__(1);
      var TextBlot = /** @class */function (_super) {
        __extends(TextBlot, _super);
        function TextBlot(node) {
          var _this = _super.call(this, node) || this;
          _this.text = _this.statics.value(_this.domNode);
          return _this;
        }
        TextBlot.create = function (value) {
          return document.createTextNode(value);
        };
        TextBlot.value = function (domNode) {
          var text = domNode.data;
          // @ts-ignore
          if (text['normalize']) text = text['normalize']();
          return text;
        };
        TextBlot.prototype.deleteAt = function (index, length) {
          this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);
        };
        TextBlot.prototype.index = function (node, offset) {
          if (this.domNode === node) {
            return offset;
          }
          return -1;
        };
        TextBlot.prototype.insertAt = function (index, value, def) {
          if (def == null) {
            this.text = this.text.slice(0, index) + value + this.text.slice(index);
            this.domNode.data = this.text;
          } else {
            _super.prototype.insertAt.call(this, index, value, def);
          }
        };
        TextBlot.prototype.length = function () {
          return this.text.length;
        };
        TextBlot.prototype.optimize = function (context) {
          _super.prototype.optimize.call(this, context);
          this.text = this.statics.value(this.domNode);
          if (this.text.length === 0) {
            this.remove();
          } else if (this.next instanceof TextBlot && this.next.prev === this) {
            this.insertAt(this.length(), this.next.value());
            this.next.remove();
          }
        };
        TextBlot.prototype.position = function (index, inclusive) {
          if (inclusive === void 0) {
            inclusive = false;
          }
          return [this.domNode, index];
        };
        TextBlot.prototype.split = function (index, force) {
          if (force === void 0) {
            force = false;
          }
          if (!force) {
            if (index === 0) return this;
            if (index === this.length()) return this.next;
          }
          var after = Registry.create(this.domNode.splitText(index));
          this.parent.insertBefore(after, this.next);
          this.text = this.statics.value(this.domNode);
          return after;
        };
        TextBlot.prototype.update = function (mutations, context) {
          var _this = this;
          if (mutations.some(function (mutation) {
            return mutation.type === 'characterData' && mutation.target === _this.domNode;
          })) {
            this.text = this.statics.value(this.domNode);
          }
        };
        TextBlot.prototype.value = function () {
          return this.text;
        };
        TextBlot.blotName = 'text';
        TextBlot.scope = Registry.Scope.INLINE_BLOT;
        return TextBlot;
      }(leaf_1.default);
      exports.default = TextBlot;

      /***/
    },
    /* 50 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      var elem = document.createElement('div');
      elem.classList.toggle('test-class', false);
      if (elem.classList.contains('test-class')) {
        var _toggle = DOMTokenList.prototype.toggle;
        DOMTokenList.prototype.toggle = function (token, force) {
          if (arguments.length > 1 && !this.contains(token) === !force) {
            return force;
          } else {
            return _toggle.call(this, token);
          }
        };
      }

      if (!String.prototype.startsWith) {
        String.prototype.startsWith = function (searchString, position) {
          position = position || 0;
          return this.substr(position, searchString.length) === searchString;
        };
      }

      if (!String.prototype.endsWith) {
        String.prototype.endsWith = function (searchString, position) {
          var subjectString = this.toString();
          if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {
            position = subjectString.length;
          }
          position -= searchString.length;
          var lastIndex = subjectString.indexOf(searchString, position);
          return lastIndex !== -1 && lastIndex === position;
        };
      }

      if (!Array.prototype.find) {
        Object.defineProperty(Array.prototype, "find", {
          value: function value(predicate) {
            if (this === null) {
              throw new TypeError('Array.prototype.find called on null or undefined');
            }
            if (typeof predicate !== 'function') {
              throw new TypeError('predicate must be a function');
            }
            var list = Object(this);
            var length = list.length >>> 0;
            var thisArg = arguments[1];
            var value;

            for (var i = 0; i < length; i++) {
              value = list[i];
              if (predicate.call(thisArg, value, i, list)) {
                return value;
              }
            }
            return undefined;
          }
        });
      }

      document.addEventListener("DOMContentLoaded", function () {
        // Disable resizing in Firefox
        document.execCommand("enableObjectResizing", false, false);
        // Disable automatic linkifying in IE11
        document.execCommand("autoUrlDetect", false, false);
      });

      /***/
    },
    /* 51 */
    /***/function (module, exports) {

      /**
       * This library modifies the diff-patch-match library by Neil Fraser
       * by removing the patch and match functionality and certain advanced
       * options in the diff function. The original license is as follows:
       *
       * ===
       *
       * Diff Match and Patch
       *
       * Copyright 2006 Google Inc.
       * http://code.google.com/p/google-diff-match-patch/
       *
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       *   http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       */

      /**
       * The data structure representing a diff is an array of tuples:
       * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
       * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
       */
      var DIFF_DELETE = -1;
      var DIFF_INSERT = 1;
      var DIFF_EQUAL = 0;

      /**
       * Find the differences between two texts.  Simplifies the problem by stripping
       * any common prefix or suffix off the texts before diffing.
       * @param {string} text1 Old string to be diffed.
       * @param {string} text2 New string to be diffed.
       * @param {Int} cursor_pos Expected edit position in text1 (optional)
       * @return {Array} Array of diff tuples.
       */
      function diff_main(text1, text2, cursor_pos) {
        // Check for equality (speedup).
        if (text1 == text2) {
          if (text1) {
            return [[DIFF_EQUAL, text1]];
          }
          return [];
        }

        // Check cursor_pos within bounds
        if (cursor_pos < 0 || text1.length < cursor_pos) {
          cursor_pos = null;
        }

        // Trim off common prefix (speedup).
        var commonlength = diff_commonPrefix(text1, text2);
        var commonprefix = text1.substring(0, commonlength);
        text1 = text1.substring(commonlength);
        text2 = text2.substring(commonlength);

        // Trim off common suffix (speedup).
        commonlength = diff_commonSuffix(text1, text2);
        var commonsuffix = text1.substring(text1.length - commonlength);
        text1 = text1.substring(0, text1.length - commonlength);
        text2 = text2.substring(0, text2.length - commonlength);

        // Compute the diff on the middle block.
        var diffs = diff_compute_(text1, text2);

        // Restore the prefix and suffix.
        if (commonprefix) {
          diffs.unshift([DIFF_EQUAL, commonprefix]);
        }
        if (commonsuffix) {
          diffs.push([DIFF_EQUAL, commonsuffix]);
        }
        diff_cleanupMerge(diffs);
        if (cursor_pos != null) {
          diffs = fix_cursor(diffs, cursor_pos);
        }
        diffs = fix_emoji(diffs);
        return diffs;
      };

      /**
       * Find the differences between two texts.  Assumes that the texts do not
       * have any common prefix or suffix.
       * @param {string} text1 Old string to be diffed.
       * @param {string} text2 New string to be diffed.
       * @return {Array} Array of diff tuples.
       */
      function diff_compute_(text1, text2) {
        var diffs;

        if (!text1) {
          // Just add some text (speedup).
          return [[DIFF_INSERT, text2]];
        }

        if (!text2) {
          // Just delete some text (speedup).
          return [[DIFF_DELETE, text1]];
        }

        var longtext = text1.length > text2.length ? text1 : text2;
        var shorttext = text1.length > text2.length ? text2 : text1;
        var i = longtext.indexOf(shorttext);
        if (i != -1) {
          // Shorter text is inside the longer text (speedup).
          diffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]];
          // Swap insertions for deletions if diff is reversed.
          if (text1.length > text2.length) {
            diffs[0][0] = diffs[2][0] = DIFF_DELETE;
          }
          return diffs;
        }

        if (shorttext.length == 1) {
          // Single character string.
          // After the previous speedup, the character can't be an equality.
          return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
        }

        // Check to see if the problem can be split in two.
        var hm = diff_halfMatch_(text1, text2);
        if (hm) {
          // A half-match was found, sort out the return data.
          var text1_a = hm[0];
          var text1_b = hm[1];
          var text2_a = hm[2];
          var text2_b = hm[3];
          var mid_common = hm[4];
          // Send both pairs off for separate processing.
          var diffs_a = diff_main(text1_a, text2_a);
          var diffs_b = diff_main(text1_b, text2_b);
          // Merge the results.
          return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
        }

        return diff_bisect_(text1, text2);
      };

      /**
       * Find the 'middle snake' of a diff, split the problem in two
       * and return the recursively constructed diff.
       * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
       * @param {string} text1 Old string to be diffed.
       * @param {string} text2 New string to be diffed.
       * @return {Array} Array of diff tuples.
       * @private
       */
      function diff_bisect_(text1, text2) {
        // Cache the text lengths to prevent multiple calls.
        var text1_length = text1.length;
        var text2_length = text2.length;
        var max_d = Math.ceil((text1_length + text2_length) / 2);
        var v_offset = max_d;
        var v_length = 2 * max_d;
        var v1 = new Array(v_length);
        var v2 = new Array(v_length);
        // Setting all elements to -1 is faster in Chrome & Firefox than mixing
        // integers and undefined.
        for (var x = 0; x < v_length; x++) {
          v1[x] = -1;
          v2[x] = -1;
        }
        v1[v_offset + 1] = 0;
        v2[v_offset + 1] = 0;
        var delta = text1_length - text2_length;
        // If the total number of characters is odd, then the front path will collide
        // with the reverse path.
        var front = delta % 2 != 0;
        // Offsets for start and end of k loop.
        // Prevents mapping of space beyond the grid.
        var k1start = 0;
        var k1end = 0;
        var k2start = 0;
        var k2end = 0;
        for (var d = 0; d < max_d; d++) {
          // Walk the front path one step.
          for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
            var k1_offset = v_offset + k1;
            var x1;
            if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {
              x1 = v1[k1_offset + 1];
            } else {
              x1 = v1[k1_offset - 1] + 1;
            }
            var y1 = x1 - k1;
            while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)) {
              x1++;
              y1++;
            }
            v1[k1_offset] = x1;
            if (x1 > text1_length) {
              // Ran off the right of the graph.
              k1end += 2;
            } else if (y1 > text2_length) {
              // Ran off the bottom of the graph.
              k1start += 2;
            } else if (front) {
              var k2_offset = v_offset + delta - k1;
              if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
                // Mirror x2 onto top-left coordinate system.
                var x2 = text1_length - v2[k2_offset];
                if (x1 >= x2) {
                  // Overlap detected.
                  return diff_bisectSplit_(text1, text2, x1, y1);
                }
              }
            }
          }

          // Walk the reverse path one step.
          for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
            var k2_offset = v_offset + k2;
            var x2;
            if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {
              x2 = v2[k2_offset + 1];
            } else {
              x2 = v2[k2_offset - 1] + 1;
            }
            var y2 = x2 - k2;
            while (x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) == text2.charAt(text2_length - y2 - 1)) {
              x2++;
              y2++;
            }
            v2[k2_offset] = x2;
            if (x2 > text1_length) {
              // Ran off the left of the graph.
              k2end += 2;
            } else if (y2 > text2_length) {
              // Ran off the top of the graph.
              k2start += 2;
            } else if (!front) {
              var k1_offset = v_offset + delta - k2;
              if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
                var x1 = v1[k1_offset];
                var y1 = v_offset + x1 - k1_offset;
                // Mirror x2 onto top-left coordinate system.
                x2 = text1_length - x2;
                if (x1 >= x2) {
                  // Overlap detected.
                  return diff_bisectSplit_(text1, text2, x1, y1);
                }
              }
            }
          }
        }
        // Diff took too long and hit the deadline or
        // number of diffs equals number of characters, no commonality at all.
        return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
      };

      /**
       * Given the location of the 'middle snake', split the diff in two parts
       * and recurse.
       * @param {string} text1 Old string to be diffed.
       * @param {string} text2 New string to be diffed.
       * @param {number} x Index of split point in text1.
       * @param {number} y Index of split point in text2.
       * @return {Array} Array of diff tuples.
       */
      function diff_bisectSplit_(text1, text2, x, y) {
        var text1a = text1.substring(0, x);
        var text2a = text2.substring(0, y);
        var text1b = text1.substring(x);
        var text2b = text2.substring(y);

        // Compute both diffs serially.
        var diffs = diff_main(text1a, text2a);
        var diffsb = diff_main(text1b, text2b);

        return diffs.concat(diffsb);
      };

      /**
       * Determine the common prefix of two strings.
       * @param {string} text1 First string.
       * @param {string} text2 Second string.
       * @return {number} The number of characters common to the start of each
       *     string.
       */
      function diff_commonPrefix(text1, text2) {
        // Quick check for common null cases.
        if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
          return 0;
        }
        // Binary search.
        // Performance analysis: http://neil.fraser.name/news/2007/10/09/
        var pointermin = 0;
        var pointermax = Math.min(text1.length, text2.length);
        var pointermid = pointermax;
        var pointerstart = 0;
        while (pointermin < pointermid) {
          if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {
            pointermin = pointermid;
            pointerstart = pointermin;
          } else {
            pointermax = pointermid;
          }
          pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
        }
        return pointermid;
      };

      /**
       * Determine the common suffix of two strings.
       * @param {string} text1 First string.
       * @param {string} text2 Second string.
       * @return {number} The number of characters common to the end of each string.
       */
      function diff_commonSuffix(text1, text2) {
        // Quick check for common null cases.
        if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
          return 0;
        }
        // Binary search.
        // Performance analysis: http://neil.fraser.name/news/2007/10/09/
        var pointermin = 0;
        var pointermax = Math.min(text1.length, text2.length);
        var pointermid = pointermax;
        var pointerend = 0;
        while (pointermin < pointermid) {
          if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {
            pointermin = pointermid;
            pointerend = pointermin;
          } else {
            pointermax = pointermid;
          }
          pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
        }
        return pointermid;
      };

      /**
       * Do the two texts share a substring which is at least half the length of the
       * longer text?
       * This speedup can produce non-minimal diffs.
       * @param {string} text1 First string.
       * @param {string} text2 Second string.
       * @return {Array.<string>} Five element Array, containing the prefix of
       *     text1, the suffix of text1, the prefix of text2, the suffix of
       *     text2 and the common middle.  Or null if there was no match.
       */
      function diff_halfMatch_(text1, text2) {
        var longtext = text1.length > text2.length ? text1 : text2;
        var shorttext = text1.length > text2.length ? text2 : text1;
        if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
          return null; // Pointless.
        }

        /**
         * Does a substring of shorttext exist within longtext such that the substring
         * is at least half the length of longtext?
         * Closure, but does not reference any external variables.
         * @param {string} longtext Longer string.
         * @param {string} shorttext Shorter string.
         * @param {number} i Start index of quarter length substring within longtext.
         * @return {Array.<string>} Five element Array, containing the prefix of
         *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
         *     of shorttext and the common middle.  Or null if there was no match.
         * @private
         */
        function diff_halfMatchI_(longtext, shorttext, i) {
          // Start with a 1/4 length substring at position i as a seed.
          var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));
          var j = -1;
          var best_common = '';
          var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;
          while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
            var prefixLength = diff_commonPrefix(longtext.substring(i), shorttext.substring(j));
            var suffixLength = diff_commonSuffix(longtext.substring(0, i), shorttext.substring(0, j));
            if (best_common.length < suffixLength + prefixLength) {
              best_common = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);
              best_longtext_a = longtext.substring(0, i - suffixLength);
              best_longtext_b = longtext.substring(i + prefixLength);
              best_shorttext_a = shorttext.substring(0, j - suffixLength);
              best_shorttext_b = shorttext.substring(j + prefixLength);
            }
          }
          if (best_common.length * 2 >= longtext.length) {
            return [best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b, best_common];
          } else {
            return null;
          }
        }

        // First check if the second quarter is the seed for a half-match.
        var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));
        // Check again based on the third quarter.
        var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));
        var hm;
        if (!hm1 && !hm2) {
          return null;
        } else if (!hm2) {
          hm = hm1;
        } else if (!hm1) {
          hm = hm2;
        } else {
          // Both matched.  Select the longest.
          hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
        }

        // A half-match was found, sort out the return data.
        var text1_a, text1_b, text2_a, text2_b;
        if (text1.length > text2.length) {
          text1_a = hm[0];
          text1_b = hm[1];
          text2_a = hm[2];
          text2_b = hm[3];
        } else {
          text2_a = hm[0];
          text2_b = hm[1];
          text1_a = hm[2];
          text1_b = hm[3];
        }
        var mid_common = hm[4];
        return [text1_a, text1_b, text2_a, text2_b, mid_common];
      };

      /**
       * Reorder and merge like edit sections.  Merge equalities.
       * Any edit section can move as long as it doesn't cross an equality.
       * @param {Array} diffs Array of diff tuples.
       */
      function diff_cleanupMerge(diffs) {
        diffs.push([DIFF_EQUAL, '']); // Add a dummy entry at the end.
        var pointer = 0;
        var count_delete = 0;
        var count_insert = 0;
        var text_delete = '';
        var text_insert = '';
        var commonlength;
        while (pointer < diffs.length) {
          switch (diffs[pointer][0]) {
            case DIFF_INSERT:
              count_insert++;
              text_insert += diffs[pointer][1];
              pointer++;
              break;
            case DIFF_DELETE:
              count_delete++;
              text_delete += diffs[pointer][1];
              pointer++;
              break;
            case DIFF_EQUAL:
              // Upon reaching an equality, check for prior redundancies.
              if (count_delete + count_insert > 1) {
                if (count_delete !== 0 && count_insert !== 0) {
                  // Factor out any common prefixies.
                  commonlength = diff_commonPrefix(text_insert, text_delete);
                  if (commonlength !== 0) {
                    if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {
                      diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);
                    } else {
                      diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);
                      pointer++;
                    }
                    text_insert = text_insert.substring(commonlength);
                    text_delete = text_delete.substring(commonlength);
                  }
                  // Factor out any common suffixies.
                  commonlength = diff_commonSuffix(text_insert, text_delete);
                  if (commonlength !== 0) {
                    diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];
                    text_insert = text_insert.substring(0, text_insert.length - commonlength);
                    text_delete = text_delete.substring(0, text_delete.length - commonlength);
                  }
                }
                // Delete the offending records and add the merged ones.
                if (count_delete === 0) {
                  diffs.splice(pointer - count_insert, count_delete + count_insert, [DIFF_INSERT, text_insert]);
                } else if (count_insert === 0) {
                  diffs.splice(pointer - count_delete, count_delete + count_insert, [DIFF_DELETE, text_delete]);
                } else {
                  diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);
                }
                pointer = pointer - count_delete - count_insert + (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
              } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
                // Merge this equality with the previous one.
                diffs[pointer - 1][1] += diffs[pointer][1];
                diffs.splice(pointer, 1);
              } else {
                pointer++;
              }
              count_insert = 0;
              count_delete = 0;
              text_delete = '';
              text_insert = '';
              break;
          }
        }
        if (diffs[diffs.length - 1][1] === '') {
          diffs.pop(); // Remove the dummy entry at the end.
        }

        // Second pass: look for single edits surrounded on both sides by equalities
        // which can be shifted sideways to eliminate an equality.
        // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC
        var changes = false;
        pointer = 1;
        // Intentionally ignore the first and last element (don't need checking).
        while (pointer < diffs.length - 1) {
          if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {
            // This is a single edit surrounded by equalities.
            if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
              // Shift the edit over the previous equality.
              diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);
              diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
              diffs.splice(pointer - 1, 1);
              changes = true;
            } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {
              // Shift the edit over the next equality.
              diffs[pointer - 1][1] += diffs[pointer + 1][1];
              diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];
              diffs.splice(pointer + 1, 1);
              changes = true;
            }
          }
          pointer++;
        }
        // If shifts were made, the diff needs reordering and another shift sweep.
        if (changes) {
          diff_cleanupMerge(diffs);
        }
      };

      var diff = diff_main;
      diff.INSERT = DIFF_INSERT;
      diff.DELETE = DIFF_DELETE;
      diff.EQUAL = DIFF_EQUAL;

      module.exports = diff;

      /*
       * Modify a diff such that the cursor position points to the start of a change:
       * E.g.
       *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)
       *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]
       *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)
       *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]
       *
       * @param {Array} diffs Array of diff tuples
       * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
       * @return {Array} A tuple [cursor location in the modified diff, modified diff]
       */
      function cursor_normalize_diff(diffs, cursor_pos) {
        if (cursor_pos === 0) {
          return [DIFF_EQUAL, diffs];
        }
        for (var current_pos = 0, i = 0; i < diffs.length; i++) {
          var d = diffs[i];
          if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
            var next_pos = current_pos + d[1].length;
            if (cursor_pos === next_pos) {
              return [i + 1, diffs];
            } else if (cursor_pos < next_pos) {
              // copy to prevent side effects
              diffs = diffs.slice();
              // split d into two diff changes
              var split_pos = cursor_pos - current_pos;
              var d_left = [d[0], d[1].slice(0, split_pos)];
              var d_right = [d[0], d[1].slice(split_pos)];
              diffs.splice(i, 1, d_left, d_right);
              return [i + 1, diffs];
            } else {
              current_pos = next_pos;
            }
          }
        }
        throw new Error('cursor_pos is out of bounds!');
      }

      /*
       * Modify a diff such that the edit position is "shifted" to the proposed edit location (cursor_position).
       *
       * Case 1)
       *   Check if a naive shift is possible:
       *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)
       *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result
       * Case 2)
       *   Check if the following shifts are possible:
       *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']
       *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']
       *         ^            ^
       *         d          d_next
       *
       * @param {Array} diffs Array of diff tuples
       * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
       * @return {Array} Array of diff tuples
       */
      function fix_cursor(diffs, cursor_pos) {
        var norm = cursor_normalize_diff(diffs, cursor_pos);
        var ndiffs = norm[1];
        var cursor_pointer = norm[0];
        var d = ndiffs[cursor_pointer];
        var d_next = ndiffs[cursor_pointer + 1];

        if (d == null) {
          // Text was deleted from end of original string,
          // cursor is now out of bounds in new string
          return diffs;
        } else if (d[0] !== DIFF_EQUAL) {
          // A modification happened at the cursor location.
          // This is the expected outcome, so we can return the original diff.
          return diffs;
        } else {
          if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
            // Case 1)
            // It is possible to perform a naive shift
            ndiffs.splice(cursor_pointer, 2, d_next, d);
            return merge_tuples(ndiffs, cursor_pointer, 2);
          } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
            // Case 2)
            // d[1] is a prefix of d_next[1]
            // We can assume that d_next[0] !== 0, since d[0] === 0
            // Shift edit locations..
            ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
            var suffix = d_next[1].slice(d[1].length);
            if (suffix.length > 0) {
              ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
            }
            return merge_tuples(ndiffs, cursor_pointer, 3);
          } else {
            // Not possible to perform any modification
            return diffs;
          }
        }
      }

      /*
       * Check diff did not split surrogate pairs.
       * Ex. [0, '\uD83D'], [-1, '\uDC36'], [1, '\uDC2F'] -> [-1, '\uD83D\uDC36'], [1, '\uD83D\uDC2F']
       *     '\uD83D\uDC36' === '🐶', '\uD83D\uDC2F' === '🐯'
       *
       * @param {Array} diffs Array of diff tuples
       * @return {Array} Array of diff tuples
       */
      function fix_emoji(diffs) {
        var compact = false;
        var starts_with_pair_end = function starts_with_pair_end(str) {
          return str.charCodeAt(0) >= 0xDC00 && str.charCodeAt(0) <= 0xDFFF;
        };
        var ends_with_pair_start = function ends_with_pair_start(str) {
          return str.charCodeAt(str.length - 1) >= 0xD800 && str.charCodeAt(str.length - 1) <= 0xDBFF;
        };
        for (var i = 2; i < diffs.length; i += 1) {
          if (diffs[i - 2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i - 2][1]) && diffs[i - 1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i - 1][1]) && diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {
            compact = true;

            diffs[i - 1][1] = diffs[i - 2][1].slice(-1) + diffs[i - 1][1];
            diffs[i][1] = diffs[i - 2][1].slice(-1) + diffs[i][1];

            diffs[i - 2][1] = diffs[i - 2][1].slice(0, -1);
          }
        }
        if (!compact) {
          return diffs;
        }
        var fixed_diffs = [];
        for (var i = 0; i < diffs.length; i += 1) {
          if (diffs[i][1].length > 0) {
            fixed_diffs.push(diffs[i]);
          }
        }
        return fixed_diffs;
      }

      /*
       * Try to merge tuples with their neigbors in a given range.
       * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']
       *
       * @param {Array} diffs Array of diff tuples.
       * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).
       * @param {Int} length Number of consecutive elements to check.
       * @return {Array} Array of merged diff tuples.
       */
      function merge_tuples(diffs, start, length) {
        // Check from (start-1) to (start+length).
        for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {
          if (i + 1 < diffs.length) {
            var left_d = diffs[i];
            var right_d = diffs[i + 1];
            if (left_d[0] === right_d[1]) {
              diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
            }
          }
        }
        return diffs;
      }

      /***/
    },
    /* 52 */
    /***/function (module, exports) {

      exports = module.exports = typeof Object.keys === 'function' ? Object.keys : shim;

      exports.shim = shim;
      function shim(obj) {
        var keys = [];
        for (var key in obj) {
          keys.push(key);
        }return keys;
      }

      /***/
    },
    /* 53 */
    /***/function (module, exports) {

      var supportsArgumentsClass = function () {
        return Object.prototype.toString.call(arguments);
      }() == '[object Arguments]';

      exports = module.exports = supportsArgumentsClass ? supported : unsupported;

      exports.supported = supported;
      function supported(object) {
        return Object.prototype.toString.call(object) == '[object Arguments]';
      };

      exports.unsupported = unsupported;
      function unsupported(object) {
        return object && (typeof object === 'undefined' ? 'undefined' : _typeof2(object)) == 'object' && typeof object.length == 'number' && Object.prototype.hasOwnProperty.call(object, 'callee') && !Object.prototype.propertyIsEnumerable.call(object, 'callee') || false;
      };

      /***/
    },
    /* 54 */
    /***/function (module, exports) {

      'use strict';

      var has = Object.prototype.hasOwnProperty,
          prefix = '~';

      /**
       * Constructor to create a storage for our `EE` objects.
       * An `Events` instance is a plain object whose properties are event names.
       *
       * @constructor
       * @api private
       */
      function Events() {}

      //
      // We try to not inherit from `Object.prototype`. In some engines creating an
      // instance in this way is faster than calling `Object.create(null)` directly.
      // If `Object.create(null)` is not supported we prefix the event names with a
      // character to make sure that the built-in object properties are not
      // overridden or used as an attack vector.
      //
      if (Object.create) {
        Events.prototype = Object.create(null);

        //
        // This hack is needed because the `__proto__` property is still inherited in
        // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
        //
        if (!new Events().__proto__) prefix = false;
      }

      /**
       * Representation of a single event listener.
       *
       * @param {Function} fn The listener function.
       * @param {Mixed} context The context to invoke the listener with.
       * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
       * @constructor
       * @api private
       */
      function EE(fn, context, once) {
        this.fn = fn;
        this.context = context;
        this.once = once || false;
      }

      /**
       * Minimal `EventEmitter` interface that is molded against the Node.js
       * `EventEmitter` interface.
       *
       * @constructor
       * @api public
       */
      function EventEmitter() {
        this._events = new Events();
        this._eventsCount = 0;
      }

      /**
       * Return an array listing the events for which the emitter has registered
       * listeners.
       *
       * @returns {Array}
       * @api public
       */
      EventEmitter.prototype.eventNames = function eventNames() {
        var names = [],
            events,
            name;

        if (this._eventsCount === 0) return names;

        for (name in events = this._events) {
          if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
        }

        if (Object.getOwnPropertySymbols) {
          return names.concat(Object.getOwnPropertySymbols(events));
        }

        return names;
      };

      /**
       * Return the listeners registered for a given event.
       *
       * @param {String|Symbol} event The event name.
       * @param {Boolean} exists Only check if there are listeners.
       * @returns {Array|Boolean}
       * @api public
       */
      EventEmitter.prototype.listeners = function listeners(event, exists) {
        var evt = prefix ? prefix + event : event,
            available = this._events[evt];

        if (exists) return !!available;
        if (!available) return [];
        if (available.fn) return [available.fn];

        for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
          ee[i] = available[i].fn;
        }

        return ee;
      };

      /**
       * Calls each of the listeners registered for a given event.
       *
       * @param {String|Symbol} event The event name.
       * @returns {Boolean} `true` if the event had listeners, else `false`.
       * @api public
       */
      EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
        var evt = prefix ? prefix + event : event;

        if (!this._events[evt]) return false;

        var listeners = this._events[evt],
            len = arguments.length,
            args,
            i;

        if (listeners.fn) {
          if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

          switch (len) {
            case 1:
              return listeners.fn.call(listeners.context), true;
            case 2:
              return listeners.fn.call(listeners.context, a1), true;
            case 3:
              return listeners.fn.call(listeners.context, a1, a2), true;
            case 4:
              return listeners.fn.call(listeners.context, a1, a2, a3), true;
            case 5:
              return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
            case 6:
              return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
          }

          for (i = 1, args = new Array(len - 1); i < len; i++) {
            args[i - 1] = arguments[i];
          }

          listeners.fn.apply(listeners.context, args);
        } else {
          var length = listeners.length,
              j;

          for (i = 0; i < length; i++) {
            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

            switch (len) {
              case 1:
                listeners[i].fn.call(listeners[i].context);break;
              case 2:
                listeners[i].fn.call(listeners[i].context, a1);break;
              case 3:
                listeners[i].fn.call(listeners[i].context, a1, a2);break;
              case 4:
                listeners[i].fn.call(listeners[i].context, a1, a2, a3);break;
              default:
                if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
                  args[j - 1] = arguments[j];
                }

                listeners[i].fn.apply(listeners[i].context, args);
            }
          }
        }

        return true;
      };

      /**
       * Add a listener for a given event.
       *
       * @param {String|Symbol} event The event name.
       * @param {Function} fn The listener function.
       * @param {Mixed} [context=this] The context to invoke the listener with.
       * @returns {EventEmitter} `this`.
       * @api public
       */
      EventEmitter.prototype.on = function on(event, fn, context) {
        var listener = new EE(fn, context || this),
            evt = prefix ? prefix + event : event;

        if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;else if (!this._events[evt].fn) this._events[evt].push(listener);else this._events[evt] = [this._events[evt], listener];

        return this;
      };

      /**
       * Add a one-time listener for a given event.
       *
       * @param {String|Symbol} event The event name.
       * @param {Function} fn The listener function.
       * @param {Mixed} [context=this] The context to invoke the listener with.
       * @returns {EventEmitter} `this`.
       * @api public
       */
      EventEmitter.prototype.once = function once(event, fn, context) {
        var listener = new EE(fn, context || this, true),
            evt = prefix ? prefix + event : event;

        if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;else if (!this._events[evt].fn) this._events[evt].push(listener);else this._events[evt] = [this._events[evt], listener];

        return this;
      };

      /**
       * Remove the listeners of a given event.
       *
       * @param {String|Symbol} event The event name.
       * @param {Function} fn Only remove the listeners that match this function.
       * @param {Mixed} context Only remove the listeners that have this context.
       * @param {Boolean} once Only remove one-time listeners.
       * @returns {EventEmitter} `this`.
       * @api public
       */
      EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
        var evt = prefix ? prefix + event : event;

        if (!this._events[evt]) return this;
        if (!fn) {
          if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
          return this;
        }

        var listeners = this._events[evt];

        if (listeners.fn) {
          if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
            if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
          }
        } else {
          for (var i = 0, events = [], length = listeners.length; i < length; i++) {
            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
              events.push(listeners[i]);
            }
          }

          //
          // Reset the array, or remove it completely if we have no more listeners.
          //
          if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;else if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
        }

        return this;
      };

      /**
       * Remove all listeners, or those of the specified event.
       *
       * @param {String|Symbol} [event] The event name.
       * @returns {EventEmitter} `this`.
       * @api public
       */
      EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
        var evt;

        if (event) {
          evt = prefix ? prefix + event : event;
          if (this._events[evt]) {
            if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
          }
        } else {
          this._events = new Events();
          this._eventsCount = 0;
        }

        return this;
      };

      //
      // Alias methods names because people roll like that.
      //
      EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
      EventEmitter.prototype.addListener = EventEmitter.prototype.on;

      //
      // This function doesn't apply anymore.
      //
      EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
        return this;
      };

      //
      // Expose the prefix.
      //
      EventEmitter.prefixed = prefix;

      //
      // Allow `EventEmitter` to be imported as module namespace.
      //
      EventEmitter.EventEmitter = EventEmitter;

      //
      // Expose the module.
      //
      if ('undefined' !== typeof module) {
        module.exports = EventEmitter;
      }

      /***/
    },
    /* 55 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.matchText = exports.matchSpacing = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports.default = undefined;

      var _typeof = typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol" ? function (obj) {
        return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      } : function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);
      };

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _extend2 = __webpack_require__(3);

      var _extend3 = _interopRequireDefault(_extend2);

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _logger = __webpack_require__(10);

      var _logger2 = _interopRequireDefault(_logger);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      var _align = __webpack_require__(36);

      var _background = __webpack_require__(37);

      var _code = __webpack_require__(13);

      var _code2 = _interopRequireDefault(_code);

      var _color = __webpack_require__(26);

      var _direction = __webpack_require__(38);

      var _font = __webpack_require__(39);

      var _size = __webpack_require__(40);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var debug = (0, _logger2.default)('quill:clipboard');

      var DOM_KEY = '__ql-matcher';

      var CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['b', matchAlias.bind(matchAlias, 'bold')], ['i', matchAlias.bind(matchAlias, 'italic')], ['style', matchIgnore]];

      var ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function (memo, attr) {
        memo[attr.keyName] = attr;
        return memo;
      }, {});

      var STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function (memo, attr) {
        memo[attr.keyName] = attr;
        return memo;
      }, {});

      var Clipboard = function (_Module) {
        _inherits(Clipboard, _Module);

        function Clipboard(quill, options) {
          _classCallCheck(this, Clipboard);

          var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this, quill, options));

          _this.quill.root.addEventListener('paste', _this.onPaste.bind(_this));
          _this.container = _this.quill.addContainer('ql-clipboard');
          _this.container.setAttribute('contenteditable', true);
          _this.container.setAttribute('tabindex', -1);
          _this.matchers = [];
          CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function (_ref) {
            var _ref2 = _slicedToArray(_ref, 2),
                selector = _ref2[0],
                matcher = _ref2[1];

            if (!options.matchVisual && matcher === matchSpacing) return;
            _this.addMatcher(selector, matcher);
          });
          return _this;
        }

        _createClass(Clipboard, [{
          key: 'addMatcher',
          value: function addMatcher(selector, matcher) {
            this.matchers.push([selector, matcher]);
          }
        }, {
          key: 'convert',
          value: function convert(html) {
            if (typeof html === 'string') {
              this.container.innerHTML = html.replace(/\>\r?\n +\</g, '><'); // Remove spaces between tags
              return this.convert();
            }
            var formats = this.quill.getFormat(this.quill.selection.savedRange.index);
            if (formats[_code2.default.blotName]) {
              var text = this.container.innerText;
              this.container.innerHTML = '';
              return new _quillDelta2.default().insert(text, _defineProperty({}, _code2.default.blotName, formats[_code2.default.blotName]));
            }

            var _prepareMatching = this.prepareMatching(),
                _prepareMatching2 = _slicedToArray(_prepareMatching, 2),
                elementMatchers = _prepareMatching2[0],
                textMatchers = _prepareMatching2[1];

            var delta = traverse(this.container, elementMatchers, textMatchers);
            // Remove trailing newline
            if (deltaEndsWith(delta, '\n') && delta.ops[delta.ops.length - 1].attributes == null) {
              delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));
            }
            debug.log('convert', this.container.innerHTML, delta);
            this.container.innerHTML = '';
            return delta;
          }
        }, {
          key: 'dangerouslyPasteHTML',
          value: function dangerouslyPasteHTML(index, html) {
            var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _quill2.default.sources.API;

            if (typeof index === 'string') {
              this.quill.setContents(this.convert(index), html);
              this.quill.setSelection(0, _quill2.default.sources.SILENT);
            } else {
              var paste = this.convert(html);
              this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);
              this.quill.setSelection(index + paste.length(), _quill2.default.sources.SILENT);
            }
          }
        }, {
          key: 'onPaste',
          value: function onPaste(e) {
            var _this2 = this;

            if (e.defaultPrevented || !this.quill.isEnabled()) return;
            var range = this.quill.getSelection();
            var delta = new _quillDelta2.default().retain(range.index);
            var scrollTop = this.quill.scrollingContainer.scrollTop;
            this.container.focus();
            this.quill.selection.update(_quill2.default.sources.SILENT);
            setTimeout(function () {
              delta = delta.concat(_this2.convert()).delete(range.length);
              _this2.quill.updateContents(delta, _quill2.default.sources.USER);
              // range.length contributes to delta.length()
              _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);
              _this2.quill.scrollingContainer.scrollTop = scrollTop;
              _this2.quill.focus();
            }, 1);
          }
        }, {
          key: 'prepareMatching',
          value: function prepareMatching() {
            var _this3 = this;

            var elementMatchers = [],
                textMatchers = [];
            this.matchers.forEach(function (pair) {
              var _pair = _slicedToArray(pair, 2),
                  selector = _pair[0],
                  matcher = _pair[1];

              switch (selector) {
                case Node.TEXT_NODE:
                  textMatchers.push(matcher);
                  break;
                case Node.ELEMENT_NODE:
                  elementMatchers.push(matcher);
                  break;
                default:
                  [].forEach.call(_this3.container.querySelectorAll(selector), function (node) {
                    // TODO use weakmap
                    node[DOM_KEY] = node[DOM_KEY] || [];
                    node[DOM_KEY].push(matcher);
                  });
                  break;
              }
            });
            return [elementMatchers, textMatchers];
          }
        }]);

        return Clipboard;
      }(_module2.default);

      Clipboard.DEFAULTS = {
        matchers: [],
        matchVisual: true
      };

      function applyFormat(delta, format, value) {
        if ((typeof format === 'undefined' ? 'undefined' : _typeof(format)) === 'object') {
          return Object.keys(format).reduce(function (delta, key) {
            return applyFormat(delta, key, format[key]);
          }, delta);
        } else {
          return delta.reduce(function (delta, op) {
            if (op.attributes && op.attributes[format]) {
              return delta.push(op);
            } else {
              return delta.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value), op.attributes));
            }
          }, new _quillDelta2.default());
        }
      }

      function computeStyle(node) {
        if (node.nodeType !== Node.ELEMENT_NODE) return {};
        var DOM_KEY = '__ql-computed-style';
        return node[DOM_KEY] || (node[DOM_KEY] = window.getComputedStyle(node));
      }

      function deltaEndsWith(delta, text) {
        var endText = "";
        for (var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i) {
          var op = delta.ops[i];
          if (typeof op.insert !== 'string') break;
          endText = op.insert + endText;
        }
        return endText.slice(-1 * text.length) === text;
      }

      function isLine(node) {
        if (node.childNodes.length === 0) return false; // Exclude embed blocks
        var style = computeStyle(node);
        return ['block', 'list-item'].indexOf(style.display) > -1;
      }

      function traverse(node, elementMatchers, textMatchers) {
        // Post-order
        if (node.nodeType === node.TEXT_NODE) {
          return textMatchers.reduce(function (delta, matcher) {
            return matcher(node, delta);
          }, new _quillDelta2.default());
        } else if (node.nodeType === node.ELEMENT_NODE) {
          return [].reduce.call(node.childNodes || [], function (delta, childNode) {
            var childrenDelta = traverse(childNode, elementMatchers, textMatchers);
            if (childNode.nodeType === node.ELEMENT_NODE) {
              childrenDelta = elementMatchers.reduce(function (childrenDelta, matcher) {
                return matcher(childNode, childrenDelta);
              }, childrenDelta);
              childrenDelta = (childNode[DOM_KEY] || []).reduce(function (childrenDelta, matcher) {
                return matcher(childNode, childrenDelta);
              }, childrenDelta);
            }
            return delta.concat(childrenDelta);
          }, new _quillDelta2.default());
        } else {
          return new _quillDelta2.default();
        }
      }

      function matchAlias(format, node, delta) {
        return applyFormat(delta, format, true);
      }

      function matchAttributor(node, delta) {
        var attributes = _parchment2.default.Attributor.Attribute.keys(node);
        var classes = _parchment2.default.Attributor.Class.keys(node);
        var styles = _parchment2.default.Attributor.Style.keys(node);
        var formats = {};
        attributes.concat(classes).concat(styles).forEach(function (name) {
          var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);
          if (attr != null) {
            formats[attr.attrName] = attr.value(node);
            if (formats[attr.attrName]) return;
          }
          attr = ATTRIBUTE_ATTRIBUTORS[name];
          if (attr != null && (attr.attrName === name || attr.keyName === name)) {
            formats[attr.attrName] = attr.value(node) || undefined;
          }
          attr = STYLE_ATTRIBUTORS[name];
          if (attr != null && (attr.attrName === name || attr.keyName === name)) {
            attr = STYLE_ATTRIBUTORS[name];
            formats[attr.attrName] = attr.value(node) || undefined;
          }
        });
        if (Object.keys(formats).length > 0) {
          delta = applyFormat(delta, formats);
        }
        return delta;
      }

      function matchBlot(node, delta) {
        var match = _parchment2.default.query(node);
        if (match == null) return delta;
        if (match.prototype instanceof _parchment2.default.Embed) {
          var embed = {};
          var value = match.value(node);
          if (value != null) {
            embed[match.blotName] = value;
            delta = new _quillDelta2.default().insert(embed, match.formats(node));
          }
        } else if (typeof match.formats === 'function') {
          delta = applyFormat(delta, match.blotName, match.formats(node));
        }
        return delta;
      }

      function matchBreak(node, delta) {
        if (!deltaEndsWith(delta, '\n')) {
          delta.insert('\n');
        }
        return delta;
      }

      function matchIgnore() {
        return new _quillDelta2.default();
      }

      function matchIndent(node, delta) {
        var match = _parchment2.default.query(node);
        if (match == null || match.blotName !== 'list-item' || !deltaEndsWith(delta, '\n')) {
          return delta;
        }
        var indent = -1,
            parent = node.parentNode;
        while (!parent.classList.contains('ql-clipboard')) {
          if ((_parchment2.default.query(parent) || {}).blotName === 'list') {
            indent += 1;
          }
          parent = parent.parentNode;
        }
        if (indent <= 0) return delta;
        return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent: indent }));
      }

      function matchNewline(node, delta) {
        if (!deltaEndsWith(delta, '\n')) {
          if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {
            delta.insert('\n');
          }
        }
        return delta;
      }

      function matchSpacing(node, delta) {
        if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, '\n\n')) {
          var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);
          if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {
            delta.insert('\n');
          }
        }
        return delta;
      }

      function matchStyles(node, delta) {
        var formats = {};
        var style = node.style || {};
        if (style.fontStyle && computeStyle(node).fontStyle === 'italic') {
          formats.italic = true;
        }
        if (style.fontWeight && (computeStyle(node).fontWeight.startsWith('bold') || parseInt(computeStyle(node).fontWeight) >= 700)) {
          formats.bold = true;
        }
        if (Object.keys(formats).length > 0) {
          delta = applyFormat(delta, formats);
        }
        if (parseFloat(style.textIndent || 0) > 0) {
          // Could be 0.5in
          delta = new _quillDelta2.default().insert('\t').concat(delta);
        }
        return delta;
      }

      function matchText(node, delta) {
        var text = node.data;
        // Word represents empty line with <o:p>&nbsp;</o:p>
        if (node.parentNode.tagName === 'O:P') {
          return delta.insert(text.trim());
        }
        if (text.trim().length === 0 && node.parentNode.classList.contains('ql-clipboard')) {
          return delta;
        }
        if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {
          // eslint-disable-next-line func-style
          var replacer = function replacer(collapse, match) {
            match = match.replace(/[^\u00a0]/g, ''); // \u00a0 is nbsp;
            return match.length < 1 && collapse ? ' ' : match;
          };
          text = text.replace(/\r\n/g, ' ').replace(/\n/g, ' ');
          text = text.replace(/\s\s+/g, replacer.bind(replacer, true)); // collapse whitespace
          if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {
            text = text.replace(/^\s+/, replacer.bind(replacer, false));
          }
          if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {
            text = text.replace(/\s+$/, replacer.bind(replacer, false));
          }
        }
        return delta.insert(text);
      }

      exports.default = Clipboard;
      exports.matchAttributor = matchAttributor;
      exports.matchBlot = matchBlot;
      exports.matchNewline = matchNewline;
      exports.matchSpacing = matchSpacing;
      exports.matchText = matchText;

      /***/
    },
    /* 56 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Bold = function (_Inline) {
        _inherits(Bold, _Inline);

        function Bold() {
          _classCallCheck(this, Bold);

          return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));
        }

        _createClass(Bold, [{
          key: 'optimize',
          value: function optimize(context) {
            _get(Bold.prototype.__proto__ || Object.getPrototypeOf(Bold.prototype), 'optimize', this).call(this, context);
            if (this.domNode.tagName !== this.statics.tagName[0]) {
              this.replaceWith(this.statics.blotName);
            }
          }
        }], [{
          key: 'create',
          value: function create() {
            return _get(Bold.__proto__ || Object.getPrototypeOf(Bold), 'create', this).call(this);
          }
        }, {
          key: 'formats',
          value: function formats() {
            return true;
          }
        }]);

        return Bold;
      }(_inline2.default);

      Bold.blotName = 'bold';
      Bold.tagName = ['STRONG', 'B'];

      exports.default = Bold;

      /***/
    },
    /* 57 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.addControls = exports.default = undefined;

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _quillDelta = __webpack_require__(2);

      var _quillDelta2 = _interopRequireDefault(_quillDelta);

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _logger = __webpack_require__(10);

      var _logger2 = _interopRequireDefault(_logger);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var debug = (0, _logger2.default)('quill:toolbar');

      var Toolbar = function (_Module) {
        _inherits(Toolbar, _Module);

        function Toolbar(quill, options) {
          _classCallCheck(this, Toolbar);

          var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, quill, options));

          if (Array.isArray(_this.options.container)) {
            var container = document.createElement('div');
            addControls(container, _this.options.container);
            quill.container.parentNode.insertBefore(container, quill.container);
            _this.container = container;
          } else if (typeof _this.options.container === 'string') {
            _this.container = document.querySelector(_this.options.container);
          } else {
            _this.container = _this.options.container;
          }
          if (!(_this.container instanceof HTMLElement)) {
            var _ret;

            return _ret = debug.error('Container required for toolbar', _this.options), _possibleConstructorReturn(_this, _ret);
          }
          _this.container.classList.add('ql-toolbar');
          _this.controls = [];
          _this.handlers = {};
          Object.keys(_this.options.handlers).forEach(function (format) {
            _this.addHandler(format, _this.options.handlers[format]);
          });
          [].forEach.call(_this.container.querySelectorAll('button, select'), function (input) {
            _this.attach(input);
          });
          _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (type, range) {
            if (type === _quill2.default.events.SELECTION_CHANGE) {
              _this.update(range);
            }
          });
          _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {
            var _this$quill$selection = _this.quill.selection.getRange(),
                _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),
                range = _this$quill$selection2[0]; // quill.getSelection triggers update


            _this.update(range);
          });
          return _this;
        }

        _createClass(Toolbar, [{
          key: 'addHandler',
          value: function addHandler(format, handler) {
            this.handlers[format] = handler;
          }
        }, {
          key: 'attach',
          value: function attach(input) {
            var _this2 = this;

            var format = [].find.call(input.classList, function (className) {
              return className.indexOf('ql-') === 0;
            });
            if (!format) return;
            format = format.slice('ql-'.length);
            if (input.tagName === 'BUTTON') {
              input.setAttribute('type', 'button');
            }
            if (this.handlers[format] == null) {
              if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {
                debug.warn('ignoring attaching to disabled format', format, input);
                return;
              }
              if (_parchment2.default.query(format) == null) {
                debug.warn('ignoring attaching to nonexistent format', format, input);
                return;
              }
            }
            var eventName = input.tagName === 'SELECT' ? 'change' : 'click';
            input.addEventListener(eventName, function (e) {
              var value = void 0;
              if (input.tagName === 'SELECT') {
                if (input.selectedIndex < 0) return;
                var selected = input.options[input.selectedIndex];
                if (selected.hasAttribute('selected')) {
                  value = false;
                } else {
                  value = selected.value || false;
                }
              } else {
                if (input.classList.contains('ql-active')) {
                  value = false;
                } else {
                  value = input.value || !input.hasAttribute('value');
                }
                e.preventDefault();
              }
              _this2.quill.focus();

              var _quill$selection$getR = _this2.quill.selection.getRange(),
                  _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1),
                  range = _quill$selection$getR2[0];

              if (_this2.handlers[format] != null) {
                _this2.handlers[format].call(_this2, value);
              } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {
                value = prompt('Enter ' + format);
                if (!value) return;
                _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value)), _quill2.default.sources.USER);
              } else {
                _this2.quill.format(format, value, _quill2.default.sources.USER);
              }
              _this2.update(range);
            });
            // TODO use weakmap
            this.controls.push([format, input]);
          }
        }, {
          key: 'update',
          value: function update(range) {
            var formats = range == null ? {} : this.quill.getFormat(range);
            this.controls.forEach(function (pair) {
              var _pair = _slicedToArray(pair, 2),
                  format = _pair[0],
                  input = _pair[1];

              if (input.tagName === 'SELECT') {
                var option = void 0;
                if (range == null) {
                  option = null;
                } else if (formats[format] == null) {
                  option = input.querySelector('option[selected]');
                } else if (!Array.isArray(formats[format])) {
                  var value = formats[format];
                  if (typeof value === 'string') {
                    value = value.replace(/\"/g, '\\"');
                  }
                  option = input.querySelector('option[value="' + value + '"]');
                }
                if (option == null) {
                  input.value = ''; // TODO make configurable?
                  input.selectedIndex = -1;
                } else {
                  option.selected = true;
                }
              } else {
                if (range == null) {
                  input.classList.remove('ql-active');
                } else if (input.hasAttribute('value')) {
                  // both being null should match (default values)
                  // '1' should match with 1 (headers)
                  var isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');
                  input.classList.toggle('ql-active', isActive);
                } else {
                  input.classList.toggle('ql-active', formats[format] != null);
                }
              }
            });
          }
        }]);

        return Toolbar;
      }(_module2.default);

      Toolbar.DEFAULTS = {};

      function addButton(container, format, value) {
        var input = document.createElement('button');
        input.setAttribute('type', 'button');
        input.classList.add('ql-' + format);
        if (value != null) {
          input.value = value;
        }
        container.appendChild(input);
      }

      function addControls(container, groups) {
        if (!Array.isArray(groups[0])) {
          groups = [groups];
        }
        groups.forEach(function (controls) {
          var group = document.createElement('span');
          group.classList.add('ql-formats');
          controls.forEach(function (control) {
            if (typeof control === 'string') {
              addButton(group, control);
            } else {
              var format = Object.keys(control)[0];
              var value = control[format];
              if (Array.isArray(value)) {
                addSelect(group, format, value);
              } else {
                addButton(group, format, value);
              }
            }
          });
          container.appendChild(group);
        });
      }

      function addSelect(container, format, values) {
        var input = document.createElement('select');
        input.classList.add('ql-' + format);
        values.forEach(function (value) {
          var option = document.createElement('option');
          if (value !== false) {
            option.setAttribute('value', value);
          } else {
            option.setAttribute('selected', 'selected');
          }
          input.appendChild(option);
        });
        container.appendChild(input);
      }

      Toolbar.DEFAULTS = {
        container: null,
        handlers: {
          clean: function clean() {
            var _this3 = this;

            var range = this.quill.getSelection();
            if (range == null) return;
            if (range.length == 0) {
              var formats = this.quill.getFormat();
              Object.keys(formats).forEach(function (name) {
                // Clean functionality in existing apps only clean inline formats
                if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {
                  _this3.quill.format(name, false);
                }
              });
            } else {
              this.quill.removeFormat(range, _quill2.default.sources.USER);
            }
          },
          direction: function direction(value) {
            var align = this.quill.getFormat()['align'];
            if (value === 'rtl' && align == null) {
              this.quill.format('align', 'right', _quill2.default.sources.USER);
            } else if (!value && align === 'right') {
              this.quill.format('align', false, _quill2.default.sources.USER);
            }
            this.quill.format('direction', value, _quill2.default.sources.USER);
          },
          indent: function indent(value) {
            var range = this.quill.getSelection();
            var formats = this.quill.getFormat(range);
            var indent = parseInt(formats.indent || 0);
            if (value === '+1' || value === '-1') {
              var modifier = value === '+1' ? 1 : -1;
              if (formats.direction === 'rtl') modifier *= -1;
              this.quill.format('indent', indent + modifier, _quill2.default.sources.USER);
            }
          },
          link: function link(value) {
            if (value === true) {
              value = prompt('Enter link URL:');
            }
            this.quill.format('link', value, _quill2.default.sources.USER);
          },
          list: function list(value) {
            var range = this.quill.getSelection();
            var formats = this.quill.getFormat(range);
            if (value === 'check') {
              if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {
                this.quill.format('list', false, _quill2.default.sources.USER);
              } else {
                this.quill.format('list', 'unchecked', _quill2.default.sources.USER);
              }
            } else {
              this.quill.format('list', value, _quill2.default.sources.USER);
            }
          }
        }
      };

      exports.default = Toolbar;
      exports.addControls = addControls;

      /***/
    },
    /* 58 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <polyline class=\"ql-even ql-stroke\" points=\"5 7 3 9 5 11\"></polyline> <polyline class=\"ql-even ql-stroke\" points=\"13 7 15 9 13 11\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>";

      /***/
    },
    /* 59 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _picker = __webpack_require__(28);

      var _picker2 = _interopRequireDefault(_picker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var ColorPicker = function (_Picker) {
        _inherits(ColorPicker, _Picker);

        function ColorPicker(select, label) {
          _classCallCheck(this, ColorPicker);

          var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, select));

          _this.label.innerHTML = label;
          _this.container.classList.add('ql-color-picker');
          [].slice.call(_this.container.querySelectorAll('.ql-picker-item'), 0, 7).forEach(function (item) {
            item.classList.add('ql-primary');
          });
          return _this;
        }

        _createClass(ColorPicker, [{
          key: 'buildItem',
          value: function buildItem(option) {
            var item = _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'buildItem', this).call(this, option);
            item.style.backgroundColor = option.getAttribute('value') || '';
            return item;
          }
        }, {
          key: 'selectItem',
          value: function selectItem(item, trigger) {
            _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'selectItem', this).call(this, item, trigger);
            var colorLabel = this.label.querySelector('.ql-color-label');
            var value = item ? item.getAttribute('data-value') || '' : '';
            if (colorLabel) {
              if (colorLabel.tagName === 'line') {
                colorLabel.style.stroke = value;
              } else {
                colorLabel.style.fill = value;
              }
            }
          }
        }]);

        return ColorPicker;
      }(_picker2.default);

      exports.default = ColorPicker;

      /***/
    },
    /* 60 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _picker = __webpack_require__(28);

      var _picker2 = _interopRequireDefault(_picker);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var IconPicker = function (_Picker) {
        _inherits(IconPicker, _Picker);

        function IconPicker(select, icons) {
          _classCallCheck(this, IconPicker);

          var _this = _possibleConstructorReturn(this, (IconPicker.__proto__ || Object.getPrototypeOf(IconPicker)).call(this, select));

          _this.container.classList.add('ql-icon-picker');
          [].forEach.call(_this.container.querySelectorAll('.ql-picker-item'), function (item) {
            item.innerHTML = icons[item.getAttribute('data-value') || ''];
          });
          _this.defaultItem = _this.container.querySelector('.ql-selected');
          _this.selectItem(_this.defaultItem);
          return _this;
        }

        _createClass(IconPicker, [{
          key: 'selectItem',
          value: function selectItem(item, trigger) {
            _get(IconPicker.prototype.__proto__ || Object.getPrototypeOf(IconPicker.prototype), 'selectItem', this).call(this, item, trigger);
            item = item || this.defaultItem;
            this.label.innerHTML = item.innerHTML;
          }
        }]);

        return IconPicker;
      }(_picker2.default);

      exports.default = IconPicker;

      /***/
    },
    /* 61 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      var Tooltip = function () {
        function Tooltip(quill, boundsContainer) {
          var _this = this;

          _classCallCheck(this, Tooltip);

          this.quill = quill;
          this.boundsContainer = boundsContainer || document.body;
          this.root = quill.addContainer('ql-tooltip');
          this.root.innerHTML = this.constructor.TEMPLATE;
          if (this.quill.root === this.quill.scrollingContainer) {
            this.quill.root.addEventListener('scroll', function () {
              _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + 'px';
            });
          }
          this.hide();
        }

        _createClass(Tooltip, [{
          key: 'hide',
          value: function hide() {
            this.root.classList.add('ql-hidden');
          }
        }, {
          key: 'position',
          value: function position(reference) {
            var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;
            // root.scrollTop should be 0 if scrollContainer !== root
            var top = reference.bottom + this.quill.root.scrollTop;
            this.root.style.left = left + 'px';
            this.root.style.top = top + 'px';
            this.root.classList.remove('ql-flip');
            var containerBounds = this.boundsContainer.getBoundingClientRect();
            var rootBounds = this.root.getBoundingClientRect();
            var shift = 0;
            if (rootBounds.right > containerBounds.right) {
              shift = containerBounds.right - rootBounds.right;
              this.root.style.left = left + shift + 'px';
            }
            if (rootBounds.left < containerBounds.left) {
              shift = containerBounds.left - rootBounds.left;
              this.root.style.left = left + shift + 'px';
            }
            if (rootBounds.bottom > containerBounds.bottom) {
              var height = rootBounds.bottom - rootBounds.top;
              var verticalShift = reference.bottom - reference.top + height;
              this.root.style.top = top - verticalShift + 'px';
              this.root.classList.add('ql-flip');
            }
            return shift;
          }
        }, {
          key: 'show',
          value: function show() {
            this.root.classList.remove('ql-editing');
            this.root.classList.remove('ql-hidden');
          }
        }]);

        return Tooltip;
      }();

      exports.default = Tooltip;

      /***/
    },
    /* 62 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _slicedToArray = function () {
        function sliceIterator(arr, i) {
          var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;_e = err;
          } finally {
            try {
              if (!_n && _i["return"]) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }return _arr;
        }return function (arr, i) {
          if (Array.isArray(arr)) {
            return arr;
          } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
          } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
          }
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      var _emitter = __webpack_require__(8);

      var _emitter2 = _interopRequireDefault(_emitter);

      var _base = __webpack_require__(43);

      var _base2 = _interopRequireDefault(_base);

      var _link = __webpack_require__(27);

      var _link2 = _interopRequireDefault(_link);

      var _selection = __webpack_require__(15);

      var _icons = __webpack_require__(41);

      var _icons2 = _interopRequireDefault(_icons);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var TOOLBAR_CONFIG = [[{ header: ['1', '2', '3', false] }], ['bold', 'italic', 'underline', 'link'], [{ list: 'ordered' }, { list: 'bullet' }], ['clean']];

      var SnowTheme = function (_BaseTheme) {
        _inherits(SnowTheme, _BaseTheme);

        function SnowTheme(quill, options) {
          _classCallCheck(this, SnowTheme);

          if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
            options.modules.toolbar.container = TOOLBAR_CONFIG;
          }

          var _this = _possibleConstructorReturn(this, (SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)).call(this, quill, options));

          _this.quill.container.classList.add('ql-snow');
          return _this;
        }

        _createClass(SnowTheme, [{
          key: 'extendToolbar',
          value: function extendToolbar(toolbar) {
            toolbar.container.classList.add('ql-snow');
            this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);
            this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);
            this.tooltip = new SnowTooltip(this.quill, this.options.bounds);
            if (toolbar.container.querySelector('.ql-link')) {
              this.quill.keyboard.addBinding({ key: 'K', shortKey: true }, function (range, context) {
                toolbar.handlers['link'].call(toolbar, !context.format.link);
              });
            }
          }
        }]);

        return SnowTheme;
      }(_base2.default);

      SnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
        modules: {
          toolbar: {
            handlers: {
              link: function link(value) {
                if (value) {
                  var range = this.quill.getSelection();
                  if (range == null || range.length == 0) return;
                  var preview = this.quill.getText(range);
                  if (/^\S+@\S+\.\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {
                    preview = 'mailto:' + preview;
                  }
                  var tooltip = this.quill.theme.tooltip;
                  tooltip.edit('link', preview);
                } else {
                  this.quill.format('link', false);
                }
              }
            }
          }
        }
      });

      var SnowTooltip = function (_BaseTooltip) {
        _inherits(SnowTooltip, _BaseTooltip);

        function SnowTooltip(quill, bounds) {
          _classCallCheck(this, SnowTooltip);

          var _this2 = _possibleConstructorReturn(this, (SnowTooltip.__proto__ || Object.getPrototypeOf(SnowTooltip)).call(this, quill, bounds));

          _this2.preview = _this2.root.querySelector('a.ql-preview');
          return _this2;
        }

        _createClass(SnowTooltip, [{
          key: 'listen',
          value: function listen() {
            var _this3 = this;

            _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'listen', this).call(this);
            this.root.querySelector('a.ql-action').addEventListener('click', function (event) {
              if (_this3.root.classList.contains('ql-editing')) {
                _this3.save();
              } else {
                _this3.edit('link', _this3.preview.textContent);
              }
              event.preventDefault();
            });
            this.root.querySelector('a.ql-remove').addEventListener('click', function (event) {
              if (_this3.linkRange != null) {
                var range = _this3.linkRange;
                _this3.restoreFocus();
                _this3.quill.formatText(range, 'link', false, _emitter2.default.sources.USER);
                delete _this3.linkRange;
              }
              event.preventDefault();
              _this3.hide();
            });
            this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function (range, oldRange, source) {
              if (range == null) return;
              if (range.length === 0 && source === _emitter2.default.sources.USER) {
                var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index),
                    _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
                    link = _quill$scroll$descend2[0],
                    offset = _quill$scroll$descend2[1];

                if (link != null) {
                  _this3.linkRange = new _selection.Range(range.index - offset, link.length());
                  var preview = _link2.default.formats(link.domNode);
                  _this3.preview.textContent = preview;
                  _this3.preview.setAttribute('href', preview);
                  _this3.show();
                  _this3.position(_this3.quill.getBounds(_this3.linkRange));
                  return;
                }
              } else {
                delete _this3.linkRange;
              }
              _this3.hide();
            });
          }
        }, {
          key: 'show',
          value: function show() {
            _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'show', this).call(this);
            this.root.removeAttribute('data-mode');
          }
        }]);

        return SnowTooltip;
      }(_base.BaseTooltip);

      SnowTooltip.TEMPLATE = ['<a class="ql-preview" target="_blank" href="about:blank"></a>', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-action"></a>', '<a class="ql-remove"></a>'].join('');

      exports.default = SnowTheme;

      /***/
    },
    /* 63 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _core = __webpack_require__(29);

      var _core2 = _interopRequireDefault(_core);

      var _align = __webpack_require__(36);

      var _direction = __webpack_require__(38);

      var _indent = __webpack_require__(64);

      var _blockquote = __webpack_require__(65);

      var _blockquote2 = _interopRequireDefault(_blockquote);

      var _header = __webpack_require__(66);

      var _header2 = _interopRequireDefault(_header);

      var _list = __webpack_require__(67);

      var _list2 = _interopRequireDefault(_list);

      var _background = __webpack_require__(37);

      var _color = __webpack_require__(26);

      var _font = __webpack_require__(39);

      var _size = __webpack_require__(40);

      var _bold = __webpack_require__(56);

      var _bold2 = _interopRequireDefault(_bold);

      var _italic = __webpack_require__(68);

      var _italic2 = _interopRequireDefault(_italic);

      var _link = __webpack_require__(27);

      var _link2 = _interopRequireDefault(_link);

      var _script = __webpack_require__(69);

      var _script2 = _interopRequireDefault(_script);

      var _strike = __webpack_require__(70);

      var _strike2 = _interopRequireDefault(_strike);

      var _underline = __webpack_require__(71);

      var _underline2 = _interopRequireDefault(_underline);

      var _image = __webpack_require__(72);

      var _image2 = _interopRequireDefault(_image);

      var _video = __webpack_require__(73);

      var _video2 = _interopRequireDefault(_video);

      var _code = __webpack_require__(13);

      var _code2 = _interopRequireDefault(_code);

      var _formula = __webpack_require__(74);

      var _formula2 = _interopRequireDefault(_formula);

      var _syntax = __webpack_require__(75);

      var _syntax2 = _interopRequireDefault(_syntax);

      var _toolbar = __webpack_require__(57);

      var _toolbar2 = _interopRequireDefault(_toolbar);

      var _icons = __webpack_require__(41);

      var _icons2 = _interopRequireDefault(_icons);

      var _picker = __webpack_require__(28);

      var _picker2 = _interopRequireDefault(_picker);

      var _colorPicker = __webpack_require__(59);

      var _colorPicker2 = _interopRequireDefault(_colorPicker);

      var _iconPicker = __webpack_require__(60);

      var _iconPicker2 = _interopRequireDefault(_iconPicker);

      var _tooltip = __webpack_require__(61);

      var _tooltip2 = _interopRequireDefault(_tooltip);

      var _bubble = __webpack_require__(108);

      var _bubble2 = _interopRequireDefault(_bubble);

      var _snow = __webpack_require__(62);

      var _snow2 = _interopRequireDefault(_snow);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      _core2.default.register({
        'attributors/attribute/direction': _direction.DirectionAttribute,

        'attributors/class/align': _align.AlignClass,
        'attributors/class/background': _background.BackgroundClass,
        'attributors/class/color': _color.ColorClass,
        'attributors/class/direction': _direction.DirectionClass,
        'attributors/class/font': _font.FontClass,
        'attributors/class/size': _size.SizeClass,

        'attributors/style/align': _align.AlignStyle,
        'attributors/style/background': _background.BackgroundStyle,
        'attributors/style/color': _color.ColorStyle,
        'attributors/style/direction': _direction.DirectionStyle,
        'attributors/style/font': _font.FontStyle,
        'attributors/style/size': _size.SizeStyle
      }, true);

      _core2.default.register({
        'formats/align': _align.AlignClass,
        'formats/direction': _direction.DirectionClass,
        'formats/indent': _indent.IndentClass,

        'formats/background': _background.BackgroundStyle,
        'formats/color': _color.ColorStyle,
        'formats/font': _font.FontClass,
        'formats/size': _size.SizeClass,

        'formats/blockquote': _blockquote2.default,
        'formats/code-block': _code2.default,
        'formats/header': _header2.default,
        'formats/list': _list2.default,

        'formats/bold': _bold2.default,
        'formats/code': _code.Code,
        'formats/italic': _italic2.default,
        'formats/link': _link2.default,
        'formats/script': _script2.default,
        'formats/strike': _strike2.default,
        'formats/underline': _underline2.default,

        'formats/image': _image2.default,
        'formats/video': _video2.default,

        'formats/list/item': _list.ListItem,

        'modules/formula': _formula2.default,
        'modules/syntax': _syntax2.default,
        'modules/toolbar': _toolbar2.default,

        'themes/bubble': _bubble2.default,
        'themes/snow': _snow2.default,

        'ui/icons': _icons2.default,
        'ui/picker': _picker2.default,
        'ui/icon-picker': _iconPicker2.default,
        'ui/color-picker': _colorPicker2.default,
        'ui/tooltip': _tooltip2.default
      }, true);

      exports.default = _core2.default;

      /***/
    },
    /* 64 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.IndentClass = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var IdentAttributor = function (_Parchment$Attributor) {
        _inherits(IdentAttributor, _Parchment$Attributor);

        function IdentAttributor() {
          _classCallCheck(this, IdentAttributor);

          return _possibleConstructorReturn(this, (IdentAttributor.__proto__ || Object.getPrototypeOf(IdentAttributor)).apply(this, arguments));
        }

        _createClass(IdentAttributor, [{
          key: 'add',
          value: function add(node, value) {
            if (value === '+1' || value === '-1') {
              var indent = this.value(node) || 0;
              value = value === '+1' ? indent + 1 : indent - 1;
            }
            if (value === 0) {
              this.remove(node);
              return true;
            } else {
              return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'add', this).call(this, node, value);
            }
          }
        }, {
          key: 'canAdd',
          value: function canAdd(node, value) {
            return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, value) || _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, parseInt(value));
          }
        }, {
          key: 'value',
          value: function value(node) {
            return parseInt(_get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'value', this).call(this, node)) || undefined; // Don't return NaN
          }
        }]);

        return IdentAttributor;
      }(_parchment2.default.Attributor.Class);

      var IndentClass = new IdentAttributor('indent', 'ql-indent', {
        scope: _parchment2.default.Scope.BLOCK,
        whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
      });

      exports.IndentClass = IndentClass;

      /***/
    },
    /* 65 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Blockquote = function (_Block) {
        _inherits(Blockquote, _Block);

        function Blockquote() {
          _classCallCheck(this, Blockquote);

          return _possibleConstructorReturn(this, (Blockquote.__proto__ || Object.getPrototypeOf(Blockquote)).apply(this, arguments));
        }

        return Blockquote;
      }(_block2.default);

      Blockquote.blotName = 'blockquote';
      Blockquote.tagName = 'blockquote';

      exports.default = Blockquote;

      /***/
    },
    /* 66 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Header = function (_Block) {
        _inherits(Header, _Block);

        function Header() {
          _classCallCheck(this, Header);

          return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
        }

        _createClass(Header, null, [{
          key: 'formats',
          value: function formats(domNode) {
            return this.tagName.indexOf(domNode.tagName) + 1;
          }
        }]);

        return Header;
      }(_block2.default);

      Header.blotName = 'header';
      Header.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];

      exports.default = Header;

      /***/
    },
    /* 67 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.ListItem = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _block = __webpack_require__(4);

      var _block2 = _interopRequireDefault(_block);

      var _container = __webpack_require__(25);

      var _container2 = _interopRequireDefault(_container);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _defineProperty(obj, key, value) {
        if (key in obj) {
          Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
        } else {
          obj[key] = value;
        }return obj;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var ListItem = function (_Block) {
        _inherits(ListItem, _Block);

        function ListItem() {
          _classCallCheck(this, ListItem);

          return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));
        }

        _createClass(ListItem, [{
          key: 'format',
          value: function format(name, value) {
            if (name === List.blotName && !value) {
              this.replaceWith(_parchment2.default.create(this.statics.scope));
            } else {
              _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'format', this).call(this, name, value);
            }
          }
        }, {
          key: 'remove',
          value: function remove() {
            if (this.prev == null && this.next == null) {
              this.parent.remove();
            } else {
              _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'remove', this).call(this);
            }
          }
        }, {
          key: 'replaceWith',
          value: function replaceWith(name, value) {
            this.parent.isolate(this.offset(this.parent), this.length());
            if (name === this.parent.statics.blotName) {
              this.parent.replaceWith(name, value);
              return this;
            } else {
              this.parent.unwrap();
              return _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'replaceWith', this).call(this, name, value);
            }
          }
        }], [{
          key: 'formats',
          value: function formats(domNode) {
            return domNode.tagName === this.tagName ? undefined : _get(ListItem.__proto__ || Object.getPrototypeOf(ListItem), 'formats', this).call(this, domNode);
          }
        }]);

        return ListItem;
      }(_block2.default);

      ListItem.blotName = 'list-item';
      ListItem.tagName = 'LI';

      var List = function (_Container) {
        _inherits(List, _Container);

        _createClass(List, null, [{
          key: 'create',
          value: function create(value) {
            var tagName = value === 'ordered' ? 'OL' : 'UL';
            var node = _get(List.__proto__ || Object.getPrototypeOf(List), 'create', this).call(this, tagName);
            if (value === 'checked' || value === 'unchecked') {
              node.setAttribute('data-checked', value === 'checked');
            }
            return node;
          }
        }, {
          key: 'formats',
          value: function formats(domNode) {
            if (domNode.tagName === 'OL') return 'ordered';
            if (domNode.tagName === 'UL') {
              if (domNode.hasAttribute('data-checked')) {
                return domNode.getAttribute('data-checked') === 'true' ? 'checked' : 'unchecked';
              } else {
                return 'bullet';
              }
            }
            return undefined;
          }
        }]);

        function List(domNode) {
          _classCallCheck(this, List);

          var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, domNode));

          var listEventHandler = function listEventHandler(e) {
            if (e.target.parentNode !== domNode) return;
            var format = _this2.statics.formats(domNode);
            var blot = _parchment2.default.find(e.target);
            if (format === 'checked') {
              blot.format('list', 'unchecked');
            } else if (format === 'unchecked') {
              blot.format('list', 'checked');
            }
          };

          domNode.addEventListener('touchstart', listEventHandler);
          domNode.addEventListener('mousedown', listEventHandler);
          return _this2;
        }

        _createClass(List, [{
          key: 'format',
          value: function format(name, value) {
            if (this.children.length > 0) {
              this.children.tail.format(name, value);
            }
          }
        }, {
          key: 'formats',
          value: function formats() {
            // We don't inherit from FormatBlot
            return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));
          }
        }, {
          key: 'insertBefore',
          value: function insertBefore(blot, ref) {
            if (blot instanceof ListItem) {
              _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'insertBefore', this).call(this, blot, ref);
            } else {
              var index = ref == null ? this.length() : ref.offset(this);
              var after = this.split(index);
              after.parent.insertBefore(blot, after);
            }
          }
        }, {
          key: 'optimize',
          value: function optimize(context) {
            _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'optimize', this).call(this, context);
            var next = this.next;
            if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute('data-checked') === this.domNode.getAttribute('data-checked')) {
              next.moveChildren(this);
              next.remove();
            }
          }
        }, {
          key: 'replace',
          value: function replace(target) {
            if (target.statics.blotName !== this.statics.blotName) {
              var item = _parchment2.default.create(this.statics.defaultChild);
              target.moveChildren(item);
              this.appendChild(item);
            }
            _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'replace', this).call(this, target);
          }
        }]);

        return List;
      }(_container2.default);

      List.blotName = 'list';
      List.scope = _parchment2.default.Scope.BLOCK_BLOT;
      List.tagName = ['OL', 'UL'];
      List.defaultChild = 'list-item';
      List.allowedChildren = [ListItem];

      exports.ListItem = ListItem;
      exports.default = List;

      /***/
    },
    /* 68 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _bold = __webpack_require__(56);

      var _bold2 = _interopRequireDefault(_bold);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Italic = function (_Bold) {
        _inherits(Italic, _Bold);

        function Italic() {
          _classCallCheck(this, Italic);

          return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));
        }

        return Italic;
      }(_bold2.default);

      Italic.blotName = 'italic';
      Italic.tagName = ['EM', 'I'];

      exports.default = Italic;

      /***/
    },
    /* 69 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Script = function (_Inline) {
        _inherits(Script, _Inline);

        function Script() {
          _classCallCheck(this, Script);

          return _possibleConstructorReturn(this, (Script.__proto__ || Object.getPrototypeOf(Script)).apply(this, arguments));
        }

        _createClass(Script, null, [{
          key: 'create',
          value: function create(value) {
            if (value === 'super') {
              return document.createElement('sup');
            } else if (value === 'sub') {
              return document.createElement('sub');
            } else {
              return _get(Script.__proto__ || Object.getPrototypeOf(Script), 'create', this).call(this, value);
            }
          }
        }, {
          key: 'formats',
          value: function formats(domNode) {
            if (domNode.tagName === 'SUB') return 'sub';
            if (domNode.tagName === 'SUP') return 'super';
            return undefined;
          }
        }]);

        return Script;
      }(_inline2.default);

      Script.blotName = 'script';
      Script.tagName = ['SUB', 'SUP'];

      exports.default = Script;

      /***/
    },
    /* 70 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Strike = function (_Inline) {
        _inherits(Strike, _Inline);

        function Strike() {
          _classCallCheck(this, Strike);

          return _possibleConstructorReturn(this, (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(this, arguments));
        }

        return Strike;
      }(_inline2.default);

      Strike.blotName = 'strike';
      Strike.tagName = 'S';

      exports.default = Strike;

      /***/
    },
    /* 71 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _inline = __webpack_require__(6);

      var _inline2 = _interopRequireDefault(_inline);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var Underline = function (_Inline) {
        _inherits(Underline, _Inline);

        function Underline() {
          _classCallCheck(this, Underline);

          return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).apply(this, arguments));
        }

        return Underline;
      }(_inline2.default);

      Underline.blotName = 'underline';
      Underline.tagName = 'U';

      exports.default = Underline;

      /***/
    },
    /* 72 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _link = __webpack_require__(27);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var ATTRIBUTES = ['alt', 'height', 'width'];

      var Image = function (_Parchment$Embed) {
        _inherits(Image, _Parchment$Embed);

        function Image() {
          _classCallCheck(this, Image);

          return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
        }

        _createClass(Image, [{
          key: 'format',
          value: function format(name, value) {
            if (ATTRIBUTES.indexOf(name) > -1) {
              if (value) {
                this.domNode.setAttribute(name, value);
              } else {
                this.domNode.removeAttribute(name);
              }
            } else {
              _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'format', this).call(this, name, value);
            }
          }
        }], [{
          key: 'create',
          value: function create(value) {
            var node = _get(Image.__proto__ || Object.getPrototypeOf(Image), 'create', this).call(this, value);
            if (typeof value === 'string') {
              node.setAttribute('src', this.sanitize(value));
            }
            return node;
          }
        }, {
          key: 'formats',
          value: function formats(domNode) {
            return ATTRIBUTES.reduce(function (formats, attribute) {
              if (domNode.hasAttribute(attribute)) {
                formats[attribute] = domNode.getAttribute(attribute);
              }
              return formats;
            }, {});
          }
        }, {
          key: 'match',
          value: function match(url) {
            return (/\.(jpe?g|gif|png)$/.test(url) || /^data:image\/.+;base64/.test(url)
            );
          }
        }, {
          key: 'sanitize',
          value: function sanitize(url) {
            return (0, _link.sanitize)(url, ['http', 'https', 'data']) ? url : '//:0';
          }
        }, {
          key: 'value',
          value: function value(domNode) {
            return domNode.getAttribute('src');
          }
        }]);

        return Image;
      }(_parchment2.default.Embed);

      Image.blotName = 'image';
      Image.tagName = 'IMG';

      exports.default = Image;

      /***/
    },
    /* 73 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _block = __webpack_require__(4);

      var _link = __webpack_require__(27);

      var _link2 = _interopRequireDefault(_link);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var ATTRIBUTES = ['height', 'width'];

      var Video = function (_BlockEmbed) {
        _inherits(Video, _BlockEmbed);

        function Video() {
          _classCallCheck(this, Video);

          return _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).apply(this, arguments));
        }

        _createClass(Video, [{
          key: 'format',
          value: function format(name, value) {
            if (ATTRIBUTES.indexOf(name) > -1) {
              if (value) {
                this.domNode.setAttribute(name, value);
              } else {
                this.domNode.removeAttribute(name);
              }
            } else {
              _get(Video.prototype.__proto__ || Object.getPrototypeOf(Video.prototype), 'format', this).call(this, name, value);
            }
          }
        }], [{
          key: 'create',
          value: function create(value) {
            var node = _get(Video.__proto__ || Object.getPrototypeOf(Video), 'create', this).call(this, value);
            node.setAttribute('frameborder', '0');
            node.setAttribute('allowfullscreen', true);
            node.setAttribute('src', this.sanitize(value));
            return node;
          }
        }, {
          key: 'formats',
          value: function formats(domNode) {
            return ATTRIBUTES.reduce(function (formats, attribute) {
              if (domNode.hasAttribute(attribute)) {
                formats[attribute] = domNode.getAttribute(attribute);
              }
              return formats;
            }, {});
          }
        }, {
          key: 'sanitize',
          value: function sanitize(url) {
            return _link2.default.sanitize(url);
          }
        }, {
          key: 'value',
          value: function value(domNode) {
            return domNode.getAttribute('src');
          }
        }]);

        return Video;
      }(_block.BlockEmbed);

      Video.blotName = 'video';
      Video.className = 'ql-video';
      Video.tagName = 'IFRAME';

      exports.default = Video;

      /***/
    },
    /* 74 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.FormulaBlot = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _embed = __webpack_require__(35);

      var _embed2 = _interopRequireDefault(_embed);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var FormulaBlot = function (_Embed) {
        _inherits(FormulaBlot, _Embed);

        function FormulaBlot() {
          _classCallCheck(this, FormulaBlot);

          return _possibleConstructorReturn(this, (FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot)).apply(this, arguments));
        }

        _createClass(FormulaBlot, null, [{
          key: 'create',
          value: function create(value) {
            var node = _get(FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot), 'create', this).call(this, value);
            if (typeof value === 'string') {
              window.katex.render(value, node, {
                throwOnError: false,
                errorColor: '#f00'
              });
              node.setAttribute('data-value', value);
            }
            return node;
          }
        }, {
          key: 'value',
          value: function value(domNode) {
            return domNode.getAttribute('data-value');
          }
        }]);

        return FormulaBlot;
      }(_embed2.default);

      FormulaBlot.blotName = 'formula';
      FormulaBlot.className = 'ql-formula';
      FormulaBlot.tagName = 'SPAN';

      var Formula = function (_Module) {
        _inherits(Formula, _Module);

        _createClass(Formula, null, [{
          key: 'register',
          value: function register() {
            _quill2.default.register(FormulaBlot, true);
          }
        }]);

        function Formula() {
          _classCallCheck(this, Formula);

          var _this2 = _possibleConstructorReturn(this, (Formula.__proto__ || Object.getPrototypeOf(Formula)).call(this));

          if (window.katex == null) {
            throw new Error('Formula module requires KaTeX.');
          }
          return _this2;
        }

        return Formula;
      }(_module2.default);

      exports.FormulaBlot = FormulaBlot;
      exports.default = Formula;

      /***/
    },
    /* 75 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.CodeToken = exports.CodeBlock = undefined;

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _parchment = __webpack_require__(0);

      var _parchment2 = _interopRequireDefault(_parchment);

      var _quill = __webpack_require__(5);

      var _quill2 = _interopRequireDefault(_quill);

      var _module = __webpack_require__(9);

      var _module2 = _interopRequireDefault(_module);

      var _code = __webpack_require__(13);

      var _code2 = _interopRequireDefault(_code);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var SyntaxCodeBlock = function (_CodeBlock) {
        _inherits(SyntaxCodeBlock, _CodeBlock);

        function SyntaxCodeBlock() {
          _classCallCheck(this, SyntaxCodeBlock);

          return _possibleConstructorReturn(this, (SyntaxCodeBlock.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock)).apply(this, arguments));
        }

        _createClass(SyntaxCodeBlock, [{
          key: 'replaceWith',
          value: function replaceWith(block) {
            this.domNode.textContent = this.domNode.textContent;
            this.attach();
            _get(SyntaxCodeBlock.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock.prototype), 'replaceWith', this).call(this, block);
          }
        }, {
          key: 'highlight',
          value: function highlight(_highlight) {
            var text = this.domNode.textContent;
            if (this.cachedText !== text) {
              if (text.trim().length > 0 || this.cachedText == null) {
                this.domNode.innerHTML = _highlight(text);
                this.domNode.normalize();
                this.attach();
              }
              this.cachedText = text;
            }
          }
        }]);

        return SyntaxCodeBlock;
      }(_code2.default);

      SyntaxCodeBlock.className = 'ql-syntax';

      var CodeToken = new _parchment2.default.Attributor.Class('token', 'hljs', {
        scope: _parchment2.default.Scope.INLINE
      });

      var Syntax = function (_Module) {
        _inherits(Syntax, _Module);

        _createClass(Syntax, null, [{
          key: 'register',
          value: function register() {
            _quill2.default.register(CodeToken, true);
            _quill2.default.register(SyntaxCodeBlock, true);
          }
        }]);

        function Syntax(quill, options) {
          _classCallCheck(this, Syntax);

          var _this2 = _possibleConstructorReturn(this, (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(this, quill, options));

          if (typeof _this2.options.highlight !== 'function') {
            throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');
          }
          var timer = null;
          _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {
            clearTimeout(timer);
            timer = setTimeout(function () {
              _this2.highlight();
              timer = null;
            }, _this2.options.interval);
          });
          _this2.highlight();
          return _this2;
        }

        _createClass(Syntax, [{
          key: 'highlight',
          value: function highlight() {
            var _this3 = this;

            if (this.quill.selection.composing) return;
            this.quill.update(_quill2.default.sources.USER);
            var range = this.quill.getSelection();
            this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function (code) {
              code.highlight(_this3.options.highlight);
            });
            this.quill.update(_quill2.default.sources.SILENT);
            if (range != null) {
              this.quill.setSelection(range, _quill2.default.sources.SILENT);
            }
          }
        }]);

        return Syntax;
      }(_module2.default);

      Syntax.DEFAULTS = {
        highlight: function () {
          if (window.hljs == null) return null;
          return function (text) {
            var result = window.hljs.highlightAuto(text);
            return result.value;
          };
        }(),
        interval: 1000
      };

      exports.CodeBlock = SyntaxCodeBlock;
      exports.CodeToken = CodeToken;
      exports.default = Syntax;

      /***/
    },
    /* 76 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>";

      /***/
    },
    /* 77 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>";

      /***/
    },
    /* 78 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>";

      /***/
    },
    /* 79 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>";

      /***/
    },
    /* 80 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <g class=\"ql-fill ql-color-label\"> <polygon points=\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\"6.817 5 6 5 6 6 6.38 6 6.817 5\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\"4.63 10 4 10 4 11 4.192 11 4.63 10\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\"12 6.868 12 6 11.62 6 12 6.868\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\"12.933 9 13 9 13 8 12.495 8 12.933 9\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\"5.5 13 9 5 12.5 13\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>";

      /***/
    },
    /* 81 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=4 y=5></rect> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=11 y=5></rect> <path class=\"ql-even ql-fill ql-stroke\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\"ql-even ql-fill ql-stroke\" d=M14,8c0,4.031-3,5-3,5></path> </svg>";

      /***/
    },
    /* 82 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>";

      /***/
    },
    /* 83 */
    /***/function (module, exports) {

      module.exports = "<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>";

      /***/
    },
    /* 84 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=\"ql-color-label ql-stroke ql-transparent\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\"5.5 11 9 3 12.5 11\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>";

      /***/
    },
    /* 85 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"3 11 5 9 3 7 3 11\"></polygon> <line class=\"ql-stroke ql-fill\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>";

      /***/
    },
    /* 86 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"15 12 13 10 15 8 15 12\"></polygon> <line class=\"ql-stroke ql-fill\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>";

      /***/
    },
    /* 87 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>";

      /***/
    },
    /* 88 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>";

      /***/
    },
    /* 89 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>";

      /***/
    },
    /* 90 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\"translate(24 18) rotate(-180)\"/> </svg>";

      /***/
    },
    /* 91 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>";

      /***/
    },
    /* 92 */
    /***/function (module, exports) {

      module.exports = "<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>";

      /***/
    },
    /* 93 */
    /***/function (module, exports) {

      module.exports = "<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>";

      /***/
    },
    /* 94 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>";

      /***/
    },
    /* 95 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\"ql-even ql-fill\" points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>";

      /***/
    },
    /* 96 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\"ql-fill ql-stroke\" points=\"3 7 3 11 5 9 3 7\"></polyline> </svg>";

      /***/
    },
    /* 97 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"5 7 5 11 3 9 5 7\"></polyline> </svg>";

      /***/
    },
    /* 98 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\"ql-even ql-stroke\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\"ql-even ql-stroke\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>";

      /***/
    },
    /* 99 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\"ql-stroke ql-thin\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\"ql-stroke ql-thin\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\"ql-stroke ql-thin\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>";

      /***/
    },
    /* 100 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>";

      /***/
    },
    /* 101 */
    /***/function (module, exports) {

      module.exports = "<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\"3 4 4 5 6 3\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\"3 14 4 15 6 13\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"3 9 4 10 6 8\"></polyline> </svg>";

      /***/
    },
    /* 102 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>";

      /***/
    },
    /* 103 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>";

      /***/
    },
    /* 104 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=\"ql-stroke ql-thin\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>";

      /***/
    },
    /* 105 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>";

      /***/
    },
    /* 106 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>";

      /***/
    },
    /* 107 */
    /***/function (module, exports) {

      module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=ql-stroke points=\"7 11 9 13 11 11 7 11\"></polygon> <polygon class=ql-stroke points=\"7 7 9 5 11 7 7 7\"></polygon> </svg>";

      /***/
    },
    /* 108 */
    /***/function (module, exports, __webpack_require__) {

      "use strict";

      Object.defineProperty(exports, "__esModule", {
        value: true
      });
      exports.default = exports.BubbleTooltip = undefined;

      var _get = function get(object, property, receiver) {
        if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
          var parent = Object.getPrototypeOf(object);if (parent === null) {
            return undefined;
          } else {
            return get(parent, property, receiver);
          }
        } else if ("value" in desc) {
          return desc.value;
        } else {
          var getter = desc.get;if (getter === undefined) {
            return undefined;
          }return getter.call(receiver);
        }
      };

      var _createClass = function () {
        function defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
          }
        }return function (Constructor, protoProps, staticProps) {
          if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
        };
      }();

      var _extend = __webpack_require__(3);

      var _extend2 = _interopRequireDefault(_extend);

      var _emitter = __webpack_require__(8);

      var _emitter2 = _interopRequireDefault(_emitter);

      var _base = __webpack_require__(43);

      var _base2 = _interopRequireDefault(_base);

      var _selection = __webpack_require__(15);

      var _icons = __webpack_require__(41);

      var _icons2 = _interopRequireDefault(_icons);

      function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : { default: obj };
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _possibleConstructorReturn(self, call) {
        if (!self) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof2(call)) === "object" || typeof call === "function") ? call : self;
      }

      function _inherits(subClass, superClass) {
        if (typeof superClass !== "function" && superClass !== null) {
          throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof2(superClass)));
        }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
      }

      var TOOLBAR_CONFIG = [['bold', 'italic', 'link'], [{ header: 1 }, { header: 2 }, 'blockquote']];

      var BubbleTheme = function (_BaseTheme) {
        _inherits(BubbleTheme, _BaseTheme);

        function BubbleTheme(quill, options) {
          _classCallCheck(this, BubbleTheme);

          if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
            options.modules.toolbar.container = TOOLBAR_CONFIG;
          }

          var _this = _possibleConstructorReturn(this, (BubbleTheme.__proto__ || Object.getPrototypeOf(BubbleTheme)).call(this, quill, options));

          _this.quill.container.classList.add('ql-bubble');
          return _this;
        }

        _createClass(BubbleTheme, [{
          key: 'extendToolbar',
          value: function extendToolbar(toolbar) {
            this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);
            this.tooltip.root.appendChild(toolbar.container);
            this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);
            this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);
          }
        }]);

        return BubbleTheme;
      }(_base2.default);

      BubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
        modules: {
          toolbar: {
            handlers: {
              link: function link(value) {
                if (!value) {
                  this.quill.format('link', false);
                } else {
                  this.quill.theme.tooltip.edit();
                }
              }
            }
          }
        }
      });

      var BubbleTooltip = function (_BaseTooltip) {
        _inherits(BubbleTooltip, _BaseTooltip);

        function BubbleTooltip(quill, bounds) {
          _classCallCheck(this, BubbleTooltip);

          var _this2 = _possibleConstructorReturn(this, (BubbleTooltip.__proto__ || Object.getPrototypeOf(BubbleTooltip)).call(this, quill, bounds));

          _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function (type, range, oldRange, source) {
            if (type !== _emitter2.default.events.SELECTION_CHANGE) return;
            if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {
              _this2.show();
              // Lock our width so we will expand beyond our offsetParent boundaries
              _this2.root.style.left = '0px';
              _this2.root.style.width = '';
              _this2.root.style.width = _this2.root.offsetWidth + 'px';
              var lines = _this2.quill.getLines(range.index, range.length);
              if (lines.length === 1) {
                _this2.position(_this2.quill.getBounds(range));
              } else {
                var lastLine = lines[lines.length - 1];
                var index = _this2.quill.getIndex(lastLine);
                var length = Math.min(lastLine.length() - 1, range.index + range.length - index);
                var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));
                _this2.position(_bounds);
              }
            } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {
              _this2.hide();
            }
          });
          return _this2;
        }

        _createClass(BubbleTooltip, [{
          key: 'listen',
          value: function listen() {
            var _this3 = this;

            _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'listen', this).call(this);
            this.root.querySelector('.ql-close').addEventListener('click', function () {
              _this3.root.classList.remove('ql-editing');
            });
            this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function () {
              // Let selection be restored by toolbar handlers before repositioning
              setTimeout(function () {
                if (_this3.root.classList.contains('ql-hidden')) return;
                var range = _this3.quill.getSelection();
                if (range != null) {
                  _this3.position(_this3.quill.getBounds(range));
                }
              }, 1);
            });
          }
        }, {
          key: 'cancel',
          value: function cancel() {
            this.show();
          }
        }, {
          key: 'position',
          value: function position(reference) {
            var shift = _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'position', this).call(this, reference);
            var arrow = this.root.querySelector('.ql-tooltip-arrow');
            arrow.style.marginLeft = '';
            if (shift === 0) return shift;
            arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + 'px';
          }
        }]);

        return BubbleTooltip;
      }(_base.BaseTooltip);

      BubbleTooltip.TEMPLATE = ['<span class="ql-tooltip-arrow"></span>', '<div class="ql-tooltip-editor">', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-close"></a>', '</div>'].join('');

      exports.BubbleTooltip = BubbleTooltip;
      exports.default = BubbleTheme;

      /***/
    },
    /* 109 */
    /***/function (module, exports, __webpack_require__) {

      module.exports = __webpack_require__(63);

      /***/
    }]
    /******/)["default"]
  );
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298).Buffer, __webpack_require__(21)(module)))

/***/ }),
/* 132 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RSmartRender_RSmartRender_vue__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__universal_map__ = __webpack_require__(305);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__directives_resize__ = __webpack_require__(8);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };




// Directives


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'r-map',

  components: {
    RSmartRender: __WEBPACK_IMPORTED_MODULE_0__RSmartRender_RSmartRender_vue__["a" /* default */]
  },

  directives: {
    Resize: __WEBPACK_IMPORTED_MODULE_2__directives_resize__["a" /* default */]
  },

  props: {
    apiKey: String,
    provider: {
      type: String,
      default: 'yandex'
    },
    width: {
      type: [String, Number],
      default: function _default() {
        return '100%';
      }
    },
    height: {
      type: [String, Number],
      default: function _default() {
        return '300px';
      }
    },
    center: {
      type: Array,
      default: function _default() {
        return [55.76, 37.64];
      } // Moscow
    },
    zoom: {
      type: Number,
      default: 10
    },
    points: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    autoCenter: {
      type: Boolean,
      default: true
    },
    controls: {
      type: Array,
      default: function _default() {
        return ['zoom', 'fullscreen'];
      }
    },
    query: {
      type: String,
      default: null
    },
    queryResponseLimit: {
      type: Number,
      default: 5
    },
    allowAdd: Boolean,
    pointResolving: Boolean,
    visibilityObserver: Boolean,
    options: {
      type: Object,
      default: function _default() {}
    }
  },

  data: function data() {
    return {
      mapDomId: 'empty',
      loaded: false,
      created: false,
      destroyed: false,
      nonreactive: new Map()
    };
  },

  methods: {
    onRender: function onRender() {
      var _this = this;

      var map = new __WEBPACK_IMPORTED_MODULE_1__universal_map__["a" /* UniversalMap */]({
        provider: this.provider,
        apiKey: this.apiKey
      });

      this.mapDomId = map.manager.nextDomId;

      this.nonreactive.set('map', map);
      this.nonreactive.set('manager', map.manager);

      this.manager.load().then(function (_) {
        _this.$nextTick(function (_) {
          return _this.onSdkLoaded();
        });
      });
    },
    onResize: function onResize() {
      if (!this.created) {
        return;
      }

      this.fitToViewport();

      if (this.autoCenter) {
        this.updateOptimalCenterAndZoom();
      }
    },
    onSdkLoaded: function onSdkLoaded() {
      if (this.destroyed) {
        return;
      }

      this.nonreactive.set('sdk', this.manager.sdk);

      this.loaded = true;

      this.createMap();

      if (this.points && Array.isArray(this.points)) {
        this.createPlacemarks();

        if (this.autoCenter) {
          this.updateOptimalCenterAndZoom();
        }
      }

      this.toggleAllowAdd(this.allowAdd);

      if (this.query) {
        this.searchQuery();
      }

      this.$emit('loaded', this.map);
    },
    getMap: function getMap() {
      return this.nonreactive.get('map');
    },
    createMap: function createMap() {
      var map = this.getMap();

      map.createMap(this.domIdentifier, _extends({
        center: this.center,
        zoom: this.zoom,
        controls: this.controls,
        avoidFractionalZoom: false,
        suppressMapOpenBlock: true
      }, this.options || {}));

      this.created = true;
    },
    createPlacemarks: function createPlacemarks() {
      var map = this.getMap();
      map.createPlacemarks(this.points);
    },
    clearPlacemarks: function clearPlacemarks() {
      var map = this.getMap();
      map.clearPlacemarks();
    },
    fitToViewport: function fitToViewport() {
      var map = this.getMap();
      map.fitToViewport();
    },
    setControls: function setControls() {
      var map = this.getMap();
      map.setControls(this.controls);
    },
    updateOptimalCenterAndZoom: function updateOptimalCenterAndZoom() {
      var map = this.getMap();
      map.updateOptimalCenterAndZoom(this.points || []);
    },
    toggleAllowAdd: function toggleAllowAdd() {
      var allowAdd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (allowAdd) {
        this.addPointEventListener();
      } else {
        this.removePointEventListener();
      }
    },
    addPointEventListener: function addPointEventListener() {
      var _this2 = this;

      var map = this.getMap();

      map.addPointEventListener(function (point) {
        if (_this2.pointResolving) {
          map.resolveAddressByPoint(point).then(function (pointInfo) {
            _this2.$emit('pointPlaced', pointInfo);
          }).catch(function (_) {
            _this2.$emit('pointPlaced', point);
          });
        } else {
          _this2.$emit('pointPlaced', point);
        }
      });
    },
    removePointEventListener: function removePointEventListener() {
      var map = this.getMap();
      map.removePointEventListener();
    },
    searchQuery: function searchQuery() {
      var _this3 = this;

      var query = this.query;
      var map = this.getMap();

      map.searchQuery(query, { limit: this.queryResponseLimit }).then(function (response) {
        _this3.$emit('queryResponse', response);
      }).catch(function (_) {
        _this3.$emit('queryResponse', []);
      });
    },
    destroyMap: function destroyMap() {
      var map = this.getMap();
      map.destroy();
    }
  },

  computed: {
    domIdentifier: function domIdentifier() {
      return 'r-' + this.mapDomId;
    },
    computedWidth: function computedWidth() {
      if (typeof this.width === 'number') {
        return this.width + 'px';
      }
      return this.width;
    },
    computedHeight: function computedHeight() {
      if (typeof this.height === 'number') {
        return this.height + 'px';
      }
      return this.height;
    },
    computedClasses: function computedClasses() {
      return {
        'r-map': true,
        'r-map_not-loaded': !this.loaded
      };
    },
    computedStyles: function computedStyles() {
      return {
        width: this.computedWidth,
        height: this.computedHeight
      };
    },
    sdk: function sdk() {
      return this.nonreactive.get('sdk');
    },


    /**
     * @return {UniversalMap}
     */
    map: function map() {
      return this.nonreactive.get('map');
    },
    manager: function manager() {
      return this.nonreactive.get('manager');
    }
  },

  watch: {
    height: function height() {
      if (this.created) {
        this.onResize();
      }
    },
    points: function points() {
      if (this.created) {
        this.clearPlacemarks();
        this.createPlacemarks();

        if (this.autoCenter) {
          this.updateOptimalCenterAndZoom();
        }
      }
    },
    controls: function controls() {
      if (this.created) {
        this.setControls();
      }
    },
    allowAdd: function allowAdd(value) {
      if (this.created) {
        this.toggleAllowAdd(value);
      }
    },
    query: function query(value) {
      this.searchQuery();
    }
  },

  beforeDestroy: function beforeDestroy() {
    if (this.created) {
      this.destroyMap();
    }
    this.destroyed = true;
  }
});

/***/ }),
/* 133 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__directives__ = __webpack_require__(135);
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };



var components = process.env.RABOTIFY_BASE ? __webpack_require__(34) : __webpack_require__(282);

function Rabotify(Vue, args) {
  var Rabotify = components.Rabotify;

  Vue.use(Rabotify, _extends({
    components: components,
    directives: __WEBPACK_IMPORTED_MODULE_0__directives__
  }, args));
}

Rabotify.version = '1.4.58';

if (typeof window !== 'undefined' && window.Vue) {
  window.Vue.use(Rabotify);
}

/* harmony default export */ __webpack_exports__["default"] = (Rabotify);
/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(134)))

/***/ }),
/* 134 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
    return [];
};

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () {
    return '/';
};
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function () {
    return 0;
};

/***/ }),
/* 135 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (immutable) */ __webpack_exports__["default"] = install;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__click_outside__ = __webpack_require__(13);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keydown_toggle__ = __webpack_require__(33);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__resize__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__scroll__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__touch__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ripple__ = __webpack_require__(20);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "ClickOutside", function() { return __WEBPACK_IMPORTED_MODULE_0__click_outside__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "KeydownToggle", function() { return __WEBPACK_IMPORTED_MODULE_1__keydown_toggle__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Resize", function() { return __WEBPACK_IMPORTED_MODULE_2__resize__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Ripple", function() { return __WEBPACK_IMPORTED_MODULE_5__ripple__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Scroll", function() { return __WEBPACK_IMPORTED_MODULE_3__scroll__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "Touch", function() { return __WEBPACK_IMPORTED_MODULE_4__touch__["a"]; });









function install(Vue) {
  Vue.directive('click-outside', __WEBPACK_IMPORTED_MODULE_0__click_outside__["a" /* default */]);
  Vue.directive('keydown-toggle', __WEBPACK_IMPORTED_MODULE_1__keydown_toggle__["a" /* default */]);
  Vue.directive('resize', __WEBPACK_IMPORTED_MODULE_2__resize__["a" /* default */]);
  Vue.directive('ripple', __WEBPACK_IMPORTED_MODULE_5__ripple__["a" /* default */]);
  Vue.directive('scroll', __WEBPACK_IMPORTED_MODULE_3__scroll__["a" /* default */]);
  Vue.directive('touch', __WEBPACK_IMPORTED_MODULE_4__touch__["a" /* default */]);
}

/***/ }),
/* 136 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_application__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_scrollTo__ = __webpack_require__(138);



var Rabotify = {
  install: function install(Vue) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (this.installed) {
      return;
    }

    this.installed = true;

    var $rabotify = {};
    Vue.util.defineReactive($rabotify, 'rx', {
      breakpoint: {},
      application: __WEBPACK_IMPORTED_MODULE_0__mixins_application__["a" /* default */],
      scrollTo: __WEBPACK_IMPORTED_MODULE_1__util_scrollTo__["a" /* default */]
    });

    Vue.prototype.$rabotify = $rabotify.rx;

    if (opts.transitions) {
      Object.keys(opts.transitions).forEach(function (key) {
        var t = opts.transitions[key];
        if (t.name !== undefined) {
          Vue.component(t.name, t);
        }
      });
    }

    if (opts.directives) {
      Object.keys(opts.directives).forEach(function (key) {
        var d = opts.directives[key];
        Vue.directive(d.name, d);
      });
    }

    if (opts.components) {
      Object.keys(opts.components).forEach(function (key) {
        var c = opts.components[key];
        Vue.use(c);
      });
    }
  }
};

/* harmony default export */ __webpack_exports__["a"] = (Rabotify);

/***/ }),
/* 137 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  bar: 0,
  bottom: 0,
  footer: 0,
  left: 0,
  right: 0,
  top: 0
});

/***/ }),
/* 138 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (immutable) */ __webpack_exports__["a"] = scrollTo;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_console__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_easing_patterns__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_helpers__ = __webpack_require__(1);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }





var defaults = {
  duration: 300,
  offset: 0,
  easing: 'easeInOutCubic'
};

/**
 * @param {RabotifyScrollToElement} target
 * @param {RabotifyScrollToOptions} settings
 * @param {RabotifyScrollToElement?} relativeElement
 * @return {number}
 */
function getTargetLocation(target, settings) {
  var relativeElement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  var isRelativeToWindow = !relativeElement;
  var getOffset = isRelativeToWindow ? __WEBPACK_IMPORTED_MODULE_2__util_helpers__["o" /* getElementOffset */] : __WEBPACK_IMPORTED_MODULE_2__util_helpers__["p" /* getElementRelativeOffset */];

  var location = 0;

  if (typeof target === 'number') {
    location = target;
  } else {
    var element = Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["z" /* resolveElement */])(target);
    var relative = Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["z" /* resolveElement */])(relativeElement);
    if (element) {
      location = getOffset.apply(undefined, _toConsumableArray([element, relative].filter(function (v) {
        return !!v;
      }))).top;
    }
  }

  if (settings.offset) {
    location += Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["g" /* ensureNumber */])(settings.offset);
  }

  var minLocation = isRelativeToWindow ? Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["m" /* getDocumentHeight */])() - Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["t" /* getWindowHeight */])() : Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["q" /* getElementScrollHeight */])(relativeElement) - Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["n" /* getElementHeight */])(relativeElement);

  return Math.round(Math.min(Math.max(location, 0), minLocation));
}

/**
 * @param {RabotifyScrollToElement} target
 * @param {RabotifyScrollToOptions} options
 * @param {RabotifyScrollToElement} relativeTo
 */
function scrollTo(target, options) {
  var relativeTo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  return new Promise(function (resolve, reject) {
    if (typeof window === 'undefined') {
      return resolve();
    }

    var isRelativeToWindow = !relativeTo;
    var relativeElement = Object(__WEBPACK_IMPORTED_MODULE_2__util_helpers__["z" /* resolveElement */])(relativeTo);

    var settings = Object.assign({}, defaults, options);

    var startTime = performance.now();

    var startLocation = isRelativeToWindow ? window.pageYOffset : relativeElement.scrollTop;
    var targetLocation = getTargetLocation(target, settings, relativeElement);
    var distanceToScroll = targetLocation - startLocation;

    var easingFunction = typeof settings.easing === 'function' ? settings.easing : __WEBPACK_IMPORTED_MODULE_1__util_easing_patterns__[settings.easing];

    if (isNaN(targetLocation)) {
      var type = target && target.constructor ? target.constructor.name : target;
      var err = new TypeError('Target must be a Selector/Number/DOMElement/VueComponent, received ' + type + ' instead.');
      Object(__WEBPACK_IMPORTED_MODULE_0__util_console__["a" /* consoleError */])(err);
      return reject(err);
    }

    if (!easingFunction) {
      var _err = new RangeError('Easing function \'' + settings.easing + '\' not found.');
      Object(__WEBPACK_IMPORTED_MODULE_0__util_console__["a" /* consoleError */])(_err);
      return reject(_err);
    }

    function step(currentTime) {
      var progressPercentage = Math.min(1, (currentTime - startTime) / settings.duration);
      var targetPosition = Math.floor(startLocation + distanceToScroll * easingFunction(progressPercentage));

      if (isRelativeToWindow) {
        window.scrollTo(0, targetPosition);
        if (Math.round(window.pageYOffset) === targetLocation) {
          return resolve();
        }
      } else {
        relativeElement.scrollTop = targetPosition;
        if (Math.round(relativeElement.scrollTop) === targetLocation) {
          return resolve();
        }
      }

      if (currentTime - startTime < settings.duration) {
        window.requestAnimationFrame(step);
      } else {
        resolve();
      }
    }

    window.requestAnimationFrame(step);
  });
}

/***/ }),
/* 139 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "linear", function() { return linear; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInQuad", function() { return easeInQuad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeOutQuad", function() { return easeOutQuad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInOutQuad", function() { return easeInOutQuad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInCubic", function() { return easeInCubic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeOutCubic", function() { return easeOutCubic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInOutCubic", function() { return easeInOutCubic; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInQuart", function() { return easeInQuart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeOutQuart", function() { return easeOutQuart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInOutQuart", function() { return easeInOutQuart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInQuint", function() { return easeInQuint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeOutQuint", function() { return easeOutQuint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "easeInOutQuint", function() { return easeInOutQuint; });
// linear
var linear = function linear(t) {
  return t;
};
// accelerating from zero velocity
var easeInQuad = function easeInQuad(t) {
  return t * t;
};
// decelerating to zero velocity
var easeOutQuad = function easeOutQuad(t) {
  return t * (2 - t);
};
// acceleration until halfway, then deceleration
var easeInOutQuad = function easeInOutQuad(t) {
  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
};
// accelerating from zero velocity
var easeInCubic = function easeInCubic(t) {
  return t * t * t;
};
// decelerating to zero velocity
var easeOutCubic = function easeOutCubic(t) {
  return --t * t * t + 1;
};
// acceleration until halfway, then deceleration
var easeInOutCubic = function easeInOutCubic(t) {
  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;
};
// accelerating from zero velocity
var easeInQuart = function easeInQuart(t) {
  return t * t * t * t;
};
// decelerating to zero velocity
var easeOutQuart = function easeOutQuart(t) {
  return 1 - --t * t * t * t;
};
// acceleration until halfway, then deceleration
var easeInOutQuart = function easeInOutQuart(t) {
  return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;
};
// accelerating from zero velocity
var easeInQuint = function easeInQuint(t) {
  return t * t * t * t * t;
};
// decelerating to zero velocity
var easeOutQuint = function easeOutQuint(t) {
  return 1 + --t * t * t * t * t;
};
// acceleration until halfway, then deceleration
var easeInOutQuint = function easeInOutQuint(t) {
  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;
};

/***/ }),
/* 140 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RApp_vue__ = __webpack_require__(141);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RApp_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-app', __WEBPACK_IMPORTED_MODULE_0__RApp_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RApp_vue__["a" /* default */]);

/***/ }),
/* 141 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RApp_vue__ = __webpack_require__(35);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_199599f9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RApp_vue__ = __webpack_require__(144);
function injectStyle (ssrContext) {
  __webpack_require__(142)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RApp_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_199599f9_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RApp_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 142 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 143 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export breakpointFactory */
/**
 * A Vue mixin to get the current width/height and the associated breakpoints.
 *
 * Useful to e.g. adapt the user interface from inside a Vue component
 * as opposed to using CSS classes. The breakpoint pixel values and
 * range names are taken from Material Design Spec
 *
 * Use within a component:
 *
 *   import breakpoint from './breakpoint.js'
 *
 *   export default {
 *     name: 'my-component',
 *     mixins: [breakpoint],
 *     ...
 *
 * Then inside a template:
 *
 *   <div v-if="$breakpoint.smAndDown">...</div>
 */

function breakpointFactory() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$immediately = _ref.immediately,
      immediately = _ref$immediately === undefined ? true : _ref$immediately,
      _ref$debounceTimeoutM = _ref.debounceTimeoutMs,
      debounceTimeoutMs = _ref$debounceTimeoutM === undefined ? 200 : _ref$debounceTimeoutM;

  var breakpoint = {
    data: function data() {
      return {
        clientWidth: clientDimensions.getWidth(),
        clientHeight: clientDimensions.getHeight(),
        resizeTimeout: null
      };
    },


    computed: {
      breakpoint: function breakpoint() {
        var xs = this.clientWidth < 480;
        var sm = this.clientWidth < 720 && !xs;
        var md = this.clientWidth < 1024 && !(sm || xs);
        var lg = this.clientWidth < 1280 && !(md || sm || xs);
        var xl = this.clientWidth >= 1280 && !(lg || md || sm || xs);

        var xsOnly = xs;
        var xsAndDown = xs && !(sm || md || lg || xl);
        var xsAndUp = !xs && (sm || md || lg || xl);
        var smOnly = sm;
        var smAndDown = (xs || sm) && !(md || lg || xl);
        var smAndUp = !(xs || sm) && (md || lg || xl);
        var mdOnly = md;
        var mdAndDown = (xs || sm || md) && !(lg || xl);
        var mdAndUp = !(xs || sm || md) && (lg || xl);
        var lgOnly = lg;
        var lgAndDown = (xs || sm || md || lg) && !xl;
        var lgAndUp = !(xs || sm || md || lg) && xl;
        var xlOnly = xl;

        var name = void 0;
        switch (true) {
          case xs:
            name = 'xs';
            break;
          case sm:
            name = 'sm';
            break;
          case md:
            name = 'md';
            break;
          case lg:
            name = 'lg';
            break;
          default:
            name = 'xl';
            break;
        }

        var result = {
          // Definite breakpoint
          xs: xs,
          sm: sm,
          md: md,
          lg: lg,
          xl: xl,

          // Useful e.g. to construct CSS class names dynamically
          name: name,

          // Breakpoint ranges
          xsOnly: xsOnly,
          xsAndDown: xsAndDown,
          xsAndUp: xsAndUp,
          //
          smOnly: smOnly,
          smAndDown: smAndDown,
          smAndUp: smAndUp,
          //
          mdOnly: mdOnly,
          mdAndDown: mdAndDown,
          mdAndUp: mdAndUp,
          //
          lgOnly: lgOnly,
          lgAndDown: lgAndDown,
          lgAndUp: lgAndUp,
          //
          xlOnly: xlOnly,

          // For custom breakpoint logic
          width: this.clientWidth,
          height: this.clientHeight
        };

        return result;
      }
    },

    watch: {
      breakpoint: function breakpoint(val) {
        this.$rabotify.breakpoint = val;
      }
    },

    created: function created() {
      this.$rabotify.breakpoint = this.breakpoint;
    },


    methods: {
      onResize: function onResize() {
        var _this = this;

        if (immediately) {
          this.clientWidth = clientDimensions.getWidth();
          this.clientHeight = clientDimensions.getHeight();
        } else {
          clearTimeout(this.resizeTimeout);

          // Added debounce to match what
          // r-resize used to do but was
          // removed due to a memory leak
          this.resizeTimeout = setTimeout(function () {
            _this.clientWidth = clientDimensions.getWidth();
            _this.clientHeight = clientDimensions.getHeight();
          }, debounceTimeoutMs);
        }
      }
    }
  };
  return breakpoint;
}

// Cross-browser support as described in:
// https://stackoverflow.com/questions/1248081
var clientDimensions = {
  getWidth: function getWidth() {
    if (typeof document === 'undefined') {
      return 0; // SSR
    }
    return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
  },
  getHeight: function getHeight() {
    if (typeof document === 'undefined') {
      return 0; // SSR
    }
    return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
  }
};

var breakpoint = breakpointFactory();

/* harmony default export */ __webpack_exports__["a"] = (breakpoint);

/***/ }),
/* 144 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"resize",rawName:"v-resize",value:(_vm.onResize),expression:"onResize"}],staticClass:"app",attrs:{"data-app":"true","id":this.id}},[_c('div',{staticClass:"app__wrap"},[_vm._t("default")],2)])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 145 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RLoading_vue__ = __webpack_require__(16);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RLoading_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-loading', __WEBPACK_IMPORTED_MODULE_0__RLoading_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RLoading_vue__["a" /* default */]);

/***/ }),
/* 146 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 147 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RBtn_vue__ = __webpack_require__(4);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RBtn_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-btn', __WEBPACK_IMPORTED_MODULE_0__RBtn_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RBtn_vue__["a" /* default */]);

/***/ }),
/* 148 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 149 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RBtnToggle_vue__ = __webpack_require__(150);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RBtnToggle_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-btn-toggle', __WEBPACK_IMPORTED_MODULE_0__RBtnToggle_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RBtnToggle_vue__["a" /* default */]);

/***/ }),
/* 150 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RBtnToggle_vue__ = __webpack_require__(38);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(151)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RBtnToggle_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 151 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 152 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__registrable__ = __webpack_require__(3);


/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'button-group',

  mixins: [Object(__WEBPACK_IMPORTED_MODULE_0__registrable__["b" /* provide */])('buttonGroup')],

  data: function data() {
    return {
      buttons: [],
      listeners: []
    };
  },


  methods: {
    getValue: function getValue(i) {
      if (this.buttons[i].value != null) {
        return this.buttons[i].value;
      }

      // Fix for testing, this should always be false in the browser
      if (this.buttons[i].$el.value != null && this.buttons[i].$el.value !== '') {
        return this.buttons[i].$el.value;
      }

      return i;
    },
    update: function update() {
      var selected = [];

      for (var i = 0; i < this.buttons.length; i++) {
        var elm = this.buttons[i].$el;
        var button = this.buttons[i];

        elm.removeAttribute('data-only-child');

        if (this.isSelected(i)) {
          !button.to && (button.isActive = true);
          selected.push(i);
        } else {
          !button.to && (button.isActive = false);
        }
      }

      if (selected.length === 1) {
        this.buttons[selected[0]].$el.setAttribute('data-only-child', true);
      }
    },
    register: function register(button) {
      var index = this.buttons.length;
      this.buttons.push(button);
      this.listeners.push(this.updateValue.bind(this, index));
      button.$on('click', this.listeners[index]);
    },
    unregister: function unregister(button) {
      var _this = this;

      var index = this.buttons.indexOf(button);
      if (index === -1) {
        return;
      }

      var wasSelected = this.isSelected(index);

      button.$off('click', this.listeners[index]);
      this.buttons.splice(index, 1);
      this.listeners.splice(index, 1);

      // Preserve the mandatory invariant
      if (wasSelected && this.mandatory && this.buttons.every(function (_, i) {
        return !_this.isSelected(i);
      }) && this.listeners.length > 0) {
        this.listeners[0]();
      }
    },
    setButtonWidth: function setButtonWidth() {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.buttons[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var component = _step.value;

          if (component.$el) {
            component.$el.style.width = this.buttonWidth;
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  },

  mounted: function mounted() {
    this.update();

    if (this.buttonWidth) {
      this.setButtonWidth();
    }
  }
});

/***/ }),
/* 153 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RCheckbox_vue__ = __webpack_require__(39);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RCheckbox_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-checkbox', __WEBPACK_IMPORTED_MODULE_0__RCheckbox_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RCheckbox_vue__["a" /* default */]);

/***/ }),
/* 154 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 155 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);


/* harmony default export */ __webpack_exports__["a"] = (function () {
  var expandedParentClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  return {
    enter: function enter(el, done) {
      el._parent = el.parentNode;

      Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["a" /* addOnceEventListener */])(el, 'transitionend', done);

      // Get height that is to be scrolled
      el.style.overflow = 'hidden';
      el.style.height = 0;
      el.style.minHeight = 0;
      el.style.display = 'block';
      expandedParentClass && el._parent.classList.add(expandedParentClass);

      setTimeout(function () {
        el.style.height = el.scrollHeight + 'px';
        el.style.minHeight = el.scrollHeight + 'px';
      }, 100);
    },
    afterEnter: function afterEnter(el) {
      el.style.overflow = null;
      el.style.height = null;
      el.style.minHeight = null;
    },
    leave: function leave(el, done) {
      // Remove initial transition
      Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["a" /* addOnceEventListener */])(el, 'transitionend', done);

      // Set height before we transition to 0
      el.style.overflow = 'hidden';
      el.style.height = el.offsetHeight + 'px';
      el.style.minHeight = el.offsetHeight + 'px';

      setTimeout(function () {
        el.style.height = 0;
        el.style.minHeight = 0;
      }, 100);
    },
    afterLeave: function afterLeave(el) {
      expandedParentClass && el._parent.classList.remove(expandedParentClass);
    }
  };
});

/***/ }),
/* 156 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Loadable
 *
 * @mixin
 *
 * Used to add linear progress bar to components
 * Can use a default bar with a specific color
 * or designate a custom progress linear bar
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    loading: {
      type: [Boolean, String],
      default: false
    }
  },

  methods: {
    genProgress: function genProgress() {
      if (this.loading === false) {
        return null;
      }

      return this.$slots.progress || this.$createElement('r-loading', {
        props: {
          line: true
        }
      });
    }
  }
});

/***/ }),
/* 157 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__mixins_registrable__ = __webpack_require__(3);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };



/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'validatable',

  mixins: [Object(__WEBPACK_IMPORTED_MODULE_0__mixins_registrable__["a" /* inject */])('formErrors', 'r-form')],

  data: function data() {
    return {
      errorBucket: [],
      errorMessages: [],
      hasFocused: false,
      hasInput: false,
      shouldValidate: false,
      valid: false
    };
  },


  props: {
    error: {
      type: Boolean
    },
    errorField: String,
    rules: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    validateOnBlur: Boolean
  },

  computed: {
    validations: function validations() {
      if (!Array.isArray(this.errorMessages)) {
        return [this.errorMessages];
      } else if (this.errorMessages.length > 0) {
        return this.errorMessages;
      } else if (this.shouldValidate) {
        return this.errorBucket;
      } else {
        return [];
      }
    },
    hasError: function hasError() {
      return this.validations.length > 0 || this.errorMessages.length > 0 || this.error;
    }
  },

  watch: {
    rules: {
      handler: function handler(newVal, oldVal) {
        // TODO: This handler seems to trigger when input changes, even though
        // rules array stays the same? Solved it like this for now
        if (newVal.length === oldVal.length) {
          return;
        }

        this.validate();
      },

      deep: true
    },

    formErrors: function formErrors() {
      var _this = this;

      var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var isOwnError = function isOwnError(error) {
        return error && error.field && error.field === _this.errorField;
      };

      for (var i = 0; i < errors.length; ++i) {
        var error = errors[i];
        if (isOwnError(error)) {
          this.errorMessages.push(error.user_message || error.system_message || error.message);
        }
      }
    },
    inputValue: function inputValue(val) {
      // If it's the first time we're setting input,
      // mark it with hasInput
      if (!!val && !this.hasInput) {
        this.hasInput = true;
      }

      if (this.hasInput && !this.validateOnBlur) {
        this.shouldValidate = true;
      }
    },
    isFocused: function isFocused(val) {
      // If we're not focused, and it's the first time
      // we're defocusing, set shouldValidate to true
      if (!val && !this.hasFocused) {
        this.hasFocused = true;
        this.shouldValidate = true;

        this.$emit('update:error', this.errorBucket.length > 0);
      }
    },
    hasError: function hasError(val) {
      if (this.shouldValidate) {
        this.$emit('update:error', val);
      }
    },
    error: function error(val) {
      this.shouldValidate = !!val;
    }
  },

  mounted: function mounted() {
    this.shouldValidate = !!this.error;
    this.validate();
  },


  methods: {
    reset: function reset() {
      var _this2 = this;

      // TODO: Do this another way!
      // This is so that we can reset all types of inputs
      this.$emit('input', this.isMultiple ? [] : null);
      this.$emit('change', null);
      this.errorMessages = [];

      this.$nextTick(function () {
        _this2.shouldValidate = false;
        _this2.hasFocused = false;
        _this2.validate();
      });
    },
    validate: function validate() {
      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.inputValue;

      if (value === null && this.shouldValidate) {
        this.errorBucket = [];
        return this.valid = this.optional;
      }

      if (force) {
        this.shouldValidate = true;
      }

      this.errorBucket = [];
      this.errorMessages = [];

      value = value || '';
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this.rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var rule = _step.value;

          var valid = typeof rule === 'function' ? rule(value) : rule;

          if (this.optional && !value) {
            valid = true;
          }

          if (valid === false || typeof valid === 'string') {
            this.errorBucket.push(valid);
          } else if (valid !== true) {
            throw new TypeError('Rules should return a string or boolean, received \'' + (typeof valid === 'undefined' ? 'undefined' : _typeof(valid)) + '\' instead');
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      this.valid = this.errorBucket.length === 0;

      return this.valid;
    }
  }
});

/***/ }),
/* 158 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RSwitch_vue__ = __webpack_require__(159);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RSwitch_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-switch', __WEBPACK_IMPORTED_MODULE_0__RSwitch_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RSwitch_vue__["a" /* default */]);

/***/ }),
/* 159 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSwitch_vue__ = __webpack_require__(43);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(160)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSwitch_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 160 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 161 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RTextField_vue__ = __webpack_require__(44);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RTextField_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-text-field', __WEBPACK_IMPORTED_MODULE_0__RTextField_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RTextField_vue__["a" /* default */]);

/***/ }),
/* 162 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 163 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js__ = __webpack_require__(164);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cleave_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cleave_js__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_cleave_js_dist_addons_cleave_phone_ru__ = __webpack_require__(165);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_cleave_js_dist_addons_cleave_phone_ru___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_cleave_js_dist_addons_cleave_phone_ru__);
/**
 * Cleave masks
 *
 * @mixin
 *
 * Creates an input mask that is
 * generated from a masked str
 *
 */




/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    return {
      cleave: null
    };
  },

  props: {
    cleaveMask: Boolean,
    cleaveOptions: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },

  mounted: function mounted() {
    if (this.cleaveMask) {
      this.createCleave();
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.destroyCleave();
  },


  methods: {
    createCleave: function createCleave() {
      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.cleaveOptions;

      this.cleave = new __WEBPACK_IMPORTED_MODULE_0_cleave_js___default.a(this.$refs.input, opts);
    },
    destroyCleave: function destroyCleave() {
      this.cleave && this.cleave.destroy();
    }
  },

  watch: {
    options: {
      deep: true,
      handler: function handler(val) {
        this.destroyCleave();
        this.createCleave(val);
      }
    }
  }
});

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

(function webpackUniversalModuleDefinition(root, factory) {
	if (( false ? 'undefined' : _typeof(exports)) === 'object' && ( false ? 'undefined' : _typeof(module)) === 'object') module.exports = factory();else if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') exports["Cleave"] = factory();else root["Cleave"] = factory();
})(this, function () {
	return (/******/function (modules) {
			// webpackBootstrap
			/******/ // The module cache
			/******/var installedModules = {};

			/******/ // The require function
			/******/function __webpack_require__(moduleId) {

				/******/ // Check if module is in cache
				/******/if (installedModules[moduleId])
					/******/return installedModules[moduleId].exports;

				/******/ // Create a new module (and put it into the cache)
				/******/var module = installedModules[moduleId] = {
					/******/exports: {},
					/******/id: moduleId,
					/******/loaded: false
					/******/ };

				/******/ // Execute the module function
				/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

				/******/ // Flag the module as loaded
				/******/module.loaded = true;

				/******/ // Return the exports of the module
				/******/return module.exports;
				/******/
			}

			/******/ // expose the modules object (__webpack_modules__)
			/******/__webpack_require__.m = modules;

			/******/ // expose the module cache
			/******/__webpack_require__.c = installedModules;

			/******/ // __webpack_public_path__
			/******/__webpack_require__.p = "";

			/******/ // Load entry module and return exports
			/******/return __webpack_require__(0);
			/******/
		}(
		/************************************************************************/
		/******/[
		/* 0 */
		/***/function (module, exports, __webpack_require__) {

			/* WEBPACK VAR INJECTION */(function (global) {
				'use strict';

				/**
     * Construct a new Cleave instance by passing the configuration object
     *
     * @param {String | HTMLElement} element
     * @param {Object} opts
     */

				var Cleave = function Cleave(element, opts) {
					var owner = this;

					if (typeof element === 'string') {
						owner.element = document.querySelector(element);
					} else {
						owner.element = typeof element.length !== 'undefined' && element.length > 0 ? element[0] : element;
					}

					if (!owner.element) {
						throw new Error('[cleave.js] Please check the element');
					}

					opts.initValue = owner.element.value;

					owner.properties = Cleave.DefaultProperties.assign({}, opts);

					owner.init();
				};

				Cleave.prototype = {
					init: function init() {
						var owner = this,
						    pps = owner.properties;

						// no need to use this lib
						if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.time && !pps.date && pps.blocksLength === 0 && !pps.prefix) {
							owner.onInput(pps.initValue);

							return;
						}

						pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);

						owner.isAndroid = Cleave.Util.isAndroid();
						owner.lastInputValue = '';

						owner.onChangeListener = owner.onChange.bind(owner);
						owner.onKeyDownListener = owner.onKeyDown.bind(owner);
						owner.onFocusListener = owner.onFocus.bind(owner);
						owner.onCutListener = owner.onCut.bind(owner);
						owner.onCopyListener = owner.onCopy.bind(owner);

						owner.element.addEventListener('input', owner.onChangeListener);
						owner.element.addEventListener('keydown', owner.onKeyDownListener);
						owner.element.addEventListener('focus', owner.onFocusListener);
						owner.element.addEventListener('cut', owner.onCutListener);
						owner.element.addEventListener('copy', owner.onCopyListener);

						owner.initPhoneFormatter();
						owner.initDateFormatter();
						owner.initTimeFormatter();
						owner.initNumeralFormatter();

						// avoid touch input field if value is null
						// otherwise Firefox will add red box-shadow for <input required />
						if (pps.initValue || pps.prefix && !pps.noImmediatePrefix) {
							owner.onInput(pps.initValue);
						}
					},

					initNumeralFormatter: function initNumeralFormatter() {
						var owner = this,
						    pps = owner.properties;

						if (!pps.numeral) {
							return;
						}

						pps.numeralFormatter = new Cleave.NumeralFormatter(pps.numeralDecimalMark, pps.numeralIntegerScale, pps.numeralDecimalScale, pps.numeralThousandsGroupStyle, pps.numeralPositiveOnly, pps.stripLeadingZeroes, pps.delimiter);
					},

					initTimeFormatter: function initTimeFormatter() {
						var owner = this,
						    pps = owner.properties;

						if (!pps.time) {
							return;
						}

						pps.timeFormatter = new Cleave.TimeFormatter(pps.timePattern, pps.timeFormat);
						pps.blocks = pps.timeFormatter.getBlocks();
						pps.blocksLength = pps.blocks.length;
						pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);
					},

					initDateFormatter: function initDateFormatter() {
						var owner = this,
						    pps = owner.properties;

						if (!pps.date) {
							return;
						}

						pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);
						pps.blocks = pps.dateFormatter.getBlocks();
						pps.blocksLength = pps.blocks.length;
						pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);
					},

					initPhoneFormatter: function initPhoneFormatter() {
						var owner = this,
						    pps = owner.properties;

						if (!pps.phone) {
							return;
						}

						// Cleave.AsYouTypeFormatter should be provided by
						// external google closure lib
						try {
							pps.phoneFormatter = new Cleave.PhoneFormatter(new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode), pps.delimiter);
						} catch (ex) {
							throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');
						}
					},

					onKeyDown: function onKeyDown(event) {
						var owner = this,
						    pps = owner.properties,
						    charCode = event.which || event.keyCode,
						    Util = Cleave.Util,
						    currentValue = owner.element.value;

						// if we got any charCode === 8, this means, that this device correctly
						// sends backspace keys in event, so we do not need to apply any hacks
						owner.hasBackspaceSupport = owner.hasBackspaceSupport || charCode === 8;
						if (!owner.hasBackspaceSupport && Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)) {
							charCode = 8;
						}

						owner.lastInputValue = currentValue;

						// hit backspace when last character is delimiter
						var postDelimiter = Util.getPostDelimiter(currentValue, pps.delimiter, pps.delimiters);
						if (charCode === 8 && postDelimiter) {
							pps.postDelimiterBackspace = postDelimiter;
						} else {
							pps.postDelimiterBackspace = false;
						}
					},

					onChange: function onChange() {
						this.onInput(this.element.value);
					},

					onFocus: function onFocus() {
						var owner = this,
						    pps = owner.properties;

						Cleave.Util.fixPrefixCursor(owner.element, pps.prefix, pps.delimiter, pps.delimiters);
					},

					onCut: function onCut(e) {
						this.copyClipboardData(e);
						this.onInput('');
					},

					onCopy: function onCopy(e) {
						this.copyClipboardData(e);
					},

					copyClipboardData: function copyClipboardData(e) {
						var owner = this,
						    pps = owner.properties,
						    Util = Cleave.Util,
						    inputValue = owner.element.value,
						    textToCopy = '';

						if (!pps.copyDelimiter) {
							textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);
						} else {
							textToCopy = inputValue;
						}

						try {
							if (e.clipboardData) {
								e.clipboardData.setData('Text', textToCopy);
							} else {
								window.clipboardData.setData('Text', textToCopy);
							}

							e.preventDefault();
						} catch (ex) {
							//  empty
						}
					},

					onInput: function onInput(value) {
						var owner = this,
						    pps = owner.properties,
						    Util = Cleave.Util;

						// case 1: delete one more character "4"
						// 1234*| -> hit backspace -> 123|
						// case 2: last character is not delimiter which is:
						// 12|34* -> hit backspace -> 1|34*
						// note: no need to apply this for numeral mode
						var postDelimiterAfter = Util.getPostDelimiter(value, pps.delimiter, pps.delimiters);
						if (!pps.numeral && pps.postDelimiterBackspace && !postDelimiterAfter) {
							value = Util.headStr(value, value.length - pps.postDelimiterBackspace.length);
						}

						// phone formatter
						if (pps.phone) {
							if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {
								pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);
							} else {
								pps.result = pps.phoneFormatter.format(value);
							}
							owner.updateValueState();

							return;
						}

						// numeral formatter
						if (pps.numeral) {
							if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {
								pps.result = pps.prefix + pps.numeralFormatter.format(value);
							} else {
								pps.result = pps.numeralFormatter.format(value);
							}
							owner.updateValueState();

							return;
						}

						// date
						if (pps.date) {
							value = pps.dateFormatter.getValidatedDate(value);
						}

						// time
						if (pps.time) {
							value = pps.timeFormatter.getValidatedTime(value);
						}

						// strip delimiters
						value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);

						// strip prefix
						value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength, pps.result);

						// strip non-numeric characters
						value = pps.numericOnly ? Util.strip(value, /[^\d]/g) : value;

						// convert case
						value = pps.uppercase ? value.toUpperCase() : value;
						value = pps.lowercase ? value.toLowerCase() : value;

						// prefix
						if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {
							value = pps.prefix + value;

							// no blocks specified, no need to do formatting
							if (pps.blocksLength === 0) {
								pps.result = value;
								owner.updateValueState();

								return;
							}
						}

						// update credit card props
						if (pps.creditCard) {
							owner.updateCreditCardPropsByValue(value);
						}

						// strip over length characters
						value = Util.headStr(value, pps.maxLength);

						// apply blocks
						pps.result = Util.getFormattedValue(value, pps.blocks, pps.blocksLength, pps.delimiter, pps.delimiters, pps.delimiterLazyShow);

						owner.updateValueState();
					},

					updateCreditCardPropsByValue: function updateCreditCardPropsByValue(value) {
						var owner = this,
						    pps = owner.properties,
						    Util = Cleave.Util,
						    creditCardInfo;

						// At least one of the first 4 characters has changed
						if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {
							return;
						}

						creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);

						pps.blocks = creditCardInfo.blocks;
						pps.blocksLength = pps.blocks.length;
						pps.maxLength = Util.getMaxLength(pps.blocks);

						// credit card type changed
						if (pps.creditCardType !== creditCardInfo.type) {
							pps.creditCardType = creditCardInfo.type;

							pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);
						}
					},

					updateValueState: function updateValueState() {
						var owner = this,
						    Util = Cleave.Util,
						    pps = owner.properties;

						if (!owner.element) {
							return;
						}

						var endPos = owner.element.selectionEnd;
						var oldValue = owner.element.value;
						var newValue = pps.result;

						endPos = Util.getNextCursorPosition(endPos, oldValue, newValue, pps.delimiter, pps.delimiters);

						// fix Android browser type="text" input field
						// cursor not jumping issue
						if (owner.isAndroid) {
							window.setTimeout(function () {
								owner.element.value = newValue;
								Util.setSelection(owner.element, endPos, pps.document, false);
								owner.callOnValueChanged();
							}, 1);

							return;
						}

						owner.element.value = newValue;
						Util.setSelection(owner.element, endPos, pps.document, false);
						owner.callOnValueChanged();
					},

					callOnValueChanged: function callOnValueChanged() {
						var owner = this,
						    pps = owner.properties;

						pps.onValueChanged.call(owner, {
							target: {
								value: pps.result,
								rawValue: owner.getRawValue()
							}
						});
					},

					setPhoneRegionCode: function setPhoneRegionCode(phoneRegionCode) {
						var owner = this,
						    pps = owner.properties;

						pps.phoneRegionCode = phoneRegionCode;
						owner.initPhoneFormatter();
						owner.onChange();
					},

					setRawValue: function setRawValue(value) {
						var owner = this,
						    pps = owner.properties;

						value = value !== undefined && value !== null ? value.toString() : '';

						if (pps.numeral) {
							value = value.replace('.', pps.numeralDecimalMark);
						}

						pps.postDelimiterBackspace = false;

						owner.element.value = value;
						owner.onInput(value);
					},

					getRawValue: function getRawValue() {
						var owner = this,
						    pps = owner.properties,
						    Util = Cleave.Util,
						    rawValue = owner.element.value;

						if (pps.rawValueTrimPrefix) {
							rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength, pps.result);
						}

						if (pps.numeral) {
							rawValue = pps.numeralFormatter.getRawValue(rawValue);
						} else {
							rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);
						}

						return rawValue;
					},

					getISOFormatDate: function getISOFormatDate() {
						var owner = this,
						    pps = owner.properties;

						return pps.date ? pps.dateFormatter.getISOFormatDate() : '';
					},

					getISOFormatTime: function getISOFormatTime() {
						var owner = this,
						    pps = owner.properties;

						return pps.time ? pps.timeFormatter.getISOFormatTime() : '';
					},

					getFormattedValue: function getFormattedValue() {
						return this.element.value;
					},

					destroy: function destroy() {
						var owner = this;

						owner.element.removeEventListener('input', owner.onChangeListener);
						owner.element.removeEventListener('keydown', owner.onKeyDownListener);
						owner.element.removeEventListener('focus', owner.onFocusListener);
						owner.element.removeEventListener('cut', owner.onCutListener);
						owner.element.removeEventListener('copy', owner.onCopyListener);
					},

					toString: function toString() {
						return '[Cleave Object]';
					}
				};

				Cleave.NumeralFormatter = __webpack_require__(1);
				Cleave.DateFormatter = __webpack_require__(2);
				Cleave.TimeFormatter = __webpack_require__(3);
				Cleave.PhoneFormatter = __webpack_require__(4);
				Cleave.CreditCardDetector = __webpack_require__(5);
				Cleave.Util = __webpack_require__(6);
				Cleave.DefaultProperties = __webpack_require__(7);

				// for angular directive
				((typeof global === 'undefined' ? 'undefined' : _typeof(global)) === 'object' && global ? global : window)['Cleave'] = Cleave;

				// CommonJS
				module.exports = Cleave;

				/* WEBPACK VAR INJECTION */
			}).call(exports, function () {
				return this;
			}());

			/***/
		},
		/* 1 */
		/***/function (module, exports) {

			'use strict';

			var NumeralFormatter = function NumeralFormatter(numeralDecimalMark, numeralIntegerScale, numeralDecimalScale, numeralThousandsGroupStyle, numeralPositiveOnly, stripLeadingZeroes, delimiter) {
				var owner = this;

				owner.numeralDecimalMark = numeralDecimalMark || '.';
				owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;
				owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;
				owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;
				owner.numeralPositiveOnly = !!numeralPositiveOnly;
				owner.stripLeadingZeroes = stripLeadingZeroes !== false;
				owner.delimiter = delimiter || delimiter === '' ? delimiter : ',';
				owner.delimiterRE = delimiter ? new RegExp('\\' + delimiter, 'g') : '';
			};

			NumeralFormatter.groupStyle = {
				thousand: 'thousand',
				lakh: 'lakh',
				wan: 'wan',
				none: 'none'
			};

			NumeralFormatter.prototype = {
				getRawValue: function getRawValue(value) {
					return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');
				},

				format: function format(value) {
					var owner = this,
					    parts,
					    partInteger,
					    partDecimal = '';

					// strip alphabet letters
					value = value.replace(/[A-Za-z]/g, '')
					// replace the first decimal mark with reserved placeholder
					.replace(owner.numeralDecimalMark, 'M')

					// strip non numeric letters except minus and "M"
					// this is to ensure prefix has been stripped
					.replace(/[^\dM-]/g, '')

					// replace the leading minus with reserved placeholder
					.replace(/^\-/, 'N')

					// strip the other minus sign (if present)
					.replace(/\-/g, '')

					// replace the minus sign (if present)
					.replace('N', owner.numeralPositiveOnly ? '' : '-')

					// replace decimal mark
					.replace('M', owner.numeralDecimalMark);

					// strip any leading zeros
					if (owner.stripLeadingZeroes) {
						value = value.replace(/^(-)?0+(?=\d)/, '$1');
					}

					partInteger = value;

					if (value.indexOf(owner.numeralDecimalMark) >= 0) {
						parts = value.split(owner.numeralDecimalMark);
						partInteger = parts[0];
						partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);
					}

					if (owner.numeralIntegerScale > 0) {
						partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));
					}

					switch (owner.numeralThousandsGroupStyle) {
						case NumeralFormatter.groupStyle.lakh:
							partInteger = partInteger.replace(/(\d)(?=(\d\d)+\d$)/g, '$1' + owner.delimiter);

							break;

						case NumeralFormatter.groupStyle.wan:
							partInteger = partInteger.replace(/(\d)(?=(\d{4})+$)/g, '$1' + owner.delimiter);

							break;

						case NumeralFormatter.groupStyle.thousand:
							partInteger = partInteger.replace(/(\d)(?=(\d{3})+$)/g, '$1' + owner.delimiter);

							break;
					}

					return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');
				}
			};

			module.exports = NumeralFormatter;

			/***/
		},
		/* 2 */
		/***/function (module, exports) {

			'use strict';

			var DateFormatter = function DateFormatter(datePattern) {
				var owner = this;

				owner.date = [];
				owner.blocks = [];
				owner.datePattern = datePattern;
				owner.initBlocks();
			};

			DateFormatter.prototype = {
				initBlocks: function initBlocks() {
					var owner = this;
					owner.datePattern.forEach(function (value) {
						if (value === 'Y') {
							owner.blocks.push(4);
						} else {
							owner.blocks.push(2);
						}
					});
				},

				getISOFormatDate: function getISOFormatDate() {
					var owner = this,
					    date = owner.date;

					return date[2] ? date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0]) : '';
				},

				getBlocks: function getBlocks() {
					return this.blocks;
				},

				getValidatedDate: function getValidatedDate(value) {
					var owner = this,
					    result = '';

					value = value.replace(/[^\d]/g, '');

					owner.blocks.forEach(function (length, index) {
						if (value.length > 0) {
							var sub = value.slice(0, length),
							    sub0 = sub.slice(0, 1),
							    rest = value.slice(length);

							switch (owner.datePattern[index]) {
								case 'd':
									if (sub === '00') {
										sub = '01';
									} else if (parseInt(sub0, 10) > 3) {
										sub = '0' + sub0;
									} else if (parseInt(sub, 10) > 31) {
										sub = '31';
									}

									break;

								case 'm':
									if (sub === '00') {
										sub = '01';
									} else if (parseInt(sub0, 10) > 1) {
										sub = '0' + sub0;
									} else if (parseInt(sub, 10) > 12) {
										sub = '12';
									}

									break;
							}

							result += sub;

							// update remaining string
							value = rest;
						}
					});

					return this.getFixedDateString(result);
				},

				getFixedDateString: function getFixedDateString(value) {
					var owner = this,
					    datePattern = owner.datePattern,
					    date = [],
					    dayIndex = 0,
					    monthIndex = 0,
					    yearIndex = 0,
					    dayStartIndex = 0,
					    monthStartIndex = 0,
					    yearStartIndex = 0,
					    day,
					    month,
					    year,
					    fullYearDone = false;

					// mm-dd || dd-mm
					if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {
						dayStartIndex = datePattern[0] === 'd' ? 0 : 2;
						monthStartIndex = 2 - dayStartIndex;
						day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);
						month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);

						date = this.getFixedDate(day, month, 0);
					}

					// yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd
					if (value.length === 8) {
						datePattern.forEach(function (type, index) {
							switch (type) {
								case 'd':
									dayIndex = index;
									break;
								case 'm':
									monthIndex = index;
									break;
								default:
									yearIndex = index;
									break;
							}
						});

						yearStartIndex = yearIndex * 2;
						dayStartIndex = dayIndex <= yearIndex ? dayIndex * 2 : dayIndex * 2 + 2;
						monthStartIndex = monthIndex <= yearIndex ? monthIndex * 2 : monthIndex * 2 + 2;

						day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);
						month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);
						year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);

						fullYearDone = value.slice(yearStartIndex, yearStartIndex + 4).length === 4;

						date = this.getFixedDate(day, month, year);
					}

					owner.date = date;

					return date.length === 0 ? value : datePattern.reduce(function (previous, current) {
						switch (current) {
							case 'd':
								return previous + owner.addLeadingZero(date[0]);
							case 'm':
								return previous + owner.addLeadingZero(date[1]);
							default:
								return previous + (fullYearDone ? owner.addLeadingZeroForYear(date[2]) : '');
						}
					}, '');
				},

				getFixedDate: function getFixedDate(day, month, year) {
					day = Math.min(day, 31);
					month = Math.min(month, 12);
					year = parseInt(year || 0, 10);

					if (month < 7 && month % 2 === 0 || month > 8 && month % 2 === 1) {
						day = Math.min(day, month === 2 ? this.isLeapYear(year) ? 29 : 28 : 30);
					}

					return [day, month, year];
				},

				isLeapYear: function isLeapYear(year) {
					return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
				},

				addLeadingZero: function addLeadingZero(number) {
					return (number < 10 ? '0' : '') + number;
				},

				addLeadingZeroForYear: function addLeadingZeroForYear(number) {
					return (number < 10 ? '000' : number < 100 ? '00' : number < 1000 ? '0' : '') + number;
				}
			};

			module.exports = DateFormatter;

			/***/
		},
		/* 3 */
		/***/function (module, exports) {

			'use strict';

			var TimeFormatter = function TimeFormatter(timePattern, timeFormat) {
				var owner = this;

				owner.time = [];
				owner.blocks = [];
				owner.timePattern = timePattern;
				owner.timeFormat = timeFormat;
				owner.initBlocks();
			};

			TimeFormatter.prototype = {
				initBlocks: function initBlocks() {
					var owner = this;
					owner.timePattern.forEach(function () {
						owner.blocks.push(2);
					});
				},

				getISOFormatTime: function getISOFormatTime() {
					var owner = this,
					    time = owner.time;

					return time[2] ? owner.addLeadingZero(time[0]) + ':' + owner.addLeadingZero(time[1]) + ':' + owner.addLeadingZero(time[2]) : '';
				},

				getBlocks: function getBlocks() {
					return this.blocks;
				},

				getTimeFormatOptions: function getTimeFormatOptions() {
					var owner = this;
					if (String(owner.timeFormat) === '12') {
						return {
							maxHourFirstDigit: 1,
							maxHours: 12,
							maxMinutesFirstDigit: 5,
							maxMinutes: 60
						};
					}

					return {
						maxHourFirstDigit: 2,
						maxHours: 23,
						maxMinutesFirstDigit: 5,
						maxMinutes: 60
					};
				},

				getValidatedTime: function getValidatedTime(value) {
					var owner = this,
					    result = '';

					value = value.replace(/[^\d]/g, '');

					var timeFormatOptions = owner.getTimeFormatOptions();

					owner.blocks.forEach(function (length, index) {
						if (value.length > 0) {
							var sub = value.slice(0, length),
							    sub0 = sub.slice(0, 1),
							    rest = value.slice(length);

							switch (owner.timePattern[index]) {

								case 'h':
									if (parseInt(sub0, 10) > timeFormatOptions.maxHourFirstDigit) {
										sub = '0' + sub0;
									} else if (parseInt(sub, 10) > timeFormatOptions.maxHours) {
										sub = timeFormatOptions.maxHours + '';
									}

									break;

								case 'm':
								case 's':
									if (parseInt(sub0, 10) > timeFormatOptions.maxMinutesFirstDigit) {
										sub = '0' + sub0;
									} else if (parseInt(sub, 10) > timeFormatOptions.maxMinutes) {
										sub = timeFormatOptions.maxMinutes + '';
									}
									break;
							}

							result += sub;

							// update remaining string
							value = rest;
						}
					});

					return this.getFixedTimeString(result);
				},

				getFixedTimeString: function getFixedTimeString(value) {
					var owner = this,
					    timePattern = owner.timePattern,
					    time = [],
					    secondIndex = 0,
					    minuteIndex = 0,
					    hourIndex = 0,
					    secondStartIndex = 0,
					    minuteStartIndex = 0,
					    hourStartIndex = 0,
					    second,
					    minute,
					    hour;

					if (value.length === 6) {
						timePattern.forEach(function (type, index) {
							switch (type) {
								case 's':
									secondIndex = index * 2;
									break;
								case 'm':
									minuteIndex = index * 2;
									break;
								case 'h':
									hourIndex = index * 2;
									break;
							}
						});

						hourStartIndex = hourIndex;
						minuteStartIndex = minuteIndex;
						secondStartIndex = secondIndex;

						second = parseInt(value.slice(secondStartIndex, secondStartIndex + 2), 10);
						minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);
						hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);

						time = this.getFixedTime(hour, minute, second);
					}

					if (value.length === 4 && owner.timePattern.indexOf('s') < 0) {
						timePattern.forEach(function (type, index) {
							switch (type) {
								case 'm':
									minuteIndex = index * 2;
									break;
								case 'h':
									hourIndex = index * 2;
									break;
							}
						});

						hourStartIndex = hourIndex;
						minuteStartIndex = minuteIndex;

						second = 0;
						minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);
						hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);

						time = this.getFixedTime(hour, minute, second);
					}

					owner.time = time;

					return time.length === 0 ? value : timePattern.reduce(function (previous, current) {
						switch (current) {
							case 's':
								return previous + owner.addLeadingZero(time[2]);
							case 'm':
								return previous + owner.addLeadingZero(time[1]);
							case 'h':
								return previous + owner.addLeadingZero(time[0]);
						}
					}, '');
				},

				getFixedTime: function getFixedTime(hour, minute, second) {
					second = Math.min(parseInt(second || 0, 10), 60);
					minute = Math.min(minute, 60);
					hour = Math.min(hour, 60);

					return [hour, minute, second];
				},

				addLeadingZero: function addLeadingZero(number) {
					return (number < 10 ? '0' : '') + number;
				}
			};

			module.exports = TimeFormatter;

			/***/
		},
		/* 4 */
		/***/function (module, exports) {

			'use strict';

			var PhoneFormatter = function PhoneFormatter(formatter, delimiter) {
				var owner = this;

				owner.delimiter = delimiter || delimiter === '' ? delimiter : ' ';
				owner.delimiterRE = delimiter ? new RegExp('\\' + delimiter, 'g') : '';

				owner.formatter = formatter;
			};

			PhoneFormatter.prototype = {
				setFormatter: function setFormatter(formatter) {
					this.formatter = formatter;
				},

				format: function format(phoneNumber) {
					var owner = this;

					owner.formatter.clear();

					// only keep number and +
					phoneNumber = phoneNumber.replace(/[^\d+]/g, '');

					// strip non-leading +
					phoneNumber = phoneNumber.replace(/^\+/, 'B').replace(/\+/g, '').replace('B', '+');

					// strip delimiter
					phoneNumber = phoneNumber.replace(owner.delimiterRE, '');

					var result = '',
					    current,
					    validated = false;

					for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {
						current = owner.formatter.inputDigit(phoneNumber.charAt(i));

						// has ()- or space inside
						if (/[\s()-]/g.test(current)) {
							result = current;

							validated = true;
						} else {
							if (!validated) {
								result = current;
							}
							// else: over length input
							// it turns to invalid number again
						}
					}

					// strip ()
					// e.g. US: 7161234567 returns (716) 123-4567
					result = result.replace(/[()]/g, '');
					// replace library delimiter with user customized delimiter
					result = result.replace(/[\s-]/g, owner.delimiter);

					return result;
				}
			};

			module.exports = PhoneFormatter;

			/***/
		},
		/* 5 */
		/***/function (module, exports) {

			'use strict';

			var CreditCardDetector = {
				blocks: {
					uatp: [4, 5, 6],
					amex: [4, 6, 5],
					diners: [4, 6, 4],
					discover: [4, 4, 4, 4],
					mastercard: [4, 4, 4, 4],
					dankort: [4, 4, 4, 4],
					instapayment: [4, 4, 4, 4],
					jcb15: [4, 6, 5],
					jcb: [4, 4, 4, 4],
					maestro: [4, 4, 4, 4],
					visa: [4, 4, 4, 4],
					mir: [4, 4, 4, 4],
					unionPay: [4, 4, 4, 4],
					general: [4, 4, 4, 4],
					generalStrict: [4, 4, 4, 7]
				},

				re: {
					// starts with 1; 15 digits, not starts with 1800 (jcb card)
					uatp: /^(?!1800)1\d{0,14}/,

					// starts with 34/37; 15 digits
					amex: /^3[47]\d{0,13}/,

					// starts with 6011/65/644-649; 16 digits
					discover: /^(?:6011|65\d{0,2}|64[4-9]\d?)\d{0,12}/,

					// starts with 300-305/309 or 36/38/39; 14 digits
					diners: /^3(?:0([0-5]|9)|[689]\d?)\d{0,11}/,

					// starts with 51-55/2221–2720; 16 digits
					mastercard: /^(5[1-5]\d{0,2}|22[2-9]\d{0,1}|2[3-7]\d{0,2})\d{0,12}/,

					// starts with 5019/4175/4571; 16 digits
					dankort: /^(5019|4175|4571)\d{0,12}/,

					// starts with 637-639; 16 digits
					instapayment: /^63[7-9]\d{0,13}/,

					// starts with 2131/1800; 15 digits
					jcb15: /^(?:2131|1800)\d{0,11}/,

					// starts with 2131/1800/35; 16 digits
					jcb: /^(?:35\d{0,2})\d{0,12}/,

					// starts with 50/56-58/6304/67; 16 digits
					maestro: /^(?:5[0678]\d{0,2}|6304|67\d{0,2})\d{0,12}/,

					// starts with 22; 16 digits
					mir: /^220[0-4]\d{0,12}/,

					// starts with 4; 16 digits
					visa: /^4\d{0,15}/,

					// starts with 62; 16 digits
					unionPay: /^62\d{0,14}/
				},

				getInfo: function getInfo(value, strictMode) {
					var blocks = CreditCardDetector.blocks,
					    re = CreditCardDetector.re;

					// Some credit card can have up to 19 digits number.
					// Set strictMode to true will remove the 16 max-length restrain,
					// however, I never found any website validate card number like
					// this, hence probably you don't want to enable this option.
					strictMode = !!strictMode;

					for (var key in re) {
						if (re[key].test(value)) {
							var block;

							if (strictMode) {
								block = blocks.generalStrict;
							} else {
								block = blocks[key];
							}

							return {
								type: key,
								blocks: block
							};
						}
					}

					return {
						type: 'unknown',
						blocks: strictMode ? blocks.generalStrict : blocks.general
					};
				}
			};

			module.exports = CreditCardDetector;

			/***/
		},
		/* 6 */
		/***/function (module, exports) {

			'use strict';

			var Util = {
				noop: function noop() {},

				strip: function strip(value, re) {
					return value.replace(re, '');
				},

				getPostDelimiter: function getPostDelimiter(value, delimiter, delimiters) {
					// single delimiter
					if (delimiters.length === 0) {
						return value.slice(-delimiter.length) === delimiter ? delimiter : '';
					}

					// multiple delimiters
					var matchedDelimiter = '';
					delimiters.forEach(function (current) {
						if (value.slice(-current.length) === current) {
							matchedDelimiter = current;
						}
					});

					return matchedDelimiter;
				},

				getDelimiterREByDelimiter: function getDelimiterREByDelimiter(delimiter) {
					return new RegExp(delimiter.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1'), 'g');
				},

				getNextCursorPosition: function getNextCursorPosition(prevPos, oldValue, newValue, delimiter, delimiters) {
					// If cursor was at the end of value, just place it back.
					// Because new value could contain additional chars.
					if (oldValue.length === prevPos) {
						return newValue.length;
					}

					return prevPos + this.getPositionOffset(prevPos, oldValue, newValue, delimiter, delimiters);
				},

				getPositionOffset: function getPositionOffset(prevPos, oldValue, newValue, delimiter, delimiters) {
					var oldRawValue, newRawValue, lengthOffset;

					oldRawValue = this.stripDelimiters(oldValue.slice(0, prevPos), delimiter, delimiters);
					newRawValue = this.stripDelimiters(newValue.slice(0, prevPos), delimiter, delimiters);
					lengthOffset = oldRawValue.length - newRawValue.length;

					return lengthOffset !== 0 ? lengthOffset / Math.abs(lengthOffset) : 0;
				},

				stripDelimiters: function stripDelimiters(value, delimiter, delimiters) {
					var owner = this;

					// single delimiter
					if (delimiters.length === 0) {
						var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';

						return value.replace(delimiterRE, '');
					}

					// multiple delimiters
					delimiters.forEach(function (current) {
						current.split('').forEach(function (letter) {
							value = value.replace(owner.getDelimiterREByDelimiter(letter), '');
						});
					});

					return value;
				},

				headStr: function headStr(str, length) {
					return str.slice(0, length);
				},

				getMaxLength: function getMaxLength(blocks) {
					return blocks.reduce(function (previous, current) {
						return previous + current;
					}, 0);
				},

				// strip value by prefix length
				// for prefix: PRE
				// (PRE123, 3) -> 123
				// (PR123, 3) -> 23 this happens when user hits backspace in front of "PRE"
				getPrefixStrippedValue: function getPrefixStrippedValue(value, prefix, prefixLength, prevValue) {
					if (value.slice(0, prefixLength) !== prefix) {

						// Check whether if it is a deletion
						if (value.length < prevValue.length) {
							value = value.length > prefixLength ? prevValue : prefix;
						} else {
							var diffIndex = this.getFirstDiffIndex(prefix, value.slice(0, prefixLength));
							value = prefix + value.slice(diffIndex, diffIndex + 1) + value.slice(prefixLength + 1);
						}
					}

					return value.slice(prefixLength);
				},

				getFirstDiffIndex: function getFirstDiffIndex(prev, current) {
					var index = 0;

					while (prev.charAt(index) === current.charAt(index)) {
						if (prev.charAt(index++) === '') {
							return -1;
						}
					}

					return index;
				},

				getFormattedValue: function getFormattedValue(value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {
					var result = '',
					    multipleDelimiters = delimiters.length > 0,
					    currentDelimiter;

					// no options, normal input
					if (blocksLength === 0) {
						return value;
					}

					blocks.forEach(function (length, index) {
						if (value.length > 0) {
							var sub = value.slice(0, length),
							    rest = value.slice(length);

							if (multipleDelimiters) {
								currentDelimiter = delimiters[delimiterLazyShow ? index - 1 : index] || currentDelimiter;
							} else {
								currentDelimiter = delimiter;
							}

							if (delimiterLazyShow) {
								if (index > 0) {
									result += currentDelimiter;
								}

								result += sub;
							} else {
								result += sub;

								if (sub.length === length && index < blocksLength - 1) {
									result += currentDelimiter;
								}
							}

							// update remaining string
							value = rest;
						}
					});

					return result;
				},

				// move cursor to the end
				// the first time user focuses on an input with prefix
				fixPrefixCursor: function fixPrefixCursor(el, prefix, delimiter, delimiters) {
					if (!el) {
						return;
					}

					var val = el.value,
					    appendix = delimiter || delimiters[0] || ' ';

					if (!el.setSelectionRange || !prefix || prefix.length + appendix.length < val.length) {
						return;
					}

					var len = val.length * 2;

					// set timeout to avoid blink
					setTimeout(function () {
						el.setSelectionRange(len, len);
					}, 1);
				},

				setSelection: function setSelection(element, position, doc) {
					if (element !== this.getActiveElement(doc)) {
						return;
					}

					// cursor is already in the end
					if (element && element.value.length <= position) {
						return;
					}

					if (element.createTextRange) {
						var range = element.createTextRange();

						range.move('character', position);
						range.select();
					} else {
						try {
							element.setSelectionRange(position, position);
						} catch (e) {
							// eslint-disable-next-line
							console.warn('The input element type does not support selection');
						}
					}
				},

				getActiveElement: function getActiveElement(parent) {
					var activeElement = parent.activeElement;
					if (activeElement && activeElement.shadowRoot) {
						return this.getActiveElement(activeElement.shadowRoot);
					}
					return activeElement;
				},

				isAndroid: function isAndroid() {
					return navigator && /android/i.test(navigator.userAgent);
				},

				// On Android chrome, the keyup and keydown events
				// always return key code 229 as a composition that
				// buffers the user’s keystrokes
				// see https://github.com/nosir/cleave.js/issues/147
				isAndroidBackspaceKeydown: function isAndroidBackspaceKeydown(lastInputValue, currentInputValue) {
					if (!this.isAndroid() || !lastInputValue || !currentInputValue) {
						return false;
					}

					return currentInputValue === lastInputValue.slice(0, -1);
				}
			};

			module.exports = Util;

			/***/
		},
		/* 7 */
		/***/function (module, exports) {

			/* WEBPACK VAR INJECTION */(function (global) {
				'use strict';

				/**
     * Props Assignment
     *
     * Separate this, so react module can share the usage
     */

				var DefaultProperties = {
					// Maybe change to object-assign
					// for now just keep it as simple
					assign: function assign(target, opts) {
						target = target || {};
						opts = opts || {};

						// credit card
						target.creditCard = !!opts.creditCard;
						target.creditCardStrictMode = !!opts.creditCardStrictMode;
						target.creditCardType = '';
						target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || function () {};

						// phone
						target.phone = !!opts.phone;
						target.phoneRegionCode = opts.phoneRegionCode || 'AU';
						target.phoneFormatter = {};

						// time
						target.time = !!opts.time;
						target.timePattern = opts.timePattern || ['h', 'm', 's'];
						target.timeFormat = opts.timeFormat || '24';
						target.timeFormatter = {};

						// date
						target.date = !!opts.date;
						target.datePattern = opts.datePattern || ['d', 'm', 'Y'];
						target.dateFormatter = {};

						// numeral
						target.numeral = !!opts.numeral;
						target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;
						target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;
						target.numeralDecimalMark = opts.numeralDecimalMark || '.';
						target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';
						target.numeralPositiveOnly = !!opts.numeralPositiveOnly;
						target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;

						// others
						target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;

						target.uppercase = !!opts.uppercase;
						target.lowercase = !!opts.lowercase;

						target.prefix = target.creditCard || target.date ? '' : opts.prefix || '';
						target.noImmediatePrefix = !!opts.noImmediatePrefix;
						target.prefixLength = target.prefix.length;
						target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;
						target.copyDelimiter = !!opts.copyDelimiter;

						target.initValue = opts.initValue !== undefined && opts.initValue !== null ? opts.initValue.toString() : '';

						target.delimiter = opts.delimiter || opts.delimiter === '' ? opts.delimiter : opts.date ? '/' : opts.time ? ':' : opts.numeral ? ',' : opts.phone ? ' ' : ' ';
						target.delimiterLength = target.delimiter.length;
						target.delimiterLazyShow = !!opts.delimiterLazyShow;
						target.delimiters = opts.delimiters || [];

						target.blocks = opts.blocks || [];
						target.blocksLength = target.blocks.length;

						target.root = (typeof global === 'undefined' ? 'undefined' : _typeof(global)) === 'object' && global ? global : window;
						target.document = opts.document || target.root.document;

						target.maxLength = 0;

						target.backspace = false;
						target.result = '';

						target.onValueChanged = opts.onValueChanged || function () {};

						return target;
					}
				};

				module.exports = DefaultProperties;

				/* WEBPACK VAR INJECTION */
			}).call(exports, function () {
				return this;
			}());

			/***/
		}]
		/******/)
	);
});
;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function () {
  function n(n, l) {
    var t = n.split("."),
        e = P;t[0] in e || !e.execScript || e.execScript("var " + t[0]);for (var r; t.length && (r = t.shift());) {
      t.length || void 0 === l ? e = e[r] ? e[r] : e[r] = {} : e[r] = l;
    }
  }function l(n, l) {
    function t() {}t.prototype = l.prototype, n.M = l.prototype, n.prototype = new t(), n.prototype.constructor = n, n.N = function (n, t, e) {
      for (var r = Array(arguments.length - 2), u = 2; u < arguments.length; u++) {
        r[u - 2] = arguments[u];
      }return l.prototype[t].apply(n, r);
    };
  }function t(n, l) {
    null != n && this.a.apply(this, arguments);
  }function e(n) {
    n.b = "";
  }function r(n, l) {
    n.sort(l || u);
  }function u(n, l) {
    return n > l ? 1 : n < l ? -1 : 0;
  }function i(n) {
    var l,
        t = [],
        e = 0;for (l in n) {
      t[e++] = n[l];
    }return t;
  }function a(n, l) {
    this.b = n, this.a = {};for (var t = 0; t < l.length; t++) {
      var e = l[t];this.a[e.b] = e;
    }
  }function o(n) {
    return n = i(n.a), r(n, function (n, l) {
      return n.b - l.b;
    }), n;
  }function s(n, l) {
    switch (this.b = n, this.g = !!l.v, this.a = l.c, this.i = l.type, this.h = !1, this.a) {case Y:case k:case J:case L:case O:case T:case q:
        this.h = !0;}this.f = l.defaultValue;
  }function f() {
    this.a = {}, this.f = this.j().a, this.b = this.g = null;
  }function p(n, l) {
    for (var t = o(n.j()), e = 0; e < t.length; e++) {
      var r = t[e],
          u = r.b;if (null != l.a[u]) {
        n.b && delete n.b[r.b];var i = 11 == r.a || 10 == r.a;if (r.g) for (var r = c(l, u) || [], a = 0; a < r.length; a++) {
          var s = n,
              f = u,
              h = i ? r[a].clone() : r[a];s.a[f] || (s.a[f] = []), s.a[f].push(h), s.b && delete s.b[f];
        } else r = c(l, u), i ? (i = c(n, u)) ? p(i, r) : b(n, u, r.clone()) : b(n, u, r);
      }
    }
  }function c(n, l) {
    var t = n.a[l];if (null == t) return null;if (n.g) {
      if (!(l in n.b)) {
        var e = n.g,
            r = n.f[l];if (null != t) if (r.g) {
          for (var u = [], i = 0; i < t.length; i++) {
            u[i] = e.b(r, t[i]);
          }t = u;
        } else t = e.b(r, t);return n.b[l] = t;
      }return n.b[l];
    }return t;
  }function h(n, l, t) {
    var e = c(n, l);return n.f[l].g ? e[t || 0] : e;
  }function g(n, l) {
    var t;if (null != n.a[l]) t = h(n, l, void 0);else n: {
      if (t = n.f[l], void 0 === t.f) {
        var e = t.i;if (e === Boolean) t.f = !1;else if (e === Number) t.f = 0;else {
          if (e !== String) {
            t = new e();break n;
          }t.f = t.h ? "0" : "";
        }
      }t = t.f;
    }return t;
  }function m(n, l) {
    return n.f[l].g ? null != n.a[l] ? n.a[l].length : 0 : null != n.a[l] ? 1 : 0;
  }function b(n, l, t) {
    n.a[l] = t, n.b && (n.b[l] = t);
  }function d(n, l) {
    var t,
        e = [];for (t in l) {
      0 != t && e.push(new s(t, l[t]));
    }return new a(n, e);
  } /*
    Protocol Buffer 2 Copyright 2008 Google Inc.
    All other code copyright its respective owners.
    Copyright (C) 2010 The Libphonenumber Authors
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    */
  function y() {
    f.call(this);
  }function v() {
    f.call(this);
  }function _() {
    f.call(this);
  }function S() {}function w() {}function x() {} /*
                                                 Copyright (C) 2010 The Libphonenumber Authors.
                                                 Licensed under the Apache License, Version 2.0 (the "License");
                                                 you may not use this file except in compliance with the License.
                                                 You may obtain a copy of the License at
                                                 http://www.apache.org/licenses/LICENSE-2.0
                                                 Unless required by applicable law or agreed to in writing, software
                                                 distributed under the License is distributed on an "AS IS" BASIS,
                                                 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
                                                 See the License for the specific language governing permissions and
                                                 limitations under the License.
                                                 */
  function $() {
    this.a = {};
  }function A(n) {
    return 0 == n.length || un.test(n);
  }function N(n, l) {
    if (null == l) return null;l = l.toUpperCase();var t = n.a[l];if (null == t) {
      if (t = ln[l], null == t) return null;t = new x().a(_.j(), t), n.a[l] = t;
    }return t;
  }function j(n) {
    return n = nn[n], null == n ? "ZZ" : n[0];
  }function R(n) {
    this.H = RegExp(" "), this.C = "", this.m = new t(), this.w = "", this.i = new t(), this.u = new t(), this.l = !0, this.A = this.o = this.F = !1, this.G = $.b(), this.s = 0, this.b = new t(), this.B = !1, this.h = "", this.a = new t(), this.f = [], this.D = n, this.J = this.g = E(this, this.D);
  }function E(n, l) {
    var t;if (null != l && isNaN(l) && l.toUpperCase() in ln) {
      if (t = N(n.G, l), null == t) throw Error("Invalid region code: " + l);t = g(t, 10);
    } else t = 0;return t = N(n.G, j(t)), null != t ? t : an;
  }function B(n) {
    for (var l = n.f.length, t = 0; t < l; ++t) {
      var r = n.f[t],
          u = g(r, 1);if (n.w == u) return !1;var i;i = n;var a = r,
          o = g(a, 1);if (-1 != o.indexOf("|")) i = !1;else {
        o = o.replace(on, "\\d"), o = o.replace(sn, "\\d"), e(i.m);var s;s = i;var a = g(a, 2),
            f = "999999999999999".match(o)[0];f.length < s.a.b.length ? s = "" : (s = f.replace(new RegExp(o, "g"), a), s = s.replace(RegExp("9", "g"), " ")), 0 < s.length ? (i.m.a(s), i = !0) : i = !1;
      }if (i) return n.w = u, n.B = pn.test(h(r, 4)), n.s = 0, !0;
    }return n.l = !1;
  }function F(n, l) {
    for (var t = [], e = l.length - 3, r = n.f.length, u = 0; u < r; ++u) {
      var i = n.f[u];0 == m(i, 3) ? t.push(n.f[u]) : (i = h(i, 3, Math.min(e, m(i, 3) - 1)), 0 == l.search(i) && t.push(n.f[u]));
    }n.f = t;
  }function C(n, l) {
    n.i.a(l);var t = l;if (rn.test(t) || 1 == n.i.b.length && en.test(t)) {
      var r,
          t = l;"+" == t ? (r = t, n.u.a(t)) : (r = tn[t], n.u.a(r), n.a.a(r)), l = r;
    } else n.l = !1, n.F = !0;if (!n.l) {
      if (!n.F) if (Z(n)) {
        if (G(n)) return I(n);
      } else if (0 < n.h.length && (t = n.a.toString(), e(n.a), n.a.a(n.h), n.a.a(t), t = n.b.toString(), r = t.lastIndexOf(n.h), e(n.b), n.b.a(t.substring(0, r))), n.h != V(n)) return n.b.a(" "), I(n);return n.i.toString();
    }switch (n.u.b.length) {case 0:case 1:case 2:
        return n.i.toString();case 3:
        if (!Z(n)) return n.h = V(n), K(n);n.A = !0;default:
        return n.A ? (G(n) && (n.A = !1), n.b.toString() + n.a.toString()) : 0 < n.f.length ? (t = H(n, l), r = D(n), 0 < r.length ? r : (F(n, n.a.toString()), B(n) ? M(n) : n.l ? U(n, t) : n.i.toString())) : K(n);}
  }function I(n) {
    return n.l = !0, n.A = !1, n.f = [], n.s = 0, e(n.m), n.w = "", K(n);
  }function D(n) {
    for (var l = n.a.toString(), t = n.f.length, e = 0; e < t; ++e) {
      var r = n.f[e],
          u = g(r, 1);if (new RegExp("^(?:" + u + ")$").test(l)) return n.B = pn.test(h(r, 4)), l = l.replace(new RegExp(u, "g"), h(r, 2)), U(n, l);
    }return "";
  }function U(n, l) {
    var t = n.b.b.length;return n.B && 0 < t && " " != n.b.toString().charAt(t - 1) ? n.b + " " + l : n.b + l;
  }function K(n) {
    var l = n.a.toString();if (3 <= l.length) {
      for (var t = n.o && 0 == n.h.length && 0 < m(n.g, 20) ? c(n.g, 20) || [] : c(n.g, 19) || [], e = t.length, r = 0; r < e; ++r) {
        var u = t[r];0 < n.h.length && A(g(u, 4)) && !h(u, 6) && null == u.a[5] || (0 != n.h.length || n.o || A(g(u, 4)) || h(u, 6)) && fn.test(g(u, 2)) && n.f.push(u);
      }return F(n, l), l = D(n), 0 < l.length ? l : B(n) ? M(n) : n.i.toString();
    }return U(n, l);
  }function M(n) {
    var l = n.a.toString(),
        t = l.length;if (0 < t) {
      for (var e = "", r = 0; r < t; r++) {
        e = H(n, l.charAt(r));
      }return n.l ? U(n, e) : n.i.toString();
    }return n.b.toString();
  }function V(n) {
    var l,
        t = n.a.toString(),
        r = 0;return 1 != h(n.g, 10) ? l = !1 : (l = n.a.toString(), l = "1" == l.charAt(0) && "0" != l.charAt(1) && "1" != l.charAt(1)), l ? (r = 1, n.b.a("1").a(" "), n.o = !0) : null != n.g.a[15] && (l = new RegExp("^(?:" + h(n.g, 15) + ")"), l = t.match(l), null != l && null != l[0] && 0 < l[0].length && (n.o = !0, r = l[0].length, n.b.a(t.substring(0, r)))), e(n.a), n.a.a(t.substring(r)), t.substring(0, r);
  }function Z(n) {
    var l = n.u.toString(),
        t = new RegExp("^(?:\\+|" + h(n.g, 11) + ")"),
        t = l.match(t);return null != t && null != t[0] && 0 < t[0].length && (n.o = !0, t = t[0].length, e(n.a), n.a.a(l.substring(t)), e(n.b), n.b.a(l.substring(0, t)), "+" != l.charAt(0) && n.b.a(" "), !0);
  }function G(n) {
    if (0 == n.a.b.length) return !1;var l,
        r = new t();n: {
      if (l = n.a.toString(), 0 != l.length && "0" != l.charAt(0)) for (var u, i = l.length, a = 1; 3 >= a && a <= i; ++a) {
        if (u = parseInt(l.substring(0, a), 10), u in nn) {
          r.a(l.substring(a)), l = u;break n;
        }
      }l = 0;
    }return 0 != l && (e(n.a), n.a.a(r.toString()), r = j(l), "001" == r ? n.g = N(n.G, "" + l) : r != n.D && (n.g = E(n, r)), n.b.a("" + l).a(" "), n.h = "", !0);
  }function H(n, l) {
    var t = n.m.toString();if (0 <= t.substring(n.s).search(n.H)) {
      var r = t.search(n.H),
          t = t.replace(n.H, l);return e(n.m), n.m.a(t), n.s = r, t.substring(0, n.s + 1);
    }return 1 == n.f.length && (n.l = !1), n.w = "", n.i.toString();
  }var P = this;t.prototype.b = "", t.prototype.set = function (n) {
    this.b = "" + n;
  }, t.prototype.a = function (n, l, t) {
    if (this.b += String(n), null != l) for (var e = 1; e < arguments.length; e++) {
      this.b += arguments[e];
    }return this;
  }, t.prototype.toString = function () {
    return this.b;
  };var q = 1,
      T = 2,
      Y = 3,
      k = 4,
      J = 6,
      L = 16,
      O = 18;f.prototype.set = function (n, l) {
    b(this, n.b, l);
  }, f.prototype.clone = function () {
    var n = new this.constructor();return n != this && (n.a = {}, n.b && (n.b = {}), p(n, this)), n;
  }, l(y, f);var z = null;l(v, f);var Q = null;l(_, f);var W = null;y.prototype.j = function () {
    var n = z;return n || (z = n = d(y, { 0: { name: "NumberFormat", I: "i18n.phonenumbers.NumberFormat" }, 1: { name: "pattern", required: !0, c: 9, type: String }, 2: { name: "format", required: !0, c: 9, type: String }, 3: { name: "leading_digits_pattern", v: !0, c: 9, type: String }, 4: { name: "national_prefix_formatting_rule", c: 9, type: String }, 6: { name: "national_prefix_optional_when_formatting", c: 8, defaultValue: !1, type: Boolean }, 5: { name: "domestic_carrier_code_formatting_rule", c: 9, type: String } })), n;
  }, y.j = y.prototype.j, v.prototype.j = function () {
    var n = Q;return n || (Q = n = d(v, { 0: { name: "PhoneNumberDesc", I: "i18n.phonenumbers.PhoneNumberDesc" }, 2: { name: "national_number_pattern", c: 9, type: String }, 9: { name: "possible_length", v: !0, c: 5, type: Number }, 10: { name: "possible_length_local_only", v: !0, c: 5, type: Number }, 6: { name: "example_number", c: 9, type: String } })), n;
  }, v.j = v.prototype.j, _.prototype.j = function () {
    var n = W;return n || (W = n = d(_, { 0: { name: "PhoneMetadata", I: "i18n.phonenumbers.PhoneMetadata" }, 1: { name: "general_desc", c: 11, type: v }, 2: { name: "fixed_line", c: 11, type: v }, 3: { name: "mobile", c: 11, type: v }, 4: { name: "toll_free", c: 11, type: v }, 5: { name: "premium_rate", c: 11, type: v }, 6: { name: "shared_cost", c: 11, type: v }, 7: { name: "personal_number", c: 11, type: v }, 8: { name: "voip", c: 11, type: v }, 21: { name: "pager", c: 11, type: v }, 25: { name: "uan", c: 11, type: v }, 27: { name: "emergency", c: 11, type: v }, 28: { name: "voicemail", c: 11, type: v }, 29: { name: "short_code", c: 11, type: v }, 30: { name: "standard_rate", c: 11, type: v }, 31: { name: "carrier_specific", c: 11, type: v }, 33: { name: "sms_services", c: 11, type: v }, 24: { name: "no_international_dialling", c: 11, type: v }, 9: { name: "id", required: !0, c: 9, type: String }, 10: { name: "country_code", c: 5, type: Number }, 11: { name: "international_prefix", c: 9, type: String }, 17: { name: "preferred_international_prefix", c: 9, type: String }, 12: { name: "national_prefix", c: 9, type: String }, 13: { name: "preferred_extn_prefix", c: 9, type: String }, 15: { name: "national_prefix_for_parsing", c: 9, type: String }, 16: { name: "national_prefix_transform_rule", c: 9, type: String }, 18: { name: "same_mobile_and_fixed_line_pattern", c: 8, defaultValue: !1, type: Boolean }, 19: { name: "number_format", v: !0, c: 11, type: y }, 20: { name: "intl_number_format", v: !0, c: 11, type: y }, 22: { name: "main_country_for_code", c: 8, defaultValue: !1, type: Boolean }, 23: { name: "leading_digits", c: 9, type: String }, 26: { name: "leading_zero_possible", c: 8, defaultValue: !1, type: Boolean } })), n;
  }, _.j = _.prototype.j, S.prototype.a = function (n) {
    throw new n.b(), Error("Unimplemented");
  }, S.prototype.b = function (n, l) {
    if (11 == n.a || 10 == n.a) return l instanceof f ? l : this.a(n.i.prototype.j(), l);if (14 == n.a) {
      if ("string" == typeof l && X.test(l)) {
        var t = Number(l);if (0 < t) return t;
      }return l;
    }if (!n.h) return l;if (t = n.i, t === String) {
      if ("number" == typeof l) return String(l);
    } else if (t === Number && "string" == typeof l && ("Infinity" === l || "-Infinity" === l || "NaN" === l || X.test(l))) return Number(l);return l;
  };var X = /^-?[0-9]+$/;l(w, S), w.prototype.a = function (n, l) {
    var t = new n.b();return t.g = this, t.a = l, t.b = {}, t;
  }, l(x, w), x.prototype.b = function (n, l) {
    return 8 == n.a ? !!l : S.prototype.b.apply(this, arguments);
  }, x.prototype.a = function (n, l) {
    return x.M.a.call(this, n, l);
  }; /*
     Copyright (C) 2010 The Libphonenumber Authors
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
     http://www.apache.org/licenses/LICENSE-2.0
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
     */
  var nn = { 7: ["RU", "KZ"] },
      ln = { KZ: [null, [null, null, "(?:33622|(?:7\\d|80)\\d{3})\\d{5}", null, null, null, null, null, null, [10]], [null, null, "(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9])|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}", null, null, null, "7123456789"], [null, null, "7(?:0[0-2578]|47|6[02-4]|7[15-8]|85)\\d{7}", null, null, null, "7710009998"], [null, null, "800\\d{7}", null, null, null, "8001234567"], [null, null, "809\\d{7}", null, null, null, "8091234567"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, "808\\d{7}", null, null, null, "8081234567"], [null, null, "751\\d{7}", null, null, null, "7511234567"], "KZ", 7, "810", "8", null, null, "8", null, "8~10", null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "33|7", [null, null, "751\\d{7}"], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]], RU: [null, [null, null, "[347-9]\\d{9}", null, null, null, null, null, null, [10], [7]], [null, null, "(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}", null, null, null, "3011234567", null, null, null, [7]], [null, null, "9\\d{9}", null, null, null, "9123456789"], [null, null, "80[04]\\d{7}", null, null, null, "8001234567"], [null, null, "80[39]\\d{7}", null, null, null, "8091234567"], [null, null, null, null, null, null, null, null, null, [-1]], [null, null, "808\\d{7}", null, null, null, "8081234567"], [null, null, null, null, null, null, null, null, null, [-1]], "RU", 7, "810", "8", null, null, "8", null, "8~10", null, [[null, "(\\d{3})(\\d{2})(\\d{2})", "$1-$2-$3"], [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", null, 1], [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)", null, 1]], [[null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", null, 1], [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)", null, 1]], [null, null, null, null, null, null, null, null, null, [-1]], 1, "3[04-689]|[489]", [null, null, null, null, null, null, null, null, null, [-1]], [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]] };$.b = function () {
    return $.a ? $.a : $.a = new $();
  };var tn = { 0: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", "０": "0", "１": "1", "２": "2", "３": "3", "４": "4", "５": "5", "６": "6", "７": "7", "８": "8", "９": "9", "٠": "0", "١": "1", "٢": "2", "٣": "3", "٤": "4", "٥": "5", "٦": "6", "٧": "7", "٨": "8", "٩": "9", "۰": "0", "۱": "1", "۲": "2", "۳": "3", "۴": "4", "۵": "5", "۶": "6", "۷": "7", "۸": "8", "۹": "9" },
      en = RegExp("[+＋]+"),
      rn = RegExp("([0-9０-９٠-٩۰-۹])"),
      un = /^\(?\$1\)?$/,
      an = new _();b(an, 11, "NA");var on = /\[([^\[\]])*\]/g,
      sn = /\d(?=[^,}][^,}])/g,
      fn = RegExp("^[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]*(\\$\\d[-x‐-―−ー－-／  ­​⁠　()（）［］.\\[\\]/~⁓∼～]*)+$"),
      pn = /[- ]/;R.prototype.K = function () {
    this.C = "", e(this.i), e(this.u), e(this.m), this.s = 0, this.w = "", e(this.b), this.h = "", e(this.a), this.l = !0, this.A = this.o = this.F = !1, this.f = [], this.B = !1, this.g != this.J && (this.g = E(this, this.D));
  }, R.prototype.L = function (n) {
    return this.C = C(this, n);
  }, n("Cleave.AsYouTypeFormatter", R), n("Cleave.AsYouTypeFormatter.prototype.inputDigit", R.prototype.L), n("Cleave.AsYouTypeFormatter.prototype.clear", R.prototype.K);
}.call("object" == (typeof global === "undefined" ? "undefined" : _typeof(global)) && global ? global : window);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ }),
/* 166 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RRadioGroup_vue__ = __webpack_require__(167);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RRadio_vue__ = __webpack_require__(169);
/* unused harmony reexport RRadioGroup */
/* unused harmony reexport RRadio */





/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RRadioGroup_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-radio-group', __WEBPACK_IMPORTED_MODULE_0__RRadioGroup_vue__["a" /* default */]);
  Vue.component('r-radio', __WEBPACK_IMPORTED_MODULE_1__RRadio_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RRadioGroup_vue__["a" /* default */]);

/***/ }),
/* 167 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RRadioGroup_vue__ = __webpack_require__(46);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(168)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RRadioGroup_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 168 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 169 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RRadio_vue__ = __webpack_require__(47);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(170)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RRadio_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 170 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 171 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    return {
      tabFocused: false
    };
  }
});

/***/ }),
/* 172 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RForm_vue__ = __webpack_require__(173);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RForm_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-form', __WEBPACK_IMPORTED_MODULE_0__RForm_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RForm_vue__["a" /* default */]);

/***/ }),
/* 173 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RForm_vue__ = __webpack_require__(48);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RForm_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 174 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RFormGroup_vue__ = __webpack_require__(175);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RFormGroup_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-form-group', __WEBPACK_IMPORTED_MODULE_0__RFormGroup_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RFormGroup_vue__["a" /* default */]);

/***/ }),
/* 175 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RFormGroup_vue__ = __webpack_require__(49);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6024cd73_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RFormGroup_vue__ = __webpack_require__(177);
function injectStyle (ssrContext) {
  __webpack_require__(176)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RFormGroup_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_6024cd73_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RFormGroup_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 176 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 177 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"form-group",class:_vm.classes},[(_vm.label || _vm.$slots.label)?_c('label',{staticClass:"form-group__label",class:_vm.labelClasses},[(_vm.label)?_c('span',{domProps:{"innerHTML":_vm._s(_vm.label)}}):_c('span',[_vm._t("label")],2),_vm._v(" "),(_vm.required)?_c('sup',{staticClass:"form-group__required"},[_vm._v("*")]):_vm._e(),_vm._v(" "),_vm._t("additional")],2):_vm._e(),_vm._v(" "),(_vm.$slots.default)?_c('div',{staticClass:"form-group__control",class:_vm.controlClasses},[_vm._t("default")],2):_vm._e()])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 178 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RFormFieldError_vue__ = __webpack_require__(179);
/* unused harmony reexport RFormFieldError */




/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RFormFieldError_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-form-field-error', __WEBPACK_IMPORTED_MODULE_0__RFormFieldError_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RFormFieldError_vue__["a" /* default */]);

/***/ }),
/* 179 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RFormFieldError_vue__ = __webpack_require__(50);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(180)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RFormFieldError_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 180 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 181 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RCard_vue__ = __webpack_require__(19);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RCardMedia_vue__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RCardTitle_vue__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RCardActions_vue__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RCardText_vue__ = __webpack_require__(24);
/* unused harmony reexport RCard */
/* unused harmony reexport RCardMedia */
/* unused harmony reexport RCardTitle */
/* unused harmony reexport RCardActions */
/* unused harmony reexport RCardText */








/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RCard_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-card', __WEBPACK_IMPORTED_MODULE_0__RCard_vue__["a" /* default */]);
  Vue.component('r-card-media', __WEBPACK_IMPORTED_MODULE_1__RCardMedia_vue__["a" /* default */]);
  Vue.component('r-card-title', __WEBPACK_IMPORTED_MODULE_2__RCardTitle_vue__["a" /* default */]);
  Vue.component('r-card-actions', __WEBPACK_IMPORTED_MODULE_3__RCardActions_vue__["a" /* default */]);
  Vue.component('r-card-text', __WEBPACK_IMPORTED_MODULE_4__RCardText_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RCard_vue__["a" /* default */]);

/***/ }),
/* 182 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 183 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardMedia_vue__ = __webpack_require__(52);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardMedia_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardTitle_vue__ = __webpack_require__(53);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RCardTitle_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 185 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RToolbar_vue__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RToolbarItems_vue__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RToolbarTitle_vue__ = __webpack_require__(189);
/* unused harmony reexport RToolbar */
/* unused harmony reexport RToolbarTitle */
/* unused harmony reexport RToolbarItems */






/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RToolbar_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-toolbar', __WEBPACK_IMPORTED_MODULE_0__RToolbar_vue__["a" /* default */]);
  Vue.component('r-toolbar-items', __WEBPACK_IMPORTED_MODULE_1__RToolbarItems_vue__["a" /* default */]);
  Vue.component('r-toolbar-title', __WEBPACK_IMPORTED_MODULE_2__RToolbarTitle_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RToolbar_vue__["a" /* default */]);

/***/ }),
/* 186 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToolbar_vue__ = __webpack_require__(56);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(187)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToolbar_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 187 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 188 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToolbarItems_vue__ = __webpack_require__(57);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToolbarItems_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 189 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToolbarTitle_vue__ = __webpack_require__(58);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToolbarTitle_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 190 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RDialog_vue__ = __webpack_require__(59);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RDialogCard_vue__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RDialogHeader_vue__ = __webpack_require__(27);
/* unused harmony reexport RDialog */
/* unused harmony reexport RDialogCard */
/* unused harmony reexport RDialogHeader */






/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RDialog_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-dialog', __WEBPACK_IMPORTED_MODULE_0__RDialog_vue__["a" /* default */]);
  Vue.component('r-dialog-card', __WEBPACK_IMPORTED_MODULE_1__RDialogCard_vue__["a" /* default */]);
  Vue.component('r-dialog-header', __WEBPACK_IMPORTED_MODULE_2__RDialogHeader_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RDialog_vue__["a" /* default */]);

/***/ }),
/* 191 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 192 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__colorable__ = __webpack_require__(2);
function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }




/* harmony default export */ __webpack_exports__["a"] = ({
  name: 'overlayable',

  data: function data() {
    return {
      overlay: null,
      overlayOffset: 0,
      overlayTimeout: null,
      overlayTransitionDuration: 300 + 150 // transition + delay
    };
  },


  mixins: [__WEBPACK_IMPORTED_MODULE_1__colorable__["a" /* default */]],

  props: {
    hideOverlay: Boolean,
    transparentOverlay: Boolean,
    safariBlurOverlay: {
      type: Boolean,
      default: true
    },
    hideGlobalScroll: Boolean
  },

  beforeDestroy: function beforeDestroy() {
    this.removeOverlay();
  },


  watch: {
    fullscreen: function fullscreen(val) {
      if (val) {
        this.overlay && this.removeOverlay();
      } else if (!this.hideOverlay && !this.overlay) {
        this.genOverlay();
      }
    }
  },

  methods: {
    genOverlay: function genOverlay() {
      var _this = this;

      // If fn is called and timeout is active
      // or overlay already exists
      // cancel removal of overlay and re-add active
      if (!this.isActive || this.hideOverlay || this.isActive && this.overlayTimeout || this.overlay) {
        clearTimeout(this.overlayTimeout);

        return this.overlay && this.overlay.classList.add('overlay_active');
      }

      this.overlay = document.createElement('div');
      this.overlay.className = ['overlay'].concat(_toConsumableArray(Object.keys(this.addBackgroundColorClassChecks()))).join(' ');

      if (this.absolute) {
        this.overlay.classList.add('overlay_absolute');
      }

      if (this.transparentOverlay) {
        this.overlay.classList.add('overlay_transparent');
      }

      if (this.safariBlurOverlay && Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["v" /* isBrowserSafari */])()) {
        this.overlay.classList.add('overlay_safari-blur');
      }

      this.hideScroll();

      var parent = this.absolute ? this.$el.parentNode : document.querySelector('[data-app]');

      parent && parent.insertBefore(this.overlay, parent.firstChild);

      this.overlay.clientHeight; // Force repaint
      requestAnimationFrame(function () {
        if (!_this.overlay) {
          return;
        }
        _this.overlay.classList.add('overlay_active');

        if (_this.activeZIndex !== undefined) {
          _this.overlay.style.zIndex = _this.activeZIndex - 1;
        }
      });

      return true;
    },
    removeOverlay: function removeOverlay() {
      var _this2 = this;

      var activeElements = this.getActiveStackedElements();

      if (!this.overlay) {
        return this.showScroll();
      }

      this.overlay.classList.remove('overlay_active');

      this.overlayTimeout = setTimeout(function () {
        // IE11 Fix
        try {
          _this2.overlay.parentNode.removeChild(_this2.overlay);
          _this2.overlay = null;
          if (activeElements.length <= 1) {
            _this2.showScroll();
          } else {
            _this2.removeScrollListeners();
          }
        } catch (e) {}

        clearTimeout(_this2.overlayTimeout);
        _this2.overlayTimeout = null;
      }, this.overlayTransitionDuration);
    },

    /**
     * @param {Event} e
     * @returns void
     */
    scrollListener: function scrollListener(e) {
      if (e.type === 'keydown') {
        if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName)) {
          return;
        }

        var up = [38, 33];
        var down = [40, 34];

        if (up.includes(e.keyCode)) {
          e.deltaY = -1;
        } else if (down.includes(e.keyCode)) {
          e.deltaY = 1;
        } else {
          return;
        }
      }

      if (e.target === this.overlay || e.type !== 'keydown' && e.target === document.body || this.checkPath(e)) {
        e.preventDefault();
      }
    },
    hasScrollbar: function hasScrollbar(el) {
      if (!el || el.nodeType !== Node.ELEMENT_NODE) {
        return false;
      }
      var style = window.getComputedStyle(el);
      return ['auto', 'scroll'].includes(style['overflow-y']) && el.scrollHeight > el.clientHeight;
    },
    shouldScroll: function shouldScroll(el, delta) {
      if (el.scrollTop === 0 && delta < 0) {
        return true;
      }
      return el.scrollTop + el.clientHeight === el.scrollHeight && delta > 0;
    },
    isInside: function isInside(el, parent) {
      if (el === parent) {
        return true;
      } else if (el === null || el === document.body) {
        return false;
      } else {
        return this.isInside(el.parentNode, parent);
      }
    },

    /**
     * @param {Event} e
     * @returns boolean
     */
    checkPath: function checkPath(e) {
      var path = e.path || this.composedPath(e);
      var delta = e.deltaY || -e.wheelDelta;

      if (e.type === 'keydown' && path[0] === document.body) {
        var dialog = this.$refs.dialog;
        var selected = window.getSelection().anchorNode;
        if (this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {
          return this.shouldScroll(dialog, delta);
        }
        return true;
      }

      for (var index = 0; index < path.length; index++) {
        var el = path[index];

        if (el === document) {
          return true;
        }
        if (el === document.documentElement) {
          return true;
        }
        if (el === this.$refs.content) {
          return true;
        }

        if (this.hasScrollbar(el)) {
          return this.shouldScroll(el, delta);
        }
      }

      return true;
    },

    /**
     * Polyfill for Event.prototype.composedPath
     * @param {Event} e
     * @returns Element[]
     */
    composedPath: function composedPath(e) {
      if (e.composedPath) {
        return e.composedPath();
      }

      var path = [];
      var el = e.target;

      while (el) {
        path.push(el);

        if (el.tagName === 'HTML') {
          path.push(document);
          path.push(window);

          return path;
        }

        el = el.parentElement;
      }
    },
    hideScroll: function hideScroll() {
      if (this.hideGlobalScroll) {
        document.documentElement.classList.add('overflow-y-hidden');
      }
      this.addScrollListeners(this.scrollListener.bind(this));
    },
    showScroll: function showScroll() {
      document.documentElement.classList.remove('overflow-y-hidden');
      this.removeScrollListeners();
    },
    addScrollListeners: function addScrollListeners(scrollListener) {
      window.addEventListener('wheel', scrollListener);
      window.addEventListener('keydown', scrollListener);
      this._scrollListener = scrollListener;
    },
    removeScrollListeners: function removeScrollListeners() {
      window.removeEventListener('wheel', this._scrollListener);
      window.removeEventListener('keydown', this._scrollListener);
      this._scrollListener = null;
      delete this._scrollListener;
    }
  }
});

/***/ }),
/* 193 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialogCard_vue__ = __webpack_require__(63);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3bf2e00a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RDialogCard_vue__ = __webpack_require__(196);
function injectStyle (ssrContext) {
  __webpack_require__(194)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialogCard_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3bf2e00a_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RDialogCard_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 194 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 195 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 196 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('r-card',{class:_vm.classes,attrs:{"id":_vm.dialogCardId}},[_c('div',{staticClass:"dialog-card__header-wrapper"},[(_vm.$slots.header)?[_vm._t("header")]:(_vm.$slots.title || _vm.$slots.close)?_c('r-dialog-header',{class:_vm.dialogHeaderClasses,attrs:{"flat":_vm.headerFlat}},[_vm._t("title")],2):_vm._e()],2),_vm._v(" "),_c('div',{staticClass:"dialog-card__close"},[(!_vm.$slots.close)?_c('r-btn',{attrs:{"ripple":"","icon":"","flat":"","round":"","large":""},nativeOn:{"click":function($event){$event.stopPropagation();_vm.closeDialog()}}},[_c('md-close')],1):_vm._t("close")],2),_vm._v(" "),_c('r-card-text',{directives:[{name:"scroll",rawName:"v-scroll",value:({ callback: _vm.onContentScroll, target: _vm.dialogCardScrollTarget }),expression:"{ callback: onContentScroll, target: dialogCardScrollTarget }"}],ref:"text",staticClass:"dialog-card__inner"},[_vm._t("default")],2),_vm._v(" "),(_vm.$slots.actions)?_c('r-card-actions',{ref:"actions",class:_vm.actionsClasses,style:(_vm.actionsStyles)},[_vm._t("actions")],2):_vm._e()],1)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 197 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RDialogCard_vue__ = __webpack_require__(198);
// TODO: REMOVE THIS COMPONENT LATER


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RDialogCard_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-dialog-card', __WEBPACK_IMPORTED_MODULE_0__RDialogCard_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RDialogCard_vue__["a" /* default */]);

/***/ }),
/* 198 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialogCard_vue__ = __webpack_require__(65);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_32ce97b6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RDialogCard_vue__ = __webpack_require__(200);
function injectStyle (ssrContext) {
  __webpack_require__(199)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RDialogCard_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_32ce97b6_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RDialogCard_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 199 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 200 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('r-card',{class:_vm.classes,attrs:{"id":_vm.dialogCardId}},[_c('div',{staticClass:"dialog-card__header-wrapper"},[(_vm.$slots.header)?[_vm._t("header")]:(_vm.$slots.title || _vm.$slots.close)?_c('r-dialog-header',{class:_vm.dialogHeaderClasses,attrs:{"flat":_vm.headerFlat}},[_vm._t("title")],2):_vm._e()],2),_vm._v(" "),_c('div',{staticClass:"dialog-card__close"},[(!_vm.$slots.close)?_c('r-btn',{attrs:{"ripple":"","icon":"","flat":"","round":"","large":""},nativeOn:{"click":function($event){$event.stopPropagation();_vm.closeDialog()}}},[_c('md-close')],1):_vm._t("close")],2),_vm._v(" "),_c('r-card-text',{directives:[{name:"scroll",rawName:"v-scroll",value:({ callback: _vm.onContentScroll, target: _vm.dialogCardScrollTarget }),expression:"{ callback: onContentScroll, target: dialogCardScrollTarget }"}],ref:"text",staticClass:"dialog-card__inner"},[_vm._t("default")],2),_vm._v(" "),(_vm.$slots.actions)?_c('r-card-actions',{ref:"actions",class:_vm.actionsClasses,style:(_vm.actionsStyles)},[_vm._t("actions")],2):_vm._e()],1)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 201 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RBottomSheet_vue__ = __webpack_require__(202);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RBottomSheet_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-bottom-sheet', __WEBPACK_IMPORTED_MODULE_0__RBottomSheet_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RBottomSheet_vue__["a" /* default */]);

/***/ }),
/* 202 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RBottomSheet_vue__ = __webpack_require__(66);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(203)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RBottomSheet_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 203 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 204 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RSelect_vue__ = __webpack_require__(205);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RSelect_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-select', __WEBPACK_IMPORTED_MODULE_0__RSelect_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RSelect_vue__["a" /* default */]);

/***/ }),
/* 205 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSelect_vue__ = __webpack_require__(67);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(206)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSelect_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 206 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 207 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    noDataText: {
      type: String,
      default: 'Ничего не найдено'
    }
  }
});

/***/ }),
/* 208 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Menu activator
 *
 * @mixin
 *
 * Handles the click and hover activation
 * Supports slotted and detached activators
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    includeActivator: Boolean
  },
  methods: {
    activatorClickHandler: function activatorClickHandler(e) {
      if (this.disabled) {
        return;
      }
      if (this.openOnClick && !this.isActive) {
        this.getActivator().focus();
        this.isActive = true;
        this.absoluteX = e.clientX;
        this.absoluteY = e.clientY;
      } else if (this.closeOnClick && this.isActive) {
        this.getActivator().blur();
        this.isActive = false;
      }
    },
    mouseEnterHandler: function mouseEnterHandler(e) {
      var _this = this;

      this.runDelay('open', function () {
        if (_this.hasJustFocused) {
          return;
        }

        _this.hasJustFocused = true;
        _this.isActive = true;
      });
    },
    mouseLeaveHandler: function mouseLeaveHandler(e) {
      var _this2 = this;

      // Prevent accidental re-activation
      this.runDelay('close', function () {
        if (_this2.$refs.content.contains(e.relatedTarget)) {
          return;
        }

        requestAnimationFrame(function () {
          _this2.isActive = false;
          _this2.callDeactivate();
        });
      });
    },
    addActivatorEvents: function addActivatorEvents() {
      var activator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (!activator) {
        return;
      }
      activator.addEventListener('click', this.activatorClickHandler);
    },
    removeActivatorEvents: function removeActivatorEvents() {
      var activator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (!activator) {
        return;
      }
      activator.removeEventListener('click', this.activatorClickHandler);
    }
  }
});

/***/ }),
/* 210 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Menu generators
 *
 * @mixin
 *
 * Used for creating the DOM elements for RMenu
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    genActivator: function genActivator() {
      if (!this.$slots.activator) {
        return null;
      }

      var options = {
        staticClass: 'menu__activator',
        'class': {
          'menu__activator_active': this.hasJustFocused || this.isActive
        },
        ref: 'activator',
        on: {}
      };

      if (this.openOnHover) {
        options.on['mouseenter'] = this.mouseEnterHandler;
        options.on['mouseleave'] = this.mouseLeaveHandler;
      } else if (this.openOnClick) {
        options.on['click'] = this.activatorClickHandler;
      }

      return this.$createElement('div', options, this.$slots.activator);
    },
    genTransition: function genTransition() {
      if (!this.transition) {
        return this.genContent();
      }

      return this.$createElement('transition', {
        props: {
          name: typeof this.transition === 'string' ? this.transition : 'menu-transition'
        }
      }, [this.genContent()]);
    },
    genDirectives: function genDirectives() {
      var _this = this;

      // Do not add click outside for hover menu
      var directives = !this.openOnHover ? [{
        name: 'click-outside',
        value: function value() {
          return _this.isActive = false;
        },
        args: {
          closeConditional: function closeConditional() {
            return _this.closeOnClick;
          },
          include: function include() {
            var elements = [_this.$el].concat(_toConsumableArray(_this.getOpenDependentElements()));

            if (_this.includeActivator) {
              elements.push(_this.getActivator());
            }

            return elements;
          }
        }
      }] : [];

      directives.push({
        name: 'show',
        value: this.isContentActive
      });

      return directives;
    },
    genContent: function genContent() {
      var _class,
          _this2 = this;

      var options = {
        staticClass: 'menu__content',
        'class': (_class = {}, _defineProperty(_class, this.contentClass.trim(), true), _defineProperty(_class, 'menuable__content__active', this.isActive), _class),
        style: this.styles,
        directives: this.genDirectives(),
        ref: 'content',
        on: {
          click: function click(e) {
            e.stopPropagation();
            if (e.target.getAttribute('disabled')) {
              return;
            }
            if (_this2.closeOnContentClick) {
              _this2.isActive = false;
            }
          }
        }
      };

      !this.disabled && this.openOnHover && (options.on.mouseenter = this.mouseEnterHandler);
      this.openOnHover && (options.on.mouseleave = this.mouseLeaveHandler);

      return this.$createElement('div', options, this.showLazyContent(this.$slots.default));
    }
  }
});

/***/ }),
/* 211 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Menu keyable
 *
 * @mixin
 *
 * Primarily used to support RSelect
 * Handles opening and closing of RMenu from keystrokes
 * Will conditionally highlight RListTiles for RSelect
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  data: function data() {
    return {
      listIndex: -1,
      tiles: []
    };
  },

  watch: {
    isActive: function isActive(val) {
      if (!val) this.listIndex = -1;
    },
    listIndex: function listIndex(next, prev) {
      // For infinite scroll and autocomplete, re-evaluate children
      this.getTiles();

      if (next in this.tiles) {
        var tile = this.tiles[next];
        tile.classList.add('list__tile_highlighted');
        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight;
      }

      prev in this.tiles && this.tiles[prev].classList.remove('list__tile_highlighted');
    }
  },

  methods: {
    changeListIndex: function changeListIndex(e) {
      // Up, Down, Enter, Space
      if ([40, 38, 13].includes(e.keyCode) || e.keyCode === 32 && !this.isActive) {
        e.preventDefault();
      }

      // Esc, Tab
      if ([27, 9].includes(e.keyCode)) {
        return this.isActive = false;
      } else if (!this.isActive &&
      // Enter, Space
      [13, 32].includes(e.keyCode) && this.openOnClick) {
        return this.isActive = true;
      }

      // Down
      if (e.keyCode === 40 && this.listIndex < this.tiles.length - 1) {
        this.listIndex++;
        // Up
      } else if (e.keyCode === 38 && this.listIndex > 0) {
        this.listIndex--;
        // Enter
      } else if (e.keyCode === 13 && this.listIndex !== -1) {
        this.tiles[this.listIndex].click();
      }
    },
    getTiles: function getTiles() {
      var content = this.$refs.content;
      var basicList = content.querySelectorAll('.list__tile');
      var selectableList = content.querySelectorAll('.list__tile_selectable');

      this.tiles = selectableList.length && selectableList || basicList;
    }
  }
});

/***/ }),
/* 212 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Menu position
 *
 * @mixin
 *
 * Used for calculating an automatic position (used for RSelect)
 * Will position the RMenu content properly over the RSelect
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    // Revisit this
    calculateScroll: function calculateScroll() {
      if (this.selectedIndex === null) {
        return;
      }

      var scrollTop = 0;

      if (this.selectedIndex >= this.stopIndex) {
        scrollTop = this.$refs.content.scrollHeight;
      } else if (this.selectedIndex > this.startIndex) {
        scrollTop = this.selectedIndex * (this.defaultOffset * 6) - this.defaultOffset * 7;
      }

      this.$refs.content.scrollTop = scrollTop;
    },
    calcLeftAuto: function calcLeftAuto() {
      if (this.isAttached) {
        return 0;
      }

      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2);
    },
    calcTopAuto: function calcTopAuto() {
      var selectedIndex = Array.from(this.tiles).findIndex(function (n) {
        return n.classList.contains('list__tile_active');
      });

      if (selectedIndex === -1) {
        this.selectedIndex = null;

        return this.computedTop;
      }

      this.selectedIndex = selectedIndex;
      var actingIndex = selectedIndex;

      var offsetPadding = -(this.defaultOffset * 2);
      // Stop index should vary by tile length
      this.stopIndex = this.tiles.length > 4 ? this.tiles.length - 4 : this.tiles.length;

      if (selectedIndex > this.startIndex && selectedIndex < this.stopIndex) {
        actingIndex = 2;
        offsetPadding = this.defaultOffset * 3;
      } else if (selectedIndex >= this.stopIndex) {
        offsetPadding = -this.defaultOffset;
        actingIndex = selectedIndex - this.stopIndex;
      }

      // It's always off by 1 pixel, send help (┛ಠ_ಠ)┛彡┻━┻
      offsetPadding--;

      return this.computedTop + offsetPadding - actingIndex * (this.defaultOffset * 6);
    }
  }
});

/***/ }),
/* 213 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 214 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 215 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 216 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VirtualScroller; });
function getInternetExplorerVersion() {
  var ua = window.navigator.userAgent;

  var msie = ua.indexOf('MSIE ');
  if (msie > 0) {
    // IE 10 or older => return version number
    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
  }

  var trident = ua.indexOf('Trident/');
  if (trident > 0) {
    // IE 11 => return version number
    var rv = ua.indexOf('rv:');
    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
  }

  var edge = ua.indexOf('Edge/');
  if (edge > 0) {
    // Edge (IE 12+) => return version number
    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
  }

  // other browser
  return -1;
}

var isIE = void 0;

function initCompat() {
  if (!initCompat.init) {
    initCompat.init = true;
    isIE = getInternetExplorerVersion() !== -1;
  }
}

var ResizeObserver = { render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: "resize-observer", attrs: { "tabindex": "-1" } });
  }, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',
  name: 'resize-observer',

  methods: {
    notify: function notify() {
      this.$emit('notify');
    },
    addResizeHandlers: function addResizeHandlers() {
      this._resizeObject.contentDocument.defaultView.addEventListener('resize', this.notify);
      if (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {
        this.notify();
      }
    },
    removeResizeHandlers: function removeResizeHandlers() {
      if (this._resizeObject && this._resizeObject.onload) {
        if (!isIE && this._resizeObject.contentDocument) {
          this._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.notify);
        }
        delete this._resizeObject.onload;
      }
    }
  },

  mounted: function mounted() {
    var _this = this;

    initCompat();
    this.$nextTick(function () {
      _this._w = _this.$el.offsetWidth;
      _this._h = _this.$el.offsetHeight;
    });
    var object = document.createElement('object');
    this._resizeObject = object;
    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');
    object.setAttribute('aria-hidden', 'true');
    object.onload = this.addResizeHandlers;
    object.type = 'text/html';
    if (isIE) {
      this.$el.appendChild(object);
    }
    object.data = 'about:blank';
    if (!isIE) {
      this.$el.appendChild(object);
    }
  },
  beforeDestroy: function beforeDestroy() {
    this.removeResizeHandlers();
  }
};

// Install the components
function install(Vue) {
  Vue.component('resize-observer', ResizeObserver);
  /* -- Add more components here -- */
}

/* -- Plugin definition & Auto-install -- */
/* You shouldn't have to modify the code below */

// Plugin
var plugin = {
  // eslint-disable-next-line no-undef
  version: "0.4.3",
  install: install
};

// Auto-install
var GlobalVue = null;
if (typeof window !== 'undefined') {
  GlobalVue = window.Vue;
} else if (typeof global !== 'undefined') {
  GlobalVue = global.Vue;
}
if (GlobalVue) {
  GlobalVue.use(plugin);
}

function throwValueError(value) {
  if (value !== null && typeof value !== 'function') {
    throw new Error('observe-visibility directive expects a function as the value');
  }
}

var ObserveVisibility = {
  bind: function bind(el, _ref, vnode) {
    var value = _ref.value;

    if (typeof IntersectionObserver === 'undefined') {
      console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/WICG/IntersectionObserver/tree/gh-pages/polyfill');
    } else {
      throwValueError(value);
      el._vue_visibilityCallback = value;
      var observer = el._vue_intersectionObserver = new IntersectionObserver(function (entries) {
        var entry = entries[0];
        if (el._vue_visibilityCallback) {
          el._vue_visibilityCallback.call(null, entry.intersectionRatio > 0, entry);
        }
      });
      // Wait for the element to be in document
      vnode.context.$nextTick(function () {
        observer.observe(el);
      });
    }
  },
  update: function update(el, _ref2) {
    var value = _ref2.value;

    throwValueError(value);
    el._vue_visibilityCallback = value;
  },
  unbind: function unbind(el) {
    if (el._vue_intersectionObserver) {
      el._vue_intersectionObserver.disconnect();
      delete el._vue_intersectionObserver;
      delete el._vue_visibilityCallback;
    }
  }
};

// Install the components
function install$1(Vue) {
  Vue.directive('observe-visibility', ObserveVisibility);
  /* -- Add more components here -- */
}

/* -- Plugin definition & Auto-install -- */
/* You shouldn't have to modify the code below */

// Plugin
var plugin$2 = {
  // eslint-disable-next-line no-undef
  version: "0.3.1",
  install: install$1
};

// Auto-install
var GlobalVue$1 = null;
if (typeof window !== 'undefined') {
  GlobalVue$1 = window.Vue;
} else if (typeof global !== 'undefined') {
  GlobalVue$1 = global.Vue;
}
if (GlobalVue$1) {
  GlobalVue$1.use(plugin$2);
}

var classCallCheck = function classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var consoleInfo = false;

function consoleLog() {
  var _console;

  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  consoleInfo && (_console = console).log.apply(_console, ['[Virtual Scroller]:'].concat(args));
}

var SumTree = function () {
  function SumTree() {
    classCallCheck(this, SumTree);

    this._tree = [];
    this._revertedTree = true;
  }

  /**
   * Allows to iterate over the instance
   * @return {{next: Function}}
   */

  createClass(SumTree, [{
    key: Symbol.iterator,
    value: function value() {
      var index = 0;
      return {
        next: function next() {
          return {
            value: this.sumAt(index++),
            done: index >= this._tree.length
          };
        }
      };
    }

    /**
     * Updating the tree between `from` and `to`
     * elements with custom values
     * @param {number[]} values
     * @param {number} from
     * @param {number} to
     */

  }, {
    key: 'update',
    value: function update(_ref) {
      var _ref$values = _ref.values,
          values = _ref$values === undefined ? [] : _ref$values,
          _ref$from = _ref.from,
          from = _ref$from === undefined ? 0 : _ref$from,
          _ref$to = _ref.to,
          to = _ref$to === undefined ? values.length - 1 : _ref$to;

      this._assertEqual(to - from + 1, values.length, 'Received lengths must be equal');
      this._assertEqual(values.length <= this._tree.length, true, 'Sub array must be less than original tree');
      this._assertEqual(to - from >= 0, true, '`From` must be less than `to`');

      consoleLog(from, to, values, 'length:', values.length);
      consoleLog('original tree:', this._tree.slice());

      if (this._revertedTree) {
        // updating reverted tree
        var prevValue = this._tree[to + 1];
        var diffValue = 0;
        var accumulator = prevValue || 0;
        for (var index = to, valuesIndex = values.length - 1; index >= from; --index) {
          accumulator += values[valuesIndex--];
          if (index === from) {
            diffValue = accumulator - this._tree[from];
          }
          this._tree[index] = accumulator;
        }
        // update the rest array before `from` index
        for (var _index = from - 1; _index >= 0; --_index) {
          this._tree[_index] += diffValue;
        }
      } else {
        // updating normal tree
        var _prevValue = this._tree[from - 1];
        var _diffValue = 0;
        var _accumulator = _prevValue || 0;
        for (var _index2 = from, _valuesIndex = 0; _index2 <= to; ++_index2) {
          _accumulator += values[_valuesIndex++];
          if (_index2 === to) {
            _diffValue = _accumulator - this._tree[to];
          }
          this._tree[_index2] = _accumulator;
        }
        // update the rest array after `to` index
        for (var _index3 = to + 1; _index3 < this._tree.length; ++_index3) {
          this._tree[_index3] += _diffValue;
        }
      }
      consoleLog('modified tree:', this._tree.slice());
    }

    /**
     * Returns sum of the element with specified index
     * @param {number} elementIndex
     * @return {number}
     */

  }, {
    key: 'sumAt',
    value: function sumAt(elementIndex) {
      return this.sumBetween(0, elementIndex);
    }

    /**
     * Returns sum between two elements with specified indexes
     * @param {number} fromIndex
     * @param {number} endIndex
     * @return {number}
     */

  }, {
    key: 'sumBetween',
    value: function sumBetween() {
      var fromIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var endIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._tree.length - 1;

      return this._revertedTree ? this._tree[fromIndex] - (this._tree[endIndex + 1] || 0) : this._tree[endIndex] - (this._tree[fromIndex - 1] || 0);
    }

    /**
     * Extends tree by `number` with pad `value`
     * @param {number} number
     * @param {number} value
     */

  }, {
    key: 'extendBy',
    value: function extendBy(number) {
      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      consoleLog('adding ' + number + ' elements');
      this._tree = this._tree.concat(Array(number).fill(0));
      var newItems = Array(number).fill(value);
      this.update({
        from: this._tree.length - number,
        to: this._tree.length - 1,
        values: newItems
      });
    }

    /**
     * Reduce tree by `number`
     * @param number
     */

  }, {
    key: 'reduceBy',
    value: function reduceBy(number) {
      consoleLog('reducing by ' + number + ' elements');
      if (this._revertedTree) {
        var deletedSum = this._tree[this._tree.length - number];
        for (var index = this._tree.length - number - 1; index >= 0; --index) {
          this._tree[index] -= deletedSum;
        }
      }
      this._tree.splice(-number);
    }

    /**
     * Performance mode
     * `descending` - start is the most powerful for CPU but reduced to the end
     * other modes - start is the most expensive for CPU but better to the end
     * @default descending
     * @param {*} mode
     */

  }, {
    key: 'setPerformanceMode',
    value: function setPerformanceMode() {
      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SumTree.descending;

      // todo: fix wrong height with ascending mode (needs investigation)
      // although descending mode is more useful for us in most cases
      this._revertedTree = mode === SumTree.descending;
    }

    /**
     * Free memory by removing the tree
     */

  }, {
    key: 'clear',
    value: function clear() {
      this._tree = [];
    }

    /**
     * Assert that two values are identically with strict equal
     * @param {*} value1
     * @param {*} value2
     * @param {string} message
     * @private
     */

  }, {
    key: '_assertEqual',
    value: function _assertEqual(value1, value2, message) {
      if (value1 !== value2) {
        // throw new Error(message);
        console.error(value1, value2, message);
      }
    }
  }]);
  return SumTree;
}();

SumTree.descending = 1;
SumTree.ascending = 2;

var VirtualScroller = { render: function render() {
    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c(_vm.mainTag, { directives: [{ name: "observe-visibility", rawName: "v-observe-visibility", value: _vm.handleVisibilityChange, expression: "handleVisibilityChange" }], tag: "component", staticClass: "virtual-scroller", class: _vm.cssClass, style: _vm.itemContentStyle, on: { "&scroll": function scroll($event) {
          _vm.handleScroll($event);
        } } }, [_vm._t("before-container"), _vm._v(" "), _c(_vm.containerTag, { ref: "itemContainer", tag: "component", staticClass: "virtual-scroller__item-container", class: _vm.containerClass, style: _vm.itemContainerStyle }, [_vm._t("before-content"), _vm._v(" "), _c(_vm.contentTag, { ref: "items", tag: "component", staticClass: "virtual-scroller__items", class: _vm.contentClass, style: _vm.itemsStyle }, [_vm.renderers ? _vm._l(_vm.visibleItems, function (item, index) {
      return _c(_vm.renderers[item[_vm.typeField]], { key: _vm.keysEnabled && item[_vm.keyField] || undefined, tag: "component", staticClass: "virtual-scroller__item", attrs: { "item": item, "item-index": _vm.$_startIndex + index } });
    }) : [_vm._l(_vm.visibleItems, function (item, index) {
      return _vm._t("item", null, { item: item, itemIndex: _vm.$_startIndex + index, itemKey: _vm.keysEnabled && item[_vm.keyField] || undefined });
    })]], 2), _vm._v(" "), _vm._t("after-content")], 2), _vm._v(" "), _vm._t("after-container"), _vm._v(" "), _c('resize-observer', { on: { "notify": _vm.handleResize } })], 2);
  }, staticRenderFns: [],
  name: 'virtual-scroller',

  components: {
    ResizeObserver: ResizeObserver
  },

  directives: {
    ObserveVisibility: ObserveVisibility
  },

  props: {
    items: {
      type: Array,
      required: true
    },
    renderers: {
      default: null
    },
    itemHeight: {
      type: Number,
      default: null
    },
    maxContentHeight: {
      type: [Number, String],
      default: 500
    },
    anyHeight: {
      type: Boolean,
      default: false
    },
    typeField: {
      type: String,
      default: 'type'
    },
    keyField: {
      type: String,
      default: 'id'
    },
    heightField: {
      type: String,
      default: 'height'
    },
    mainTag: {
      type: String,
      default: 'div'
    },
    containerTag: {
      type: String,
      default: 'div'
    },
    containerClass: {
      default: null
    },
    contentTag: {
      type: String,
      default: 'div'
    },
    contentClass: {
      default: null
    },
    pageMode: {
      type: Boolean,
      default: false
    },
    buffer: {
      type: [Number, String],
      default: 200
    },
    poolSize: {
      type: [Number, String],
      default: 2000
    },
    prerender: {
      type: [Number, String],
      default: 0
    },
    emitUpdate: {
      type: Boolean,
      default: false
    },
    delayPreviousItems: {
      type: Boolean,
      default: false
    }
  },

  data: function data() {
    return {
      visibleItems: [],
      itemContainerStyle: null,
      itemsStyle: null,
      keysEnabled: true
    };
  },

  computed: {
    cssClass: function cssClass() {
      return {
        'virtual-scroller_mode_page': this.pageMode
      };
    },
    itemContentStyle: function itemContentStyle() {
      return {
        maxHeight: typeof this.maxContentHeight === 'number' ? this.maxContentHeight + 'px' : this.maxContentHeight
      };
    },
    isFloatingItemHeight: function isFloatingItemHeight() {
      return this.itemHeight === null || this.anyHeight;
    }
  },

  watch: {
    items: {
      handler: function handler() {
        this.updateVisibleItems(true);
      },

      deep: true
    },
    pageMode: function pageMode() {
      this.applyPageMode();
      this.updateVisibleItems(true);
    },

    itemHeight: 'setDirty'
  },

  created: function created() {
    this.$_ready = false;
    this.$_startIndex = 0;
    this.$_oldScrollTop = null;
    this.$_oldScrollBottom = null;
    this.$_offsetTop = 0;
    this.$_height = 0;
    this.$_scrollDirty = false;
    this.$_updateDirty = false;
    this.$_heights = [];
    this.$_sumTree = new SumTree();
    this.$_sumTree.setPerformanceMode(SumTree.descending);

    var prerender = parseInt(this.prerender);
    if (prerender > 0) {
      this.visibleItems = this.items.slice(0, prerender);
      this.$_length = this.visibleItems.length;
      this.$_endIndex = this.$_length - 1;
      this.$_skip = true;
    } else {
      this.$_endIndex = 0;
      this.$_length = 0;
      this.$_skip = false;
    }
  },
  mounted: function mounted() {
    var _this = this;

    this.applyPageMode();
    setTimeout(function () {
      _this.updateVisibleItems(true);
      _this.$_ready = true;
    });
  },
  beforeDestroy: function beforeDestroy() {
    this.removeWindowScroll();
    this.$_heights = [];
    this.$_sumTree.clear();
  },

  methods: {
    getScroll: function getScroll() {
      var el = this.$el;
      var scroll = void 0;

      if (this.pageMode) {
        var rect = el.getBoundingClientRect();
        var top = -rect.top;
        var height = window.innerHeight;
        if (top < 0) {
          height += top;
          top = 0;
        }
        if (top + height > rect.height) {
          height = rect.height - top;
        }
        scroll = {
          top: top,
          bottom: top + height
        };
      } else {
        scroll = {
          top: el.scrollTop,
          bottom: el.scrollTop + el.clientHeight
        };
      }

      if (scroll.bottom >= 0 && scroll.top <= scroll.bottom) {
        return scroll;
      } else {
        return null;
      }
    },
    updateVisibleItems: function updateVisibleItems() {
      var _this2 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.$_updateDirty) {
        return;
      }
      this.$_updateDirty = true;
      this.$nextTick(function () {
        _this2.$_updateDirty = false;

        var l = _this2.items.length;
        var scroll = _this2.getScroll();
        var items = _this2.items;
        var containerHeight = void 0,
            offsetTop = void 0;

        if (!scroll) {
          return;
        }

        var startIndex = -1;
        var endIndex = -1;

        var buffer = parseInt(_this2.buffer);
        var poolSize = parseInt(_this2.poolSize);
        var scrollTop = ~~(scroll.top / poolSize) * poolSize - buffer;
        var scrollBottom = Math.ceil(scroll.bottom / poolSize) * poolSize + buffer;

        if (!force && (scrollTop === _this2.$_oldScrollTop && scrollBottom === _this2.$_oldScrollBottom || _this2.$_skip)) {
          _this2.$_skip = false;
          return;
        }

        _this2.$_oldScrollTop = scrollTop;
        _this2.$_oldScrollBottom = scrollBottom;

        var _computeFrameOptions = _this2.computeFrameOptions({ scrollTop: scrollTop, scrollBottom: scrollBottom });

        startIndex = _computeFrameOptions.startIndex;
        endIndex = _computeFrameOptions.endIndex;
        offsetTop = _computeFrameOptions.offsetTop;
        containerHeight = _computeFrameOptions.containerHeight;

        if (force || _this2.$_startIndex !== startIndex || _this2.$_endIndex !== endIndex || _this2.$_offsetTop !== offsetTop || _this2.$_height !== containerHeight || _this2.$_length !== l) {
          _this2.keysEnabled = !(startIndex > _this2.$_endIndex || endIndex < _this2.$_startIndex);

          _this2.itemContainerStyle = {
            height: containerHeight + 'px'
          };
          _this2.itemsStyle = {
            marginTop: offsetTop + 'px'
          };

          if (_this2.delayPreviousItems) {
            // Add next items
            _this2.visibleItems = items.slice(_this2.$_startIndex, endIndex);
            // Remove previous items
            _this2.$nextTick(function () {
              _this2.visibleItems = items.slice(startIndex, endIndex);
            });
          } else {
            _this2.visibleItems = items.slice(startIndex, endIndex);
          }

          _this2.emitUpdate && _this2.$emit('update', startIndex, endIndex);

          _this2.$_startIndex = startIndex;
          _this2.$_endIndex = endIndex;
          _this2.$_length = l;
          _this2.$_offsetTop = offsetTop;
          _this2.$_height = containerHeight;

          if (_this2.isFloatingItemHeight) {
            _this2.$nextTick(function () {
              _this2.updateDynamicItemsHeights();
            });
          }
        }
      });
    },
    computeFrameOptions: function computeFrameOptions(_ref) {
      var scrollTop = _ref.scrollTop,
          scrollBottom = _ref.scrollBottom;

      var l = this.items.length;

      var offsetTop = void 0,
          containerHeight = void 0;
      var startIndex = -1;
      var endIndex = -1;

      // Dynamic height mode
      if (this.isFloatingItemHeight) {
        if (this.$_heights.length !== this.items.length) {
          this.updateHeightsLength();
        }
        var h = void 0;
        var a = 0;
        var b = l - 1;
        var i = ~~(l / 2);
        var oldI = void 0;

        // Searching for startIndex
        do {
          oldI = i;
          h = this.$_sumTree.sumAt(i); // heights[i];
          if (h < scrollTop) {
            a = i;
          } else if (i < l && this.$_sumTree.sumAt(i + 1) > scrollTop) {
            b = i;
          }
          i = ~~((a + b) / 2);
        } while (i !== oldI);
        i < 0 && (i = 0);
        startIndex = i;

        // Searching for endIndex
        for (endIndex = i; endIndex < l && this.$_sumTree.sumAt(endIndex) < scrollBottom; endIndex++) {}

        if (endIndex === -1) {
          endIndex = this.items.length - 1;
        } else {
          endIndex++;
          // Bounds
          endIndex > l && (endIndex = l);
        }

        // For containers style
        offsetTop = this.$_sumTree.sumAt(i - 1);
        containerHeight = this.$_sumTree.sumAt(l - 1);
      } else {
        // Fixed height mode
        startIndex = ~~(scrollTop / this.itemHeight);
        endIndex = Math.ceil(scrollBottom / this.itemHeight);

        // Bounds
        startIndex < 0 && (startIndex = 0);
        endIndex > l && (endIndex = l);

        offsetTop = startIndex * this.itemHeight;
        containerHeight = l * this.itemHeight;
      }

      return {
        startIndex: startIndex,
        endIndex: endIndex,
        offsetTop: offsetTop,
        containerHeight: containerHeight
      };
    },
    updateHeightsLength: function updateHeightsLength() {
      var diffIndexes = this.items.length - this.$_heights.length;
      if (diffIndexes > 0) {
        var tailItems = Array(diffIndexes).fill(this.itemHeight || 50);
        this.$_heights = this.$_heights.concat(tailItems);
        this.$_sumTree.extendBy(diffIndexes, this.itemHeight || 50);
      } else {
        this.$_heights.splice(diffIndexes);
        this.$_sumTree.reduceBy(Math.abs(diffIndexes));
      }
    },
    updateDynamicItemsHeights: function updateDynamicItemsHeights() {
      var children = this.$refs.items.children;
      var needTreeUpdate = false;

      for (var i = 0, length = this.visibleItems.length; i < length; ++i) {
        if (!children || !children[i]) {
          continue;
        }
        var realItemHeight = children[i].offsetHeight;
        var globalIndex = this.$_startIndex + i;
        if (this.$_heights[globalIndex] !== realItemHeight) {
          needTreeUpdate = true;
          this.$_heights[globalIndex] = realItemHeight;
        }
      }

      var _ref2 = [this.$_startIndex, this.$_startIndex + this.visibleItems.length - 1],
          from = _ref2[0],
          to = _ref2[1];

      if (needTreeUpdate && from < to) {
        this.$_sumTree.update({
          from: from,
          to: to,
          values: this.$_heights.slice(from, to + 1)
        });
      }
    },
    scrollToItem: function scrollToItem(index) {
      var scrollTop = void 0;
      if (this.isFloatingItemHeight) {
        scrollTop = this.$_sumTree.sumAt(index - 1);
      } else {
        scrollTop = index * this.itemHeight;
      }
      this.$el.scrollTop = scrollTop;
    },
    setDirty: function setDirty() {
      this.$_oldScrollTop = null;
      this.$_oldScrollBottom = null;
    },
    applyPageMode: function applyPageMode() {
      if (this.pageMode) {
        this.addWindowScroll();
      } else {
        this.removeWindowScroll();
      }
    },
    addWindowScroll: function addWindowScroll() {
      window.addEventListener('scroll', this.handleScroll, true);
      window.addEventListener('resize', this.handleResize);
    },
    removeWindowScroll: function removeWindowScroll() {
      window.removeEventListener('scroll', this.handleScroll, true);
      window.removeEventListener('resize', this.handleResize);
    },
    handleScroll: function handleScroll() {
      var _this3 = this;

      if (!this.$_scrollDirty) {
        this.$_scrollDirty = true;
        requestAnimationFrame(function () {
          _this3.$_scrollDirty = false;
          _this3.updateVisibleItems();
        });
      }
    },
    handleResize: function handleResize() {
      this.$emit('resize');
      if (this.$_ready) {
        this.updateVisibleItems();
      }
    },
    handleVisibilityChange: function handleVisibilityChange(isVisible, entry) {
      var _this4 = this;

      if (this.$_ready && (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0)) {
        this.$emit('visible');
        this.$nextTick(function () {
          _this4.updateVisibleItems();
        });
      }
    }
  }
};

function registerComponents(Vue, prefix) {
  Vue.component(prefix + 'virtual-scroller', VirtualScroller);
}

var plugin$4 = {
  // eslint-disable-next-line no-undef
  version: "1.1.14",
  install: function install(Vue, options) {
    var finalOptions = Object.assign({}, {
      installComponents: true,
      componentsPrefix: ''
    }, options);

    if (finalOptions.installComponents) {
      registerComponents(Vue, finalOptions.componentsPrefix);
    }
  }
};

// Auto-install
var GlobalVue$2 = null;
if (typeof window !== 'undefined') {
  GlobalVue$2 = window.Vue;
} else if (typeof global !== 'undefined') {
  GlobalVue$2 = global.Vue;
}
if (GlobalVue$2) {
  GlobalVue$2.use(plugin$4);
}

/* unused harmony default export */ var _unused_webpack_default_export = (plugin$4);

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(22)))

/***/ }),
/* 217 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 218 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 219 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/**
 * Select autocomplete
 *
 * @mixin
 *
 * Handles logic when using the "autocomplete" prop
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    filter: {
      type: Function,
      default: function _default(item, queryText, itemText) {
        var hasValue = function hasValue(val) {
          return val != null ? val : '';
        };

        var text = hasValue(itemText);
        var query = hasValue(queryText);

        return text.toString().toLowerCase().indexOf(query.toString().toLowerCase()) > -1;
      }
    }
  },

  methods: {
    filterSearch: function filterSearch() {
      var _this = this;

      if (!this.isAutocomplete) {
        return this.computedItems;
      }

      return this.computedItems.filter(function (i) {
        return _this.filter(i, _this.searchValue, _this.getText(i));
      });
    },
    genFiltered: function genFiltered(text) {
      text = (text || '').toString();

      if (!this.isAutocomplete || !this.searchValue || this.filteredItems.length < 1) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["i" /* escapeHTML */])(text);
      }

      var _getMaskedCharacters = this.getMaskedCharacters(text),
          start = _getMaskedCharacters.start,
          middle = _getMaskedCharacters.middle,
          end = _getMaskedCharacters.end;

      return '' + Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["i" /* escapeHTML */])(start) + this.genHighlight(middle) + Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["i" /* escapeHTML */])(end);
    },
    genHighlight: function genHighlight(text) {
      if (this.isNotFiltering) {
        return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["i" /* escapeHTML */])(text);
      }

      return '<span class="list__tile__mask">' + Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["i" /* escapeHTML */])(text) + '</span>';
    },
    getMaskedCharacters: function getMaskedCharacters(text) {
      var searchValue = (this.searchValue || '').toString().toLowerCase();
      var index = text.toLowerCase().indexOf(searchValue);

      if (index < 0) {
        return { start: '', middle: text, end: '' };
      }

      var start = text.slice(0, index);
      var middle = text.slice(index, index + searchValue.length);
      var end = text.slice(index + searchValue.length);
      return { start: start, middle: middle, end: end };
    },
    getCurrentTag: function getCurrentTag() {
      return this.isMenuItemSelected() ? this.filteredItems[this.getMenuIndex()] : this.isAnyValueAllowed ? this.searchValue : null;
    },
    tabOut: function tabOut() {
      this.blur();
    },
    onTabDown: function onTabDown(e) {
      // If tabbing through inputs and
      // and there is no need for an
      // update, blur the r-select
      if (!this.isAutocomplete || !this.getCurrentTag() || this.combobox) {
        return this.tabOut();
      }

      // When adding tags, if searching and
      // there is not a filtered options,
      // add the value to the tags list
      if (this.tags && this.searchValue && !this.filteredItems.length) {
        e.preventDefault();

        return this.updateTags(this.searchValue);
      }

      // An item that is selected by
      // menu-index should toggled
      if (this.menuIsActive) {
        e.preventDefault();
        this.selectListTile(this.getMenuIndex());
      }
    },
    onEnterDown: function onEnterDown(e) {
      this.$emit('enter', e);
      if (this.creatableChips) {
        this.createItem();
      } else {
        this.updateTags(this.getCurrentTag());
      }
    },
    onEscDown: function onEscDown(e) {
      e.preventDefault();
      // Prevents closing of a
      // dialog when pressing esc
      e.stopPropagation();
      this.menuIsActive = this.persistentMenu;
    },
    onKeyDown: function onKeyDown(e) {
      var _this2 = this;

      // If enter, space, up, or down is pressed, open menu
      if (!this.menuIsActive && [13, 32, 38, 40].includes(e.keyCode)) {
        e.preventDefault();
        return this.showMenu();
      }

      // If escape deactivate the menu
      if (e.keyCode === 27) {
        return this.onEscDown(e);
      }

      // If tab - select item or close menu
      if (e.keyCode === 9) {
        return this.onTabDown(e);
      }

      if (!this.isAutocomplete || ![32].includes(e.keyCode) // space
      ) this.refMenu.changeListIndex(e);

      // Up or down
      if ([38, 40].includes(e.keyCode)) {
        this.selectedIndex = -1;
      }

      if (this.isAutocomplete && !this.hideSelections && !this.searchValue) {
        this.changeSelectedIndex(e.keyCode);
      }

      if (!this.isAnyValueAllowed || !this.searchValue) {
        return;
      }

      // Enter
      if (e.keyCode === 13) {
        return this.onEnterDown(e);
      }

      // Left arrow
      if (e.keyCode === 37 && this.$refs.input.selectionStart === 0 && this.selectedItems.length) {
        this.updateTags(this.searchValue);
        this.$nextTick(function () {
          _this2.selectedIndex = Math.max(_this2.selectedItems.length - 2, 0);
        });
      }

      // Right arrow
      if (e.keyCode === 39 && this.$refs.input.selectionEnd === this.searchValue.length) {
        this.resetMenuIndex();
      }
    },
    selectListTile: function selectListTile(index) {
      if (!this.refMenu.tiles[index]) return;

      this.refMenu.tiles[index].click();
    },
    updateTags: function updateTags(content) {
      var _this3 = this;

      // Avoid direct mutation
      // for vuex strict mode
      var selectedItems = this.selectedItems.slice();

      // If a duplicate item
      // exists, remove it
      if (selectedItems.includes(content)) {
        this.$delete(selectedItems, selectedItems.indexOf(content));
      }

      // When updating tags ensure
      // that that the search text
      // is populated if needed
      var searchValue = null;

      if (this.combobox) {
        selectedItems = [content];
        searchValue = this.chips ? null : content;
      } else {
        selectedItems.push(content);
      }

      this.selectedItems = selectedItems;

      this.$nextTick(function () {
        _this3.searchValue = searchValue;
        _this3.$emit('input', _this3.combobox ? content : _this3.selectedItems);

        // Combobox should close its menu when tags are updated
        _this3.menuIsActive = !_this3.combobox || _this3.persistentMenu;
      });
    },
    createItem: function createItem() {
      var _this4 = this;

      var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.searchValue;

      if (this.isNeedCreateItem(item)) {
        var _item;

        item = (_item = {}, _defineProperty(_item, this.itemText, item), _defineProperty(_item, this.itemValue, Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["l" /* generateNumber */])(-1e15, -1e20)), _defineProperty(_item, 'created', true), _item);

        this.items.push(item);
        this.selectItem(item);
      }

      this.$nextTick(function () {
        _this4.searchValue = null;
        _this4.menuIsActive = !_this4.hideMenuAfterSelect;
      });
    }
  }
});

/***/ }),
/* 220 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/**
 * Select computed properties
 *
 * @mixin
 *
 * Computed properties for
 * the r-select component
 */



/* harmony default export */ __webpack_exports__["a"] = ({
  computed: {
    classes: function classes() {
      var classes = {
        'input-group_text-field input-group_select': true,
        'input-group_auto': this.auto,
        'input-group_overflow': this.overflow,
        'input-group_segmented': this.segmented,
        'input-group_editable': this.editable,
        'input-group_autocomplete': this.isAutocomplete,
        'input-group_single-line': this.singleLine || this.isDropdown,
        'input-group_multi-line': this.multiLine,
        'input-group_chips': this.chips,
        'input-group_without-borders': this.withoutBorders,
        'input-group_multiple': this.multiple,
        'input-group_open': this.menuIsVisible,
        'input-group_select_selecting-index': this.selectedIndex > -1
      };

      if (this.hasError) {
        classes['text_error'] = true;
      } else {
        return this.addTextColorClassChecks(classes);
      }

      return classes;
    },
    computedContentClass: function computedContentClass() {
      var children = ['menu__content_select', this.auto ? 'menu__content_auto' : '', this.isDropdown ? 'menu__content_dropdown' : '', this.isAutocomplete ? 'menu__content_autocomplete' : '', this.contentClass || ''];

      return Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["y" /* normalizeClassName */])(children.join(' '));
    },
    computedItems: function computedItems() {
      return this.filterDuplicates(this.cachedItems.concat(this.items));
    },

    /**
     * The range of the current input text
     *
     * @return {Number}
     */
    currentRange: function currentRange() {
      if (this.selectedItem == null) {
        return 0;
      }

      return this.getText(this.selectedItem).toString().length;
    },
    filteredItems: function filteredItems() {
      // If we are not actively filtering
      // Show all available items
      var items = this.isNotFiltering ? this.computedItems : this.filterSearch();

      return !this.auto && !this.virtual ? items.slice(0, this.lastItem) : items;
    },
    hideSelections: function hideSelections() {
      return this.isAutocomplete && !this.isMultiple && this.isFocused && !this.chips && !this.$scopedSlots.selection;
    },
    isNotFiltering: function isNotFiltering() {
      return this.isAutocomplete && this.isDirty && this.searchValue === this.getText(this.selectedItem);
    },
    isHidingSelected: function isHidingSelected() {
      return this.hideSelected && (this.isAutocomplete || this.chipsOutside) && this.isMultiple;
    },
    isAutocomplete: function isAutocomplete() {
      return this.autocomplete || this.editable || this.tags || this.combobox;
    },
    isDirty: function isDirty() {
      return this.selectedItems.length > 0 || this.isAutocomplete && this.searchValue;
    },
    isDropdown: function isDropdown() {
      return this.segmented || this.overflow || this.editable;
    },
    isMultiple: function isMultiple() {
      return this.multiple || this.tags;
    },
    isAnyValueAllowed: function isAnyValueAllowed() {
      return this.tags || this.combobox || this.creatableChips;
    },
    menuIsVisible: function menuIsVisible() {
      if (!this.menu) {
        return false;
      }

      return this.creatableChips ? this.menuIsActive : this.menuIsActive && this.computedItems.length > 0 && (!this.isAnyValueAllowed || this.filteredItems.length > 0);
    },
    menuItems: function menuItems() {
      var _this = this;

      return this.isHidingSelected ? this.filteredItems.filter(function (o) {
        return (_this.selectedItems || []).every(function (selectedItem) {
          return _this.getValue(selectedItem) !== _this.getValue(o);
        });
      }) : this.filteredItems;
    },
    nudgeTop: function nudgeTop() {
      var nudgeTop = 0;

      if (this.shouldOffset) {
        nudgeTop += -18;
        nudgeTop += 44;

        if (this.isDetailsHidden) {
          nudgeTop += -24;
        }

        nudgeTop += this.isAutocomplete && !this.isDropdown ? -2 : 0;
      }

      return nudgeTop;
    },

    searchValue: {
      get: function get() {
        return this.lazySearch;
      },
      set: function set(val) {
        if (!this.isAutocomplete || !this.multiple && this.selectedIndex > -1) {
          return;
        }

        this.lazySearch = val;

        this.$emit('update:searchInput', val);
      }
    },
    selectedItem: function selectedItem() {
      var _this2 = this;

      if (this.isMultiple) {
        return null;
      }

      return this.selectedItems.find(function (i) {
        return _this2.getValue(i) === _this2.getValue(_this2.inputValue);
      });
    },
    shouldOffset: function shouldOffset() {
      return this.isAutocomplete || this.isDropdown;
    },
    refMenu: function refMenu() {
      return this.$refs.menu;
    }
  }
});

/***/ }),
/* 221 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

/**
 * Select events
 *
 * @mixin
 *
 * Event based methods for
 * the r-select component
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    blur: function blur() {
      this.deactivateInput();
      this.menuIsActive = this.persistentMenu;
      this.$emit('blur');
    },
    focus: function focus() {
      this.showMenu();

      this.$emit('focus');
    },
    focusInput: function focusInput() {
      var _this = this;

      if (this.$refs.input && this.isAutocomplete) {
        this.$refs.input.focus();

        this.$nextTick(function () {
          _this.$refs.input.select();
          _this.shouldBreak && (_this.$refs.input.scrollLeft = _this.$refs.input.scrollWidth);
        });
      } else {
        !this.isFocused && this.$el.focus();
      }
    },
    genListeners: function genListeners() {
      var _this2 = this;

      var listeners = Object.assign({}, this.$listeners);
      delete listeners.input;

      return _extends({}, listeners, {
        click: function click() {
          if (_this2.disabled || _this2.readonly) {
            return;
          }

          if (_this2.isFocused && !_this2.menuIsVisible) {
            return _this2.showMenuItems();
          }

          _this2.selectedIndex > -1 ? _this2.selectedIndex = -1 : _this2.focus();
        },
        focus: function focus(e) {
          if (_this2.disabled || _this2.readonly || _this2.isFocused) {
            return;
          }

          _this2.activateInput();
          _this2.$nextTick(_this2.focusInput);
        },
        keydown: this.onKeyDown // Located in mixins/select-autocomplete.js
      });
    }
  }
});

/***/ }),
/* 222 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_console__ = __webpack_require__(15);
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }




/**
 * Select generators
 *
 * @mixin
 *
 * Used for creating the DOM elements for VSelect
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    genMenu: function genMenu() {
      var _this = this;

      if (!this.renderingMenu && !this.isActive && !this.$refs.menu) {
        return;
      }

      var attachTo = this.staticAttach ? '[data-uid="' + this._uid + '"] .input-group__menu-static-container' : '[data-uid="' + this._uid + '"]';
      var data = {
        ref: 'menu',
        props: {
          activator: this.$refs.inputGroup,
          auto: this.auto,
          attach: (this.attach || this.staticAttach) && attachTo,
          closeOnClick: false,
          closeOnContentClick: !this.isMultiple,
          contentClass: this.computedContentClass,
          disabled: this.disabled,
          fitToContent: this.fitToContent,
          maxHeight: this.maxHeight,
          nudgeTop: this.nudgeTop,
          offsetY: this.shouldOffset,
          offsetOverflow: this.isAutocomplete,
          openOnClick: false,
          value: this.menuIsVisible,
          zIndex: this.menuZIndex,
          lazy: this.lazy
        },
        on: {
          input: function input(val) {
            if (!val) {
              _this.menuIsActive = _this.persistentMenu;
            }
          },
          'hook:mounted': function hookMounted(_) {
            _this.$nextTick(function (_) {
              if (_this.content && !Object.keys(_this.content).length) {
                _this.setMenuContent(_this.$refs.menu);
              }
            });
          }
        }
      };

      if (this.isAutocomplete) {
        data.props.transition = false;
      }

      this.minWidth && (data.props.minWidth = this.minWidth);

      var child = this.virtual && this.menuItems.length > 0 ? this.genVirtualList() : this.genList();

      return this.$createElement('r-menu', data, [child]);
    },
    genStaticMenuContainer: function genStaticMenuContainer() {
      return this.staticAttach ? this.$createElement('div', {
        attrs: {
          'class': 'input-group__menu-static-container'
        }
      }) : null;
    },
    getMenuIndex: function getMenuIndex() {
      return this.refMenu ? this.refMenu.listIndex : -1;
    },
    setMenuIndex: function setMenuIndex(index) {
      this.refMenu && (this.refMenu.listIndex = index);
    },
    resetMenuIndex: function resetMenuIndex() {
      this.setMenuIndex(-1);
    },
    isMenuItemSelected: function isMenuItemSelected() {
      return this.menuIsActive && this.menuItems.length && this.getMenuIndex() > -1;
    },
    genSelectionsAndSearch: function genSelectionsAndSearch(_ref) {
      var _ref$search = _ref.search,
          search = _ref$search === undefined ? true : _ref$search,
          _ref$selections = _ref.selections,
          selections = _ref$selections === undefined ? true : _ref$selections;

      var genSearch = search ? this.genSearch() : null;
      var genSelections = selections ? this.genSelections() : [];
      var ref = search ? 'activator' : 'selections';
      var classes = 'input-group__selections';

      if (!search) {
        classes += this.selectedItems.length ? ' input-group__selections-outside' : '';
      }

      return this.$createElement('div', {
        'class': classes,
        style: { 'overflow': 'hidden' },
        ref: ref
      }, [].concat(_toConsumableArray(genSelections), [genSearch]));
    },
    genSelections: function genSelections() {
      if (this.hideSelections) {
        return [];
      }

      var length = this.selectedItems.length;
      var children = new Array(length);

      var genSelection = void 0;
      if (this.$scopedSlots.selection) {
        genSelection = this.genSlotSelection;
      } else if (this.chips) {
        genSelection = this.genChipSelection;
      } else if (this.segmented) {
        genSelection = this.genSegmentedBtn;
      } else {
        genSelection = this.genCommaSelection;
      }

      while (length--) {
        children[length] = genSelection(this.selectedItems[length], length, length === children.length - 1);
      }

      return children;
    },
    genSearch: function genSearch() {
      var _this2 = this;

      var data = {
        staticClass: 'input-group_select__autocomplete',
        'class': {
          'input-group_select__autocomplete_index': this.selectedIndex > -1
        },
        style: {
          flex: this.shouldBreak ? '1 0 100%' : null
        },
        attrs: _extends({}, this.$attrs, {
          disabled: this.disabled || !this.isAutocomplete,
          readonly: this.readonly,
          tabindex: this.disabled || !this.isAutocomplete ? -1 : this.tabindex
        }),
        domProps: {
          value: this.lazySearch || ''
        },
        directives: [{
          name: 'show',
          value: this.isAutocomplete || this.placeholder && !this.selectedItems.length
        }],
        ref: 'input',
        key: 'input'
      };

      if (this.isAutocomplete) {
        data.attrs.role = 'combobox';
        data.domProps.autocomplete = this.browserAutocomplete;

        data.on = _extends({}, this.genListeners(), {
          input: function input(e) {
            if (_this2.selectedIndex > -1) {
              return;
            }
            _this2.searchValue = e.target.value;
          }
        });

        data.directives = data.directives.concat(this.genDirectives());
      }

      if (this.placeholder) {
        data.domProps.placeholder = this.placeholder;
      }

      return this.$createElement('input', data);
    },
    genSegmentedBtn: function genSegmentedBtn(item) {
      if (!item.text || !item.callback) {
        Object(__WEBPACK_IMPORTED_MODULE_1__util_console__["b" /* consoleWarn */])('When using \'segmented\' prop without a selection slot, items must contain both a text and callback property', this);
        return null;
      }

      return this.$createElement('r-btn', {
        props: {
          flat: true
        },
        on: {
          click: function click(e) {
            e.stopPropagation();
            item.callback(e);
          }
        }
      }, [item.text]);
    },
    genSlotSelection: function genSlotSelection(item, index) {
      return this.$scopedSlots.selection({
        parent: this,
        item: item,
        index: index,
        selected: index === this.selectedIndex,
        disabled: this.disabled || this.readonly
      });
    },
    genChipSelection: function genChipSelection(item, index) {
      var _this3 = this;

      var isDisabled = this.disabled || this.readonly;
      var click = function click(e) {
        if (isDisabled) {
          return;
        }

        e.stopPropagation();
        _this3.focusInput();
        setTimeout(function () {
          _this3.activateInput();
          _this3.selectedIndex = index;
        });
      };

      return this.$createElement('r-chip', {
        staticClass: 'r-chip_select-multi',
        attrs: { tabindex: '-1' },
        props: {
          color: this.chipsColor || this.color,
          close: this.deletableChips && !isDisabled,
          outline: this.chipsOutline,
          round: this.chipsRound,
          small: this.chipsSmall,
          disabled: isDisabled,
          selected: index === this.selectedIndex
        },
        on: {
          click: click,
          focus: click,
          input: function input() {
            if (_this3.isMultiple) {
              _this3.selectItem(item, { focusInputAfterSelect: !_this3.chipsOutside });
            } else {
              _this3.inputValue = null;
            }
          }
        },
        key: this.getValue(item)
      }, [
      // to wrap text and apply some styles to text content later
      this.$createElement('span', {
        staticClass: 'r-chip__content-text'
      }, this.getText(item))]);
    },
    genCommaSelection: function genCommaSelection(item, index, last) {
      return this.$createElement('div', {
        staticClass: 'input-group__selections__comma',
        'class': {
          'input-group__selections__comma_active': index === this.selectedIndex
        },
        key: JSON.stringify(this.getValue(item)) // Item may be an object
      }, '' + this.getText(item) + (last ? '' : ', '));
    },
    genVirtualList: function genVirtualList() {
      var _this4 = this;

      var defaultVirtualOpts = {
        items: this.menuItems,
        itemHeight: 32,
        anyHeight: true,
        poolSize: 400,
        buffer: 100,
        maxContentHeight: this.maxHeight
      };
      var opts = _typeof(this.virtual) === 'object' ? this.virtual : {};
      var virtualOpts = Object.assign({}, defaultVirtualOpts, opts);

      var itemScoped = function itemScoped(props) {
        var disabled = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["s" /* getObjectValueByPath */])(props.item, _this4.itemDisabled);
        return _this4.$scopedSlots.item(_extends({
          selectItem: function selectItem(item) {
            if (disabled) {
              return;
            }
            _this4.selectItem(item);
          },
          selected: _this4.selectedItems.indexOf(props.item) > -1
        }, props, {
          itemKey: props.itemIndex + 1
        }));
      };

      var itemDefault = function itemDefault(props) {
        var item = props.item;
        if (item.header) {
          return _this4.genHeader(item);
        } else if (item.divider) {
          return _this4.genDivider(item);
        } else {
          return _this4.genTile(item);
        }
      };

      var scopedSlots = _extends({}, this.$scopedSlots, {
        item: function item(props) {
          return _this4.$scopedSlots.item ? itemScoped(props) : itemDefault(props);
        }
      });

      return this.$createElement('r-card', {
        style: {
          'max-height': typeof this.maxHeight === 'number' ? this.maxHeight + 'px' : this.maxHeight
        }
      }, [this.$createElement('r-list', {
        props: _extends({
          dense: this.dense,
          virtual: true
        }, virtualOpts),
        scopedSlots: scopedSlots,
        ref: 'list'
      })]);
    },
    genList: function genList() {
      var _this5 = this;

      var children = this.menuItems.map(function (o) {
        if (o.header) {
          return _this5.genHeader(o);
        } else if (o.divider) {
          return _this5.genDivider(o);
        } else {
          return _this5.genTile(o);
        }
      });

      if (!children.length && !this.hideNoData) {
        var noData = this.$slots['no-data'];
        if (noData) {
          children.push(noData);
        } else {
          children.push(this.genTile(this.noDataText, true));
        }
      }

      var prependItem = this.$slots['prepend-item'];
      prependItem && children.unshift(prependItem);

      var creatableTile = this.searchValue && this.isNeedCreateItem(this.searchValue) ? this.genCreatableTile() : null;

      return this.$createElement('r-card', [creatableTile, this.$createElement('r-list', {
        props: {
          dense: this.dense
        },
        ref: 'list'
      }, children)]);
    },
    genCreatableTile: function genCreatableTile() {
      var _genTile;

      return this.$createElement('r-list', {
        'class': 'list_creatable'
      }, [this.genTile((_genTile = {}, _defineProperty(_genTile, this.itemText, this.searchValue), _defineProperty(_genTile, this.itemValue, Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["l" /* generateNumber */])(-1e15, -1e20)), _genTile), false, this.createItem, true)]);
    },
    genHeader: function genHeader(item) {
      return this.$createElement('r-subheader', {
        props: item
      }, item.header);
    },
    genDivider: function genDivider(item) {
      return this.$createElement('r-divider', {
        props: item
      });
    },
    genLabel: function genLabel() {
      var singleLine = this.singleLine || this.isDropdown;

      if (singleLine && this.isDirty || singleLine && this.isFocused && this.searchValue) return null;

      var data = {};

      if (this.id) {
        data.attrs = { for: this.id };
      }

      return this.$createElement('label', data, this.$slots.label || this.label);
    },
    genTile: function genTile(item, disabled, functionOnClick, isNotSelectable) {
      var _this6 = this;

      var active = this.selectedItems.indexOf(item) !== -1;

      if (typeof disabled === 'undefined') {
        disabled = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["s" /* getObjectValueByPath */])(item, this.itemDisabled);
      }

      var data = {
        on: {
          click: function click(e) {
            if (disabled) {
              return;
            }

            if (functionOnClick) {
              return functionOnClick();
            }

            _this6.selectItem(item, {
              focusInputAfterSelect: true,
              removeItem: _this6.removeItemAfterSelect
            });
          }
        },
        props: {
          avatar: item === Object(item) && this.itemAvatar in item,
          ripple: this.listRipple,
          value: active
        },
        'class': isNotSelectable ? '' : 'list__tile_selectable'
      };

      if (disabled) {
        data.props.disabled = disabled;
      }

      data.props.activeClass = Object.keys(this.addTextColorClassChecks()).join(' ');

      if (this.$scopedSlots.item) {
        var tile = this.$scopedSlots.item({ parent: this, item: item, tile: data });
        if (Array.isArray(tile)) {
          tile = tile[0];
        }
        return this.needsTile(tile) ? this.$createElement('r-list-tile', data, [tile]) : tile;
      }

      return this.$createElement('r-list-tile', data, [this.genAction(item, active), this.genContent(item)]);
    },
    genAction: function genAction(item, active) {
      var _this7 = this;

      if (!this.isMultiple || this.isHidingSelected || this.chipsOutside) {
        return null;
      }

      var data = {
        staticClass: 'list__tile__action_select-multi',
        on: {
          click: function click(e) {
            e.stopPropagation();
            _this7.selectItem(item);
          }
        }
      };

      return this.$createElement('r-list-tile-action', data, [this.$createElement('r-checkbox', {
        props: {
          color: this.computedColor,
          inputValue: active
        }
      })]);
    },
    genContent: function genContent(item) {
      var text = this.getText(item);

      return this.$createElement('r-list-tile-content', [this.$createElement('r-list-tile-sub-title', {
        domProps: {
          innerHTML: this.genFiltered(text)
        }
      })]);
    }
  }
});

/***/ }),
/* 223 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
// Helpers


/**
 * Select helpers
 *
 * @mixin
 *
 * Helper methods for the
 * r-select component
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    getText: function getText(item) {
      return this.getPropertyFromItem(item, this.itemText);
    },
    getValue: function getValue(item) {
      return this.getPropertyFromItem(item, this.itemValue);
    },
    getPropertyFromItem: function getPropertyFromItem(item, field) {
      if (item !== Object(item)) {
        return item;
      }

      var value = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["s" /* getObjectValueByPath */])(item, field);

      return typeof value === 'undefined' ? item : value;
    },
    isItemsEqual: function isItemsEqual(firstItem, secondItem) {
      var itemText = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["h" /* ensureString */])(firstItem[this.itemText]).toLowerCase();
      var contentText = secondItem.toLowerCase();

      return itemText === contentText;
    },
    isNeedCreateItem: function isNeedCreateItem(target) {
      var _this = this;

      if (!this.creatableChips) {
        return;
      }

      var findInList = this.computedItems.some(function (item) {
        return _this.isItemsEqual(item, target);
      });
      if (findInList) {
        return;
      }

      var findInSelected = this.selectedItems.some(function (item) {
        return _this.isItemsEqual(item, target);
      });
      if (!findInSelected) {
        return true;
      }
    }
  }
});

/***/ }),
/* 224 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);


/**
 * Select menu methods
 *
 * @mixin
 *
 * Menu based methods for
 * the r-select component
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    activateInput: function activateInput() {
      this.isActive = true;
      this.isFocused = true;
    },
    deactivateInput: function deactivateInput() {
      this.isFocused = false;
      this.isActive = false;
      this.selectedIndex = -1;
    },
    hideMenu: function hideMenu() {
      this.menuIsActive = this.persistentMenu;
    },
    showMenu: function showMenu() {
      this.activateInput();
      this.showMenuItems();
      this.isMultiple && this.resetMenuIndex();
    },
    showMenuItems: function showMenuItems() {
      this.menuIsActive = true;
    },
    toggleMenu: function toggleMenu() {
      if (this.disabled || this.readonly || this.menuIsVisible) {
        return this.hideMenu();
      }

      this.showMenu();
      this.focusInput();
    },
    refreshMenuParams: function refreshMenuParams(val, prev) {
      var _this = this;

      // Wrap input to next line if overflowing
      if (this.$refs.input.scrollWidth > this.$refs.input.clientWidth) {
        this.shouldBreak = true;
        this.$nextTick(this.updateDimensionsMenu);
      } else if (val === null) {
        this.shouldBreak = false;
      }

      // Activate menu if inactive and searching
      if (this.isActive && !this.menuIsActive && val !== this.getText(this.selectedItem)) {
        this.menuIsActive = true;
      }

      // Only reset list index
      // if typing in search
      !val && prev && this.resetMenuIndex();

      this.$nextTick(function () {
        var isNeedSelectFirst = -1;

        if (_this.menuItems.length && _this.searchValue) {
          var firstItem = _this.menuItems[0][_this.itemText];
          var searchValuePrepare = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["h" /* ensureString */])(val).toLowerCase();
          var firstItemValuePrepare = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["h" /* ensureString */])(firstItem).toLowerCase();
          var isValuesIncludes = firstItemValuePrepare.includes(searchValuePrepare);

          isNeedSelectFirst = isValuesIncludes && (!_this.isAnyValueAllowed || _this.creatableChips) ? 0 : -1;
        }

        _this.setMenuIndex(isNeedSelectFirst);

        if (val !== null && _this.selectedIndex > -1) {
          _this.selectedIndex = -1;
        }
      });
    }
  }
});

/***/ }),
/* 225 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    appendIcon: {
      type: String,
      default: 'md-keyboard-arrow-down'
    },
    renderingMenu: {
      type: Boolean,
      default: true
    },
    appendIconCb: Function,
    attach: Boolean,
    staticAttach: Boolean,
    auto: Boolean,
    autocomplete: Boolean,
    browserAutocomplete: {
      type: String,
      default: 'on'
    },
    cacheItems: Boolean,
    chips: Boolean,
    chipsColor: String,
    chipsOutline: Boolean,
    chipsRound: Boolean,
    chipsSmall: {
      type: Boolean,
      default: true
    },
    chipsOutside: {
      type: Boolean,
      default: false
    },
    clearable: Boolean,
    combobox: Boolean,
    contentClass: String,
    creatableChips: Boolean,
    deletableChips: Boolean,
    backspaceDeletable: {
      type: Boolean,
      default: true
    },
    arrowNavigation: {
      type: Boolean,
      default: true
    },
    dense: Boolean,
    editable: Boolean,
    fitToContent: Boolean,
    hideSelected: Boolean,
    hideMenuAfterSelect: Boolean,
    hideNoData: Boolean,
    lazy: Boolean,
    listRipple: Boolean,
    removeItemAfterSelect: {
      type: Boolean,
      default: true
    },
    items: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    itemAvatar: {
      type: String,
      default: 'avatar'
    },
    itemDisabled: {
      type: String,
      default: 'disabled'
    },
    itemText: {
      type: String,
      default: 'text'
    },
    itemValue: {
      type: String,
      default: 'value'
    },
    maxHeight: {
      type: [Number, String],
      default: 300
    },
    menu: {
      type: Boolean,
      default: true
    },
    minWidth: {
      type: [Boolean, Number, String],
      default: false
    },
    multiple: Boolean,
    multiLine: Boolean,
    openOnClear: Boolean,
    overflow: Boolean,
    persistentMenu: Boolean,
    returnObject: Boolean,
    searchInput: {
      default: null
    },
    segmented: Boolean,
    singleLine: Boolean,
    tags: Boolean,
    valueComparator: {
      type: Function,
      default: function _default(a, b) {
        if (a !== Object(a)) {
          return a === b;
        }
        var aProps = Object.keys(a);
        var bProps = Object.keys(b);
        return aProps.length === bProps.length && aProps.every(function (propName) {
          return a[propName] === b[propName];
        });
      }
    },
    virtual: {
      type: [Object, Boolean],
      default: false
    },
    withoutBorders: Boolean
  }
});

/***/ }),
/* 226 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/**
 * Select watchers
 *
 * @mixin
 *
 * Watchers for the
 * r-select component
 */


/* harmony default export */ __webpack_exports__["a"] = ({
  watch: {
    filteredItems: function filteredItems() {
      this.updateDimensionsMenu();
      this.refreshMenuParams(this.searchValue);
    },
    inputValue: function inputValue(val) {
      // Search for an existing item when a
      // value was selected from the menu
      if (this.combobox && this.isNotFiltering) {
        val = this.findExistingItem(val);
      }

      // Populate selected items
      this.genSelectedItems(val);

      // Only fire an update
      // if values do not
      // match
      val !== this.value && this.$emit('input', val);

      // When inputValue is changed
      // and combobox is true set
      // menu property to false
      if (this.combobox) {
        this.menuIsActive = this.persistentMenu;
      }
    },
    isActive: function isActive(val) {
      if (val) {
        if (!this.chips && !this.$scopedSlots.selection) {
          this.searchValue = this.getText(this.selectedItem);
        }
        return;
      }

      this.blur();

      if (this.tags && this.searchValue) {
        this.updateTags(this.searchValue);
      }

      if (this.combobox && this.lazySearch && !this.isNotFiltering) {
        this.inputValue = this.lazySearch;
      }

      // Only set search value if
      // there is a value to set
      this.searchValue && (this.searchValue = null);
    },
    isBooted: function isBooted() {
      var _this = this;

      this.$nextTick(function () {
        if (_this.content && _this.content.addEventListener) {
          _this.content.addEventListener('scroll', _this.onScroll, false);
        }
      });
    },
    items: function items(val) {
      var _this2 = this;

      if (this.cacheItems) {
        this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val));
      }

      this.resetMenuIndex();

      // Tags and combobox should not
      // pre-select the first entry
      if (this.searchValue && !this.isAnyValueAllowed) {
        this.$nextTick(function () {
          return _this2.setMenuIndex(0);
        });
      }

      this.genSelectedItems();
    },
    menuIsActive: function menuIsActive(val) {
      this.$emit('toggle-menu', val);

      if (!val) {
        return;
      }

      this.isBooted = true;
    },
    isMultiple: function isMultiple(val) {
      this.inputValue = val ? [] : null;
    },
    searchInput: function searchInput(val) {
      this.searchValue = val;
    },
    searchValue: function searchValue(val, prev) {
      this.refreshMenuParams(val, prev);
    },
    selectedItems: function selectedItems() {
      var _this3 = this;

      if (this.isAutocomplete) {
        this.$nextTick(function (_) {
          if (_this3.isDetailsAlwaysShowing || !_this3.rules.length) {
            _this3.updateDimensionsMenu();
          } else {
            // details element could be collapsed/expanded after validation
            // with duration ~ 350 ms
            setTimeout(_this3.updateDimensionsMenu, 350);
          }
        });
      }

      if (this.hideMenuAfterSelect) {
        this.resetMenuIndex();
        this.hideMenu();
      }
    },
    value: function value(val) {
      this.inputValue = val;
      this.validate();
    }
  }
});

/***/ }),
/* 227 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RSuggester_vue__ = __webpack_require__(228);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RSuggester_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-suggester', __WEBPACK_IMPORTED_MODULE_0__RSuggester_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RSuggester_vue__["a" /* default */]);

/***/ }),
/* 228 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSuggester_vue__ = __webpack_require__(91);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f167bd94_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RSuggester_vue__ = __webpack_require__(236);
function injectStyle (ssrContext) {
  __webpack_require__(229)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RSuggester_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_f167bd94_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RSuggester_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 229 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 230 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListGroup_vue__ = __webpack_require__(93);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListGroup_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 231 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdArrowDropDown_vue__ = __webpack_require__(94);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdArrowDropDown_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdArrowDropDown_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdArrowDropDown_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 232 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileTitle_vue__ = __webpack_require__(95);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileTitle_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileActionText_vue__ = __webpack_require__(96);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RListTileActionText_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 234 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__computed__ = __webpack_require__(235);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_0__computed__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__props__ = __webpack_require__(97);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_1__props__["a"]; });



/***/ }),
/* 235 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Computed; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__props__ = __webpack_require__(97);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_helpers__ = __webpack_require__(1);



var Computed = {
  computed: {
    classes: function classes() {
      return {
        'r-suggester': true,
        'r-suggester_focused': this.focused,
        'r-suggester_errored': this.errored,
        'r-suggester_prepend-icon': !!this.$slots.prependIcon,
        'r-suggester_append-icon': !!this.$slots.appendIcon
      };
    },
    menuOptionsComputed: function menuOptionsComputed() {
      return Object.assign({}, __WEBPACK_IMPORTED_MODULE_0__props__["b" /* defaultMenuOptions */], this.menuOptions, {
        nudgeTop: this.nudgeTop
      });
    },
    nudgeTop: function nudgeTop() {
      var nudgeTop = -this.inputHeight;
      if (this.label && this.$rabotify.breakpoint.mdAndDown) {
        nudgeTop -= 18;
      }
      return nudgeTop;
    }
  }
};

/***/ }),
/* 236 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"r-suggester"},[_c('div',{staticClass:"r-suggester__inner"},[_c('div',{staticClass:"r-suggester__input-group"},[_c('r-text-field',{key:"input",ref:"input",staticClass:"r-suggester__input",attrs:{"color":_vm.color,"disabled":_vm.disabled,"readonly":_vm.readonly,"placeholder":_vm.placeholder,"label":_vm.label,"clearable":_vm.clearable},on:{"focus":_vm.onFocus,"blur":_vm.onBlur,"keydown":_vm.onKeyDown},model:{value:(_vm.lazySearch),callback:function ($$v) {_vm.lazySearch=$$v},expression:"lazySearch"}})],1),_vm._v(" "),_c('div',{staticClass:"r-suggester__menu-wrapper"},[_c('r-menu',_vm._b({ref:"menu",attrs:{"openOnClick":_vm.openOnClickAvailable,"includeActivator":"","activator":_vm.$refs.input && _vm.$refs.input.$el,"z-index":_vm.zIndex},on:{"input":_vm.onMenuInput},model:{value:(_vm.isActive),callback:function ($$v) {_vm.isActive=$$v},expression:"isActive"}},'r-menu',_vm.menuOptionsComputed,false),[_c('r-list',_vm._l((_vm.lazyItems),function(item,index){return _c('r-list-tile',{key:item.id || index,class:{'list__tile_highlighted': index === _vm.menuIndex},on:{"click":function($event){_vm.selectItemOnClick(item)}}},[_c('r-list-tile-sub-title',[_vm._v(_vm._s(_vm.getItemText( item )))])],1)}))],1)],1)])])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 237 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RChip_vue__ = __webpack_require__(73);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RChip_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-chip', __WEBPACK_IMPORTED_MODULE_0__RChip_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RChip_vue__["a" /* default */]);

/***/ }),
/* 238 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RMenu_vue__ = __webpack_require__(28);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RMenu_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-menu', __WEBPACK_IMPORTED_MODULE_0__RMenu_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RMenu_vue__["a" /* default */]);

/***/ }),
/* 239 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RSubheader_vue__ = __webpack_require__(87);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RSubheader_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-subheader', __WEBPACK_IMPORTED_MODULE_0__RSubheader_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RSubheader_vue__["a" /* default */]);

/***/ }),
/* 240 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RDivider_vue__ = __webpack_require__(89);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RDivider_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-divider', __WEBPACK_IMPORTED_MODULE_0__RDivider_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RDivider_vue__["a" /* default */]);

/***/ }),
/* 241 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RVirtualScroller_vue__ = __webpack_require__(77);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RVirtualScroller_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-virtual-scroller', __WEBPACK_IMPORTED_MODULE_0__RVirtualScroller_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RVirtualScroller_vue__["a" /* default */]);

/***/ }),
/* 242 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RInfinityScroll_vue__ = __webpack_require__(243);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RInfinityScroll_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-infinity-scroll', __WEBPACK_IMPORTED_MODULE_0__RInfinityScroll_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RInfinityScroll_vue__["a" /* default */]);

/***/ }),
/* 243 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RInfinityScroll_vue__ = __webpack_require__(98);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5ae44a4c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RInfinityScroll_vue__ = __webpack_require__(244);
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RInfinityScroll_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5ae44a4c_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RInfinityScroll_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 244 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:"scroll",rawName:"v-scroll",value:(_vm.onScroll),expression:"onScroll"}],ref:"container",staticClass:"infinity-scroll"},[_vm._t("default"),_vm._v(" "),(_vm.canAutoLoad)?_c('div',{staticClass:"infinity-scroll__loading"},[(_vm.loading)?[(_vm.$slots.autoLoading)?_vm._t("autoLoading"):_c('r-loading',{attrs:{"colorful":""}})]:_vm._e()],2):(_vm.canLoadNext)?_c('div',{staticClass:"infinity-scroll__actions"},[_vm._t("actions")],2):(_vm.loading)?_c('div',{staticClass:"infinity-scroll__loading"},[(_vm.$slots.loading)?_vm._t("loading"):_c('r-loading',{attrs:{"colorful":""}})],2):_vm._e()],2)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 245 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RTabs_vue__ = __webpack_require__(246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RTab_vue__ = __webpack_require__(104);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RTabsItems_vue__ = __webpack_require__(102);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RTabItem_vue__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RTabsSlider_vue__ = __webpack_require__(108);
/* unused harmony reexport RTabs */
/* unused harmony reexport RTabItem */
/* unused harmony reexport RTab */
/* unused harmony reexport RTabsItems */
/* unused harmony reexport RTabsSlider */








/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RTabs_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-tabs', __WEBPACK_IMPORTED_MODULE_0__RTabs_vue__["a" /* default */]);
  Vue.component('r-tabs-slider', __WEBPACK_IMPORTED_MODULE_4__RTabsSlider_vue__["a" /* default */]);
  Vue.component('r-tabs-items', __WEBPACK_IMPORTED_MODULE_2__RTabsItems_vue__["a" /* default */]);
  Vue.component('r-tab-item', __WEBPACK_IMPORTED_MODULE_3__RTabItem_vue__["a" /* default */]);
  Vue.component('r-tab', __WEBPACK_IMPORTED_MODULE_1__RTab_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RTabs_vue__["a" /* default */]);

/***/ }),
/* 246 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabs_vue__ = __webpack_require__(99);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(247)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTabs_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 247 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 248 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronLeft_vue__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronLeft_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronLeft_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronLeft_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 249 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronRight_vue__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronRight_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronRight_vue__);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_vue_loader_lib_selector_type_script_index_0_MdChevronRight_vue___default.a,
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["default"] = (Component.exports);


/***/ }),
/* 250 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Tabs computed
 *
 * @mixin
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  computed: {
    activeIndex: function activeIndex() {
      var _this = this;

      return this.tabs.findIndex(function (tab, index) {
        var id = tab.action === tab ? index.toString() : tab.action;
        return id === _this.lazyValue;
      });
    },
    activeTab: function activeTab() {
      if (!this.tabs.length) {
        return undefined;
      }

      return this.tabs[this.activeIndex];
    },
    containerStyles: function containerStyles() {
      return this.height ? {
        height: parseInt(this.height, 10) + 'px'
      } : null;
    },
    hasArrows: function hasArrows() {
      return (this.showArrows || !this.isMobile) && this.isOverflowing;
    },

    inputValue: {
      get: function get() {
        return this.lazyValue;
      },
      set: function set(val) {
        // Always use strings
        val = val.toString();

        this.lazyValue = val;
        this.$emit('input', val);
      }
    },
    isMobile: function isMobile() {
      return this.$rabotify.breakpoint.width < this.mobileBreakPoint;
    },
    sliderStyles: function sliderStyles() {
      return {
        left: this.sliderLeft + 'px',
        transition: this.sliderLeft != null ? null : 'none',
        width: this.sliderWidth + 'px'
      };
    },
    target: function target() {
      return this.activeTab ? this.activeTab.action : null;
    }
  }
});

/***/ }),
/* 251 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Tabs generators
 *
 * @mixin
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    genBar: function genBar(items) {
      return this.$createElement('div', {
        staticClass: 'tabs__bar',
        'class': this.addBackgroundColorClassChecks({}),
        ref: 'bar'
      }, [this.genTransition('prepend'), this.genWrapper(this.genContainer(items)), this.genTransition('append')]);
    },
    genContainer: function genContainer(items) {
      return this.$createElement('div', {
        staticClass: 'tabs__container',
        class: {
          'tabs__container_align-with-title': this.alignWithTitle,
          'tabs__container_centered': this.centered,
          'tabs__container_fixed-tabs': this.fixedTabs,
          'tabs__container_grow': this.grow,
          'tabs__container_icons-and-text': this.iconsAndText,
          'tabs__container_overflow': this.isOverflowing,
          'tabs__container_right': this.right
        },
        style: this.containerStyles,
        ref: 'container'
      }, items);
    },
    genIcon: function genIcon(direction) {
      var _this = this;

      if (!this.hasArrows || !this[direction + 'IconVisible']) {
        return null;
      }

      var icon = this.$createElement(this[direction + 'Icon']);

      return this.$createElement('span', {
        staticClass: 'tabs__icon tabs__icon_' + direction,
        props: {
          disabled: !this[direction + 'IconVisible']
        },
        on: {
          click: function click() {
            return _this.scrollTo(direction);
          }
        }
      }, [icon]);
    },
    genItems: function genItems(items, item) {
      if (items.length > 0) {
        return items;
      }
      if (!item.length) {
        return null;
      }

      return this.$createElement('r-tabs-items', item);
    },
    genTransition: function genTransition(direction) {
      var transitionName = 'slide-x' + (direction !== 'append' ? '' : '-reverse') + '-transition';
      return this.$createElement('transition', {
        props: { name: transitionName }
      }, [this.genIcon(direction)]);
    },
    genWrapper: function genWrapper(items) {
      var _this2 = this;

      return this.$createElement('div', {
        staticClass: 'tabs__wrapper',
        class: {
          'tabs__wrapper_show-arrows': this.hasArrows
        },
        ref: 'wrapper',
        directives: [{
          name: 'touch',
          value: {
            start: function start(e) {
              return _this2.overflowCheck(e, _this2.onTouchStart);
            },
            move: function move(e) {
              return _this2.overflowCheck(e, _this2.onTouchMove);
            },
            end: function end(e) {
              return _this2.overflowCheck(e, _this2.onTouchEnd);
            }
          }
        }]
      }, [items]);
    },
    genSlider: function genSlider(items) {
      items = [this.$createElement('r-tabs-slider', {
        props: { color: this.sliderColor }
      })];

      return this.$createElement('div', {
        staticClass: 'tabs__slider-wrapper',
        style: this.sliderStyles
      }, items);
    }
  }
});

/***/ }),
/* 252 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Tabs props
 *
 * @mixin
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  props: {
    alignWithTitle: Boolean,
    appendIcon: {
      type: String,
      default: 'md-chevron-right'
    },
    centered: Boolean,
    fixedTabs: Boolean,
    grow: Boolean,
    height: {
      type: [Number, String],
      default: undefined,
      validator: function validator(v) {
        return !isNaN(parseInt(v));
      }
    },
    hideSlider: Boolean,
    iconsAndText: Boolean,
    mobileBreakPoint: {
      type: [Number, String],
      default: 1280,
      validator: function validator(v) {
        return !isNaN(parseInt(v));
      }
    },
    prependIcon: {
      type: String,
      default: 'md-chevron-left'
    },
    right: Boolean,
    showArrows: Boolean,
    sliderColor: {
      type: String,
      default: 'primary'
    },
    value: [Number, String]
  }
});

/***/ }),
/* 253 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Tabs touch
 *
 * @mixin
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    newOffset: function newOffset(direction) {
      var clientWidth = this.$refs.wrapper.clientWidth;

      if (direction === 'prepend') {
        return Math.max(this.scrollOffset - clientWidth, 0);
      } else {
        return Math.min(this.scrollOffset + clientWidth, this.$refs.container.clientWidth - clientWidth);
      }
    },
    onTouchStart: function onTouchStart(e) {
      this.startX = this.scrollOffset + e.touchstartX;
      this.$refs.container.style.transition = 'none';
      this.$refs.container.style.willChange = 'transform';
    },
    onTouchMove: function onTouchMove(e) {
      var container = this.$refs.container;
      var wrapper = this.$refs.wrapper;
      var maxScrollOffset = container.clientWidth - wrapper.clientWidth;
      var reduceScrollOffset = function reduceScrollOffset(offset) {
        return offset / (2 + Math.abs(offset) / 100);
      };
      var scrollOffset = this.startX - e.touchmoveX;
      if (scrollOffset < 0) {
        scrollOffset = reduceScrollOffset(scrollOffset);
      } else if (scrollOffset >= maxScrollOffset) {
        scrollOffset = maxScrollOffset + reduceScrollOffset(scrollOffset - maxScrollOffset);
      }
      this.scrollOffset = scrollOffset;
    },
    onTouchEnd: function onTouchEnd() {
      var container = this.$refs.container;
      var wrapper = this.$refs.wrapper;
      var maxScrollOffset = container.clientWidth - wrapper.clientWidth;
      container.style.transition = null;
      container.style.willChange = null;

      /* istanbul ignore else */
      if (this.scrollOffset < 0 || !this.isOverflowing) {
        this.scrollOffset = 0;
      } else if (this.scrollOffset >= maxScrollOffset) {
        this.scrollOffset = maxScrollOffset;
      }
    }
  }
});

/***/ }),
/* 254 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * Tabs watchers
 *
 * @mixin
 */
/* harmony default export */ __webpack_exports__["a"] = ({
  watch: {
    activeTab: function activeTab(tab, prev) {
      !prev && tab && this.updateTabs();

      setTimeout(this.callSlider, 0);

      if (!tab) {
        return;
      }

      var action = tab.action;
      this.tabItems && this.tabItems(action === tab ? this.tabs.indexOf(tab).toString() : action);
    },

    alignWithTitle: 'callSlider',
    centered: 'callSlider',
    fixedTabs: 'callSlider',
    isBooted: 'findActiveLink',
    lazyValue: 'updateTabs',
    right: 'callSlider',
    value: function value(val) {
      this.lazyValue = val;
    },

    '$rabotify.application.left': 'onContainerResize',
    '$rabotify.application.right': 'onContainerResize',
    scrollOffset: function scrollOffset(val) {
      this.$refs.container.style.transform = 'translateX(' + -val + 'px)';
      if (this.hasArrows) {
        this.prependIconVisible = this.checkPrependIcon();
        this.appendIconVisible = this.checkAppendIcon();
      }
    }
  }
});

/***/ }),
/* 255 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RSmartRender_vue__ = __webpack_require__(110);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RSmartRender_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-smart-render', __WEBPACK_IMPORTED_MODULE_0__RSmartRender_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RSmartRender_vue__["a" /* default */]);

/***/ }),
/* 256 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RTooltip_vue__ = __webpack_require__(258);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RTooltip_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-tooltip', __WEBPACK_IMPORTED_MODULE_0__RTooltip_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RTooltip_vue__["a" /* default */]);

/***/ }),
/* 258 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTooltip_vue__ = __webpack_require__(112);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(259)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RTooltip_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 259 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 260 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export RSpacer */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_helpers__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RContent_vue__ = __webpack_require__(261);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RContainer_vue__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RFlex_vue__ = __webpack_require__(264);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RLayout_vue__ = __webpack_require__(265);
/* unused harmony reexport RContainer */
/* unused harmony reexport RContent */
/* unused harmony reexport RFlex */
/* unused harmony reexport RLayout */







var RSpacer = Object(__WEBPACK_IMPORTED_MODULE_0__util_helpers__["d" /* createSimpleFunctional */])('spacer');



/* istanbul ignore next */
var RGrid = {
  install: function install(Vue) {
    Vue.component('r-content', __WEBPACK_IMPORTED_MODULE_1__RContent_vue__["a" /* default */]);
    Vue.component('r-container', __WEBPACK_IMPORTED_MODULE_2__RContainer_vue__["a" /* default */]);
    Vue.component('r-flex', __WEBPACK_IMPORTED_MODULE_3__RFlex_vue__["a" /* default */]);
    Vue.component('r-layout', __WEBPACK_IMPORTED_MODULE_4__RLayout_vue__["a" /* default */]);
    Vue.component('r-spacer', RSpacer);
  }
};

/* harmony default export */ __webpack_exports__["a"] = (RGrid);

/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RContent_vue__ = __webpack_require__(113);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(262)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RContent_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 262 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RContainer_vue__ = __webpack_require__(114);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RContainer_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RFlex_vue__ = __webpack_require__(115);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RFlex_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 265 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RLayout_vue__ = __webpack_require__(116);
/* unused harmony namespace reexport */
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = null
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RLayout_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 266 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RImage_vue__ = __webpack_require__(267);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RImage_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-image', __WEBPACK_IMPORTED_MODULE_0__RImage_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RImage_vue__["a" /* default */]);

/***/ }),
/* 267 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RImage_vue__ = __webpack_require__(117);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_440c758b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RImage_vue__ = __webpack_require__(278);
function injectStyle (ssrContext) {
  __webpack_require__(268)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RImage_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_440c758b_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RImage_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 268 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 269 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RImageError_vue__ = __webpack_require__(118);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_76a337d7_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RImageError_vue__ = __webpack_require__(271);
function injectStyle (ssrContext) {
  __webpack_require__(270)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RImageError_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_76a337d7_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RImageError_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 270 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes,attrs:{"title":"Невозможно загрузить изображение"}},[_c('div',{staticClass:"r-image-error__inner"},[(!_vm.isContainerSmall)?_c('md-error-outline',{staticClass:"text_gray-dark icon_small"}):_vm._e(),_vm._v(" "),(!_vm.isContainerSmall)?_c('span',{staticClass:"r-image-error__text"},[_vm._v("Невозможно загрузить изображение")]):_vm._e(),_vm._v(" "),(!_vm.isContainerSmall)?_c('r-btn',{attrs:{"ripple":"","outline":"","small":"","round":_vm.round},on:{"click":_vm.retry}},[_vm._v("Повторить")]):_c('r-btn',{attrs:{"flat":"","ripple":"","small":"","icon":"","round":_vm.round},on:{"click":_vm.retry}},[_c('md-refresh',{staticClass:"text_gray-dark icon_small"})],1)],1)])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operations__ = __webpack_require__(31);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__image_loader__ = __webpack_require__(276);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "a", function() { return __WEBPACK_IMPORTED_MODULE_1__image_loader__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__script_loader__ = __webpack_require__(277);
/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, "b", function() { return __WEBPACK_IMPORTED_MODULE_2__script_loader__["a"]; });




/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export ensureNumber */
/* harmony export (immutable) */ __webpack_exports__["a"] = clampNumber;
/* harmony export (immutable) */ __webpack_exports__["b"] = delay;
/**
 * @param {*} value
 * @returns {number}
 */
function ensureNumber(value) {
  value = Number(value);

  return !Number.isNaN(value) ? value : 0;
}

/**
 * @param {number} number
 * @param {number} min
 * @param {number} max
 * @returns {number}
 */
function clampNumber(number) {
  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -Infinity;
  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;

  if (min > max) {
    var _ref = [max, min];
    min = _ref[0];
    max = _ref[1];
  }

  return Math.min(Math.max(ensureNumber(number), min), max);
}

/**
 * @param {number} delayMs
 * @returns {Promise<*>}
 */
function delay(delayMs) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, delayMs);
  });
}

/***/ }),
/* 274 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export RetryOperationCached */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__retry_operation__ = __webpack_require__(124);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_entity_cache__ = __webpack_require__(275);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }




var RetryOperationCached = function (_RetryOperation) {
  _inherits(RetryOperationCached, _RetryOperation);

  /**
   * @param {number} maxCacheSize
   */


  /**
   * @type {EntityCache|*}
   * @private
   */
  function RetryOperationCached() {
    var maxCacheSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

    _classCallCheck(this, RetryOperationCached);

    var _this = _possibleConstructorReturn(this, (RetryOperationCached.__proto__ || Object.getPrototypeOf(RetryOperationCached)).call(this));

    _this._cache = null;
    _this._maxCacheSize = 0;

    _this._initCache(maxCacheSize);
    return _this;
  }

  /**
   * @param {string} operation
   * @param {number} attemptsNumber
   * @param {string} cacheKey
   * @returns {Promise<*>}
   */


  /**
   * @type {number}
   * @private
   */


  _createClass(RetryOperationCached, [{
    key: 'retry',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operation) {
        var _this2 = this;

        var attemptsNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;
        var cacheKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                cacheKey = cacheKey || operation;

                if (!this._cache.hasEntity(cacheKey)) {
                  _context.next = 3;
                  break;
                }

                return _context.abrupt('return', {
                  cached: true,
                  cacheKey: cacheKey,
                  item: this._cache.getEntity(cacheKey)
                });

              case 3:
                return _context.abrupt('return', _get(RetryOperationCached.prototype.__proto__ || Object.getPrototypeOf(RetryOperationCached.prototype), 'retry', this).call(this, operation, attemptsNumber).then(function (item) {
                  _this2._cache.addEntity(cacheKey, item);

                  return {
                    cached: false,
                    cacheKey: cacheKey,
                    item: item
                  };
                }));

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function retry(_x2) {
        return _ref.apply(this, arguments);
      }

      return retry;
    }()

    /**
     * @returns {EntityCache}
     */

  }, {
    key: '_initCache',


    /**
     * @param {number} maxCacheSize
     * @private
     */
    value: function _initCache(maxCacheSize) {
      this._maxCacheSize = maxCacheSize;
      this._cache = new __WEBPACK_IMPORTED_MODULE_1__utils_entity_cache__["a" /* EntityCache */](maxCacheSize);
    }
  }, {
    key: 'cache',
    get: function get() {
      return this._cache;
    }

    /**
     * @returns {number}
     */

  }, {
    key: 'maxCacheSize',
    get: function get() {
      return this._maxCacheSize;
    }

    /**
     * @returns {number}
     */

  }, {
    key: 'cacheSize',
    get: function get() {
      return this._cache.size;
    }
  }]);

  return RetryOperationCached;
}(__WEBPACK_IMPORTED_MODULE_0__retry_operation__["a" /* RetryOperation */]);

/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EntityCache; });
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var EntityCache = function () {

  /**
   * @param {number} maxEntitiesNumber
   */


  /**
   * @type {*}
   * @private
   */
  function EntityCache(maxEntitiesNumber) {
    _classCallCheck(this, EntityCache);

    this._maxEntitiesNumber = 0;
    this._cache = {};
    this._cacheHistory = [];

    this._maxEntitiesNumber = maxEntitiesNumber;
  }

  /**
   * @param {string} key
   * @returns {*|null}
   */


  /**
   * @type {string[]}
   * @private
   */


  /**
   * @type {number}
   * @private
   */


  _createClass(EntityCache, [{
    key: "getEntity",
    value: function getEntity(key) {
      return this._cache[key] || null;
    }

    /**
     * @param {string} key
     * @param {*} entity
     * @returns {EntityCache}
     */

  }, {
    key: "addEntity",
    value: function addEntity(key, entity) {
      if (!this.hasEntity(key)) {
        this._cache[key] = entity;
        this._cacheHistory.push(key);
      }
      this._freeOldEntities();
      return this;
    }

    /**
     * @param {string} key
     * @returns {boolean}
     */

  }, {
    key: "hasEntity",
    value: function hasEntity(key) {
      return !!this._cache[key];
    }

    /**
     * @param {string} key
     * @returns {EntityCache}
     */

  }, {
    key: "removeEntity",
    value: function removeEntity(key) {
      if (this.hasEntity(key)) {
        this._cache[key].remove && this._cache[key].remove();
        this._cache[key] = null;
        delete this._cache[key];
      }
      return this;
    }

    /**
     * @returns {number}
     */

  }, {
    key: "_freeOldEntities",


    /**
     * @private
     */
    value: function _freeOldEntities() {
      while (this._cacheHistory.length > this._maxEntitiesNumber) {
        this.removeEntity(this._cacheHistory.shift());
      }
    }
  }, {
    key: "size",
    get: function get() {
      return Object.keys(this._cache || {}).length;
    }
  }]);

  return EntityCache;
}();

/***/ }),
/* 276 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ImageLoader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operations__ = __webpack_require__(31);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var ImageLoader = function (_RetryOperation) {
  _inherits(ImageLoader, _RetryOperation);

  function ImageLoader() {
    _classCallCheck(this, ImageLoader);

    return _possibleConstructorReturn(this, (ImageLoader.__proto__ || Object.getPrototypeOf(ImageLoader)).apply(this, arguments));
  }

  _createClass(ImageLoader, [{
    key: 'action',


    /**
     * @param {string} imageUrl
     * @returns {Promise<*>}
     * @private
     */
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(imageUrl) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', new Promise(function (resolve, reject) {
                  if (typeof window === 'undefined') {
                    return resolve();
                  }

                  var image = window.Image ? new Image() : document.createElement('img');

                  image.onload = function (event) {
                    return resolve(image);
                  };
                  image.onerror = function (error) {
                    return reject(error);
                  };

                  image.src = imageUrl;
                }));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function action(_x) {
        return _ref.apply(this, arguments);
      }

      return action;
    }()
  }]);

  return ImageLoader;
}(__WEBPACK_IMPORTED_MODULE_0__operations__["a" /* RetryOperation */]);

/***/ }),
/* 277 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ScriptLoader; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__operations__ = __webpack_require__(31);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var ScriptLoader = function (_RetryOperation) {
  _inherits(ScriptLoader, _RetryOperation);

  function ScriptLoader() {
    _classCallCheck(this, ScriptLoader);

    return _possibleConstructorReturn(this, (ScriptLoader.__proto__ || Object.getPrototypeOf(ScriptLoader)).apply(this, arguments));
  }

  _createClass(ScriptLoader, [{
    key: 'action',


    /**
     * @param {string} resourceUrl
     * @returns {Promise<*>}
     * @private
     */
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resourceUrl) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', new Promise(function (resolve, reject) {
                  var resourceLoader = document.createElement('script');
                  resourceLoader.type = 'text/javascript';
                  resourceLoader.async = true;

                  if (resourceLoader.readyState) {
                    // IE
                    resourceLoader.onreadystatechange = function () {
                      if (resourceLoader.readyState === 'loaded' || resourceLoader.readyState === 'complete') {
                        resourceLoader.onreadystatechange = null;
                        resolve(resourceLoader);
                      }
                    };
                  } else {
                    // other browsers
                    resourceLoader.onload = function () {
                      return resolve(resourceLoader);
                    };
                    resourceLoader.onerror = function () {
                      return reject(resourceLoader);
                    };
                  }

                  resourceLoader.src = resourceUrl;

                  document.getElementsByTagName('head')[0].appendChild(resourceLoader);
                }));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function action(_x) {
        return _ref.apply(this, arguments);
      }

      return action;
    }()
  }]);

  return ScriptLoader;
}(__WEBPACK_IMPORTED_MODULE_0__operations__["a" /* RetryOperation */]);

/***/ }),
/* 278 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(_vm.tag,{ref:"container",tag:"component",class:_vm.classes,style:(_vm.styles),attrs:{"itemscope":"","itemtype":"http://schema.org/ImageObject"}},[(_vm.isWebpMode)?_c('div',{staticClass:"r-image__inner"},[_c('picture',{staticClass:"r-image__image-wrapper"},[_c('source',{attrs:{"srcset":((_vm.imageObject.url) + ".webp"),"type":"image/webp"}}),_vm._v(" "),_c('img',{staticClass:"r-image__image",style:(_vm.imageStyles),attrs:{"src":_vm.imageObject.url,"alt":_vm.alt,"itemprop":"contentUrl"}})])]):_vm._e(),_vm._v(" "),(_vm.isImgMode)?_c('div',{staticClass:"r-image__inner"},[_c('transition',{attrs:{"name":"fade-transition"}},[(_vm.showError && _vm.errored)?_c('r-image-error',{attrs:{"errored":_vm.errored,"round":_vm.round,"containerWidth":_vm.containerWidth},on:{"retry":_vm.retry}}):_vm._e()],1),_vm._v(" "),_c('transition',{attrs:{"name":"image-transition","mode":"in-out"}},[(!_vm.originalLoaded && _vm.hasThumbnail)?_c('div',{key:"thumbnail",staticClass:"r-image__image-wrapper"},[_c('img',{staticClass:"r-image__image",style:(_vm.imageStyles),attrs:{"src":_vm.imageObject.thumbnailSrc,"alt":_vm.alt,"itemprop":"contentUrl"}})]):_c('div',{key:"original",staticClass:"r-image__image-wrapper"},[_c('img',{staticClass:"r-image__image",style:(_vm.imageStyles),attrs:{"src":_vm.imageObject.src,"alt":_vm.alt,"itemprop":"contentUrl"}})])])],1):(_vm.isBackgroundMode)?[_c('div',{staticClass:"r-image__background",style:(_vm.backgroundStyles)},[_vm._t("default")],2)]:_vm._e()],2)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 279 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RToast_vue__ = __webpack_require__(280);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RToast_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-toast', __WEBPACK_IMPORTED_MODULE_0__RToast_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RToast_vue__["a" /* default */]);

/***/ }),
/* 280 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToast_vue__ = __webpack_require__(125);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(281)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RToast_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 281 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 282 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_core__ = __webpack_require__(34);
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Rabotify", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["Rabotify"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RApp", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RApp"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RLoading", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RLoading"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RBtn", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RBtn"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RBtnToggle", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RBtnToggle"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RCheckbox", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RCheckbox"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RSwitch", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RSwitch"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RTextField", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RTextField"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RRadioGroup", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RRadioGroup"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RForm", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RForm"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RFormGroup", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RFormGroup"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RFormFieldError", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RFormFieldError"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RCard", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RCard"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RToolbar", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RToolbar"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RDialog", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RDialog"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RDialogCard", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RDialogCard"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RBottomSheet", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RBottomSheet"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RSelect", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RSelect"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RSuggester", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RSuggester"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RChip", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RChip"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RMenu", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RMenu"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RList", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RList"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RSubheader", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RSubheader"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RDivider", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RDivider"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RVirtualScroller", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RVirtualScroller"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RInfinityScroll", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RInfinityScroll"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RTabs", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RTabs"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RSmartRender", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RSmartRender"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RTooltip", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RTooltip"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RGrid", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RGrid"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RImage", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RImage"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "RToast", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["RToast"]; });
/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, "Transitions", function() { return __WEBPACK_IMPORTED_MODULE_0__index_core__["Transitions"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RMobileHeader__ = __webpack_require__(283);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RMobileHeader", function() { return __WEBPACK_IMPORTED_MODULE_1__RMobileHeader__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RPage__ = __webpack_require__(287);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RPage", function() { return __WEBPACK_IMPORTED_MODULE_2__RPage__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__RPageHeadline__ = __webpack_require__(293);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RPageHeadline", function() { return __WEBPACK_IMPORTED_MODULE_3__RPageHeadline__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__RRichTextField__ = __webpack_require__(294);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RRichTextField", function() { return __WEBPACK_IMPORTED_MODULE_4__RRichTextField__["a"]; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__RMap__ = __webpack_require__(302);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "RMap", function() { return __WEBPACK_IMPORTED_MODULE_5__RMap__["a"]; });








/***/ }),
/* 283 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RMobileHeader_vue__ = __webpack_require__(284);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RMobileHeader_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-mobile-header', __WEBPACK_IMPORTED_MODULE_0__RMobileHeader_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RMobileHeader_vue__["a" /* default */]);

/***/ }),
/* 284 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RMobileHeader_vue__ = __webpack_require__(126);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_076595bc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RMobileHeader_vue__ = __webpack_require__(286);
function injectStyle (ssrContext) {
  __webpack_require__(285)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RMobileHeader_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_076595bc_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RMobileHeader_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 285 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[_c('div',{staticClass:"mobile-header__inner"},[(_vm.$slots.leftAction)?_c('div',{staticClass:"mobile-header__left-action"},[_vm._t("leftAction")],2):_vm._e(),_vm._v(" "),_c('div',{staticClass:"mobile-header__content"},[_vm._t("content")],2),_vm._v(" "),(_vm.$slots.rightAction)?_c('div',{staticClass:"mobile-header__right-action"},[_vm._t("rightAction")],2):_vm._e()])])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 287 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RPage_vue__ = __webpack_require__(288);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RPage_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-page', __WEBPACK_IMPORTED_MODULE_0__RPage_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RPage_vue__["a" /* default */]);

/***/ }),
/* 288 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RPage_vue__ = __webpack_require__(127);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39f68eb0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RPage_vue__ = __webpack_require__(292);
function injectStyle (ssrContext) {
  __webpack_require__(289)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RPage_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_39f68eb0_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RPage_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 289 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 290 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 291 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.classes},[(_vm.$slots.title || _vm.$slots.titleElements)?_c('div',{staticClass:"page-headline__inner"},[(_vm.$slots.title)?_c('div',{staticClass:"page-headline__title"},[_vm._t("title")],2):_vm._e(),_vm._v(" "),(_vm.$slots.titleElements)?_c('div',{staticClass:"page-headline__elements"},[_vm._t("titleElements")],2):_vm._e()]):_vm._e(),_vm._v(" "),_vm._t("subtitle")],2)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 292 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"page",class:_vm.classes},[(_vm.$slots.preHeader)?_c('div',{staticClass:"page__preheader"},[_vm._t("preHeader")],2):_vm._e(),_vm._v(" "),(_vm.$slots.title || _vm.$slots.titleElements || _vm.$slots.subtitle)?_c('r-page-headline',{staticClass:"page__headline",attrs:{"headline-bordered":_vm.headlineBordered}},[_c('template',{slot:"title"},[_vm._t("title")],2),_vm._v(" "),_c('template',{slot:"titleElements"},[_vm._t("titleElements")],2),_vm._v(" "),_c('template',{slot:"subtitle"},[_vm._t("subtitle")],2)],2):_vm._e(),_vm._v(" "),_vm._t("preBody"),_vm._v(" "),_c('div',{staticClass:"page__body"},[_c('div',{staticClass:"page__row"},[(_vm.$slots.main)?_c('main',{staticClass:"page__main",class:_vm.mainClasses},[_vm._t("main")],2):_vm._e(),_vm._v(" "),(_vm.$slots.aside)?_c('aside',{staticClass:"page__aside",class:_vm.asideClasses},[_vm._t("aside")],2):_vm._e()])]),_vm._v(" "),_vm._t("default")],2)}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ }),
/* 293 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RPageHeadline_vue__ = __webpack_require__(128);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RPageHeadline_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-page-headline', __WEBPACK_IMPORTED_MODULE_0__RPageHeadline_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RPageHeadline_vue__["a" /* default */]);

/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RRichTextField_vue__ = __webpack_require__(295);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RRichTextField_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-rich-text-field', __WEBPACK_IMPORTED_MODULE_0__RRichTextField_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RRichTextField_vue__["a" /* default */]);

/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RRichTextField_vue__ = __webpack_require__(130);
/* unused harmony namespace reexport */
function injectStyle (ssrContext) {
  __webpack_require__(296)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */
var __vue_template__ = null
/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RRichTextField_vue__["a" /* default */],
  __vue_template__,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 296 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (t, e) {
  "object" == ( false ? "undefined" : _typeof(exports)) && "object" == ( false ? "undefined" : _typeof(module)) ? module.exports = e(__webpack_require__(131)) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(131)], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.VueQuillEditor = e(require("quill")) : t.VueQuillEditor = e(t.Quill);
}(this, function (t) {
  return function (t) {
    function e(i) {
      if (n[i]) return n[i].exports;var l = n[i] = { i: i, l: !1, exports: {} };return t[i].call(l.exports, l, l.exports, e), l.l = !0, l.exports;
    }var n = {};return e.m = t, e.c = n, e.i = function (t) {
      return t;
    }, e.d = function (t, n, i) {
      e.o(t, n) || Object.defineProperty(t, n, { configurable: !1, enumerable: !0, get: i });
    }, e.n = function (t) {
      var n = t && t.__esModule ? function () {
        return t.default;
      } : function () {
        return t;
      };return e.d(n, "a", n), n;
    }, e.o = function (t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }, e.p = "/", e(e.s = 2);
  }([function (e, n) {
    e.exports = t;
  }, function (t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 });var i = n(4),
        l = n.n(i),
        o = n(6),
        r = n(5),
        u = r(l.a, o.a, !1, null, null, null);e.default = u.exports;
  }, function (t, e, n) {
    "use strict";
    function i(t) {
      return t && t.__esModule ? t : { default: t };
    }Object.defineProperty(e, "__esModule", { value: !0 }), e.install = e.quillEditor = e.Quill = void 0;var l = n(0),
        o = i(l),
        r = n(1),
        u = i(r),
        s = window.Quill || o.default,
        a = function a(t, e) {
      e && (u.default.props.globalOptions.default = function () {
        return e;
      }), t.component(u.default.name, u.default);
    },
        c = { Quill: s, quillEditor: u.default, install: a };e.default = c, e.Quill = s, e.quillEditor = u.default, e.install = a;
  }, function (t, e, n) {
    "use strict";
    Object.defineProperty(e, "__esModule", { value: !0 }), e.default = { theme: "snow", boundary: document.body, modules: { toolbar: [["bold", "italic", "underline", "strike"], ["blockquote", "code-block"], [{ header: 1 }, { header: 2 }], [{ list: "ordered" }, { list: "bullet" }], [{ script: "sub" }, { script: "super" }], [{ indent: "-1" }, { indent: "+1" }], [{ direction: "rtl" }], [{ size: ["small", !1, "large", "huge"] }], [{ header: [1, 2, 3, 4, 5, 6, !1] }], [{ color: [] }, { background: [] }], [{ font: [] }], [{ align: [] }], ["clean"], ["link", "image", "video"]] }, placeholder: "Insert text here ...", readOnly: !1 };
  }, function (t, e, n) {
    "use strict";
    function i(t) {
      return t && t.__esModule ? t : { default: t };
    }Object.defineProperty(e, "__esModule", { value: !0 });var l = n(0),
        o = i(l),
        r = n(3),
        u = i(r),
        s = window.Quill || o.default;"function" != typeof Object.assign && Object.defineProperty(Object, "assign", { value: function value(t, e) {
        if (null == t) throw new TypeError("Cannot convert undefined or null to object");for (var n = Object(t), i = 1; i < arguments.length; i++) {
          var l = arguments[i];if (null != l) for (var o in l) {
            Object.prototype.hasOwnProperty.call(l, o) && (n[o] = l[o]);
          }
        }return n;
      }, writable: !0, configurable: !0 }), e.default = { name: "quill-editor", data: function data() {
        return { _options: {}, _content: "", defaultOptions: u.default };
      }, props: { content: String, value: String, disabled: { type: Boolean, default: !1 }, options: { type: Object, required: !1, default: function _default() {
            return {};
          } }, globalOptions: { type: Object, required: !1, default: function _default() {
            return {};
          } } }, mounted: function mounted() {
        this.initialize();
      }, beforeDestroy: function beforeDestroy() {
        this.quill = null, delete this.quill;
      }, methods: { initialize: function initialize() {
          var t = this;this.$el && (this._options = Object.assign({}, this.defaultOptions, this.globalOptions, this.options), this.quill = new s(this.$refs.editor, this._options), this.quill.enable(!1), (this.value || this.content) && this.quill.pasteHTML(this.value || this.content), this.disabled || this.quill.enable(!0), this.quill.on("selection-change", function (e) {
            e ? t.$emit("focus", t.quill) : t.$emit("blur", t.quill);
          }), this.quill.on("text-change", function (e, n, i) {
            var l = t.$refs.editor.children[0].innerHTML,
                o = t.quill,
                r = t.quill.getText();"<p><br></p>" === l && (l = ""), t._content = l, t.$emit("input", t._content), t.$emit("change", { html: l, text: r, quill: o });
          }), this.$emit("ready", this.quill));
        } }, watch: { content: function content(t, e) {
          this.quill && (t && t !== this._content ? (this._content = t, this.quill.pasteHTML(t)) : t || this.quill.setText(""));
        }, value: function value(t, e) {
          this.quill && (t && t !== this._content ? (this._content = t, this.quill.pasteHTML(t)) : t || this.quill.setText(""));
        }, disabled: function disabled(t, e) {
          this.quill && this.quill.enable(!t);
        } } };
  }, function (t, e) {
    t.exports = function (t, e, n, i, l, o) {
      var r,
          u = t = t || {},
          s = _typeof(t.default);"object" !== s && "function" !== s || (r = t, u = t.default);var a = "function" == typeof u ? u.options : u;e && (a.render = e.render, a.staticRenderFns = e.staticRenderFns, a._compiled = !0), n && (a.functional = !0), l && (a._scopeId = l);var c;if (o ? (c = function c(t) {
        t = t || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, t || "undefined" == typeof __VUE_SSR_CONTEXT__ || (t = __VUE_SSR_CONTEXT__), i && i.call(this, t), t && t._registeredComponents && t._registeredComponents.add(o);
      }, a._ssrRegister = c) : i && (c = i), c) {
        var d = a.functional,
            f = d ? a.render : a.beforeCreate;d ? (a._injectStyles = c, a.render = function (t, e) {
          return c.call(e), f(t, e);
        }) : a.beforeCreate = f ? [].concat(f, c) : [c];
      }return { esModule: r, exports: u, options: a };
    };
  }, function (t, e, n) {
    "use strict";
    var i = function i() {
      var t = this,
          e = t.$createElement,
          n = t._self._c || e;return n("div", { staticClass: "quill-editor" }, [t._t("toolbar"), t._v(" "), n("div", { ref: "editor" })], 2);
    },
        l = [],
        o = { render: i, staticRenderFns: l };e.a = o;
  }]);
});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module)))

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(299);
var ieee754 = __webpack_require__(300);
var isArray = __webpack_require__(301);

exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength();

function typedArraySupport() {
  try {
    var arr = new Uint8Array(1);
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {
        return 42;
      } };
    return arr.foo() === 42 && // typed array instances can be augmented
    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`
  } catch (e) {
    return false;
  }
}

function kMaxLength() {
  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
}

function createBuffer(that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length');
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length);
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length);
    }
    that.length = length;
  }

  return that;
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer(arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length);
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error('If encoding is specified then the first argument must be a string');
    }
    return allocUnsafe(this, arg);
  }
  return from(this, arg, encodingOrOffset, length);
}

Buffer.poolSize = 8192; // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype;
  return arr;
};

function from(that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number');
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length);
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset);
  }

  return fromObject(that, value);
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length);
};

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;
  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    });
  }
}

function assertSize(size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number');
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative');
  }
}

function alloc(that, size, fill, encoding) {
  assertSize(size);
  if (size <= 0) {
    return createBuffer(that, size);
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
  }
  return createBuffer(that, size);
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding);
};

function allocUnsafe(that, size) {
  assertSize(size);
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0;
    }
  }
  return that;
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size);
};

function fromString(that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8';
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding');
  }

  var length = byteLength(string, encoding) | 0;
  that = createBuffer(that, length);

  var actual = that.write(string, encoding);

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual);
  }

  return that;
}

function fromArrayLike(that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0;
  that = createBuffer(that, length);
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255;
  }
  return that;
}

function fromArrayBuffer(that, array, byteOffset, length) {
  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds');
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds');
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array);
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset);
  } else {
    array = new Uint8Array(array, byteOffset, length);
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array;
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array);
  }
  return that;
}

function fromObject(that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0;
    that = createBuffer(that, len);

    if (that.length === 0) {
      return that;
    }

    obj.copy(that, 0, 0, len);
    return that;
  }

  if (obj) {
    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0);
      }
      return fromArrayLike(that, obj);
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data);
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');
}

function checked(length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
  }
  return length | 0;
}

function SlowBuffer(length) {
  if (+length != length) {
    // eslint-disable-line eqeqeq
    length = 0;
  }
  return Buffer.alloc(+length);
}

Buffer.isBuffer = function isBuffer(b) {
  return !!(b != null && b._isBuffer);
};

Buffer.compare = function compare(a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers');
  }

  if (a === b) return 0;

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break;
    }
  }

  if (x < y) return -1;
  if (y < x) return 1;
  return 0;
};

Buffer.isEncoding = function isEncoding(encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true;
    default:
      return false;
  }
};

Buffer.concat = function concat(list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers');
  }

  if (list.length === 0) {
    return Buffer.alloc(0);
  }

  var i;
  if (length === undefined) {
    length = 0;
    for (i = 0; i < list.length; ++i) {
      length += list[i].length;
    }
  }

  var buffer = Buffer.allocUnsafe(length);
  var pos = 0;
  for (i = 0; i < list.length; ++i) {
    var buf = list[i];
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }
    buf.copy(buffer, pos);
    pos += buf.length;
  }
  return buffer;
};

function byteLength(string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length;
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength;
  }
  if (typeof string !== 'string') {
    string = '' + string;
  }

  var len = string.length;
  if (len === 0) return 0;

  // Use a for loop to avoid recursion
  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len;
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length;
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2;
      case 'hex':
        return len >>> 1;
      case 'base64':
        return base64ToBytes(string).length;
      default:
        if (loweredCase) return utf8ToBytes(string).length; // assume utf8
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
}
Buffer.byteLength = byteLength;

function slowToString(encoding, start, end) {
  var loweredCase = false;

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0;
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return '';
  }

  if (end === undefined || end > this.length) {
    end = this.length;
  }

  if (end <= 0) {
    return '';
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0;
  start >>>= 0;

  if (end <= start) {
    return '';
  }

  if (!encoding) encoding = 'utf8';

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end);

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end);

      case 'ascii':
        return asciiSlice(this, start, end);

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end);

      case 'base64':
        return base64Slice(this, start, end);

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end);

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
        encoding = (encoding + '').toLowerCase();
        loweredCase = true;
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true;

function swap(b, n, m) {
  var i = b[n];
  b[n] = b[m];
  b[m] = i;
}

Buffer.prototype.swap16 = function swap16() {
  var len = this.length;
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits');
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1);
  }
  return this;
};

Buffer.prototype.swap32 = function swap32() {
  var len = this.length;
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits');
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3);
    swap(this, i + 1, i + 2);
  }
  return this;
};

Buffer.prototype.swap64 = function swap64() {
  var len = this.length;
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits');
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7);
    swap(this, i + 1, i + 6);
    swap(this, i + 2, i + 5);
    swap(this, i + 3, i + 4);
  }
  return this;
};

Buffer.prototype.toString = function toString() {
  var length = this.length | 0;
  if (length === 0) return '';
  if (arguments.length === 0) return utf8Slice(this, 0, length);
  return slowToString.apply(this, arguments);
};

Buffer.prototype.equals = function equals(b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
  if (this === b) return true;
  return Buffer.compare(this, b) === 0;
};

Buffer.prototype.inspect = function inspect() {
  var str = '';
  var max = exports.INSPECT_MAX_BYTES;
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
    if (this.length > max) str += ' ... ';
  }
  return '<Buffer ' + str + '>';
};

Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer');
  }

  if (start === undefined) {
    start = 0;
  }
  if (end === undefined) {
    end = target ? target.length : 0;
  }
  if (thisStart === undefined) {
    thisStart = 0;
  }
  if (thisEnd === undefined) {
    thisEnd = this.length;
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index');
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0;
  }
  if (thisStart >= thisEnd) {
    return -1;
  }
  if (start >= end) {
    return 1;
  }

  start >>>= 0;
  end >>>= 0;
  thisStart >>>= 0;
  thisEnd >>>= 0;

  if (this === target) return 0;

  var x = thisEnd - thisStart;
  var y = end - start;
  var len = Math.min(x, y);

  var thisCopy = this.slice(thisStart, thisEnd);
  var targetCopy = target.slice(start, end);

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i];
      y = targetCopy[i];
      break;
    }
  }

  if (x < y) return -1;
  if (y < x) return 1;
  return 0;
};

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1;

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = 0;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  }
  byteOffset = +byteOffset; // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
  if (byteOffset >= buffer.length) {
    if (dir) return -1;else byteOffset = buffer.length - 1;
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0;else return -1;
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding);
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1;
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
  } else if (typeof val === 'number') {
    val = val & 0xFF; // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
      }
    }
    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
  }

  throw new TypeError('val must be string, number or Buffer');
}

function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
  var indexSize = 1;
  var arrLength = arr.length;
  var valLength = val.length;

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase();
    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1;
      }
      indexSize = 2;
      arrLength /= 2;
      valLength /= 2;
      byteOffset /= 2;
    }
  }

  function read(buf, i) {
    if (indexSize === 1) {
      return buf[i];
    } else {
      return buf.readUInt16BE(i * indexSize);
    }
  }

  var i;
  if (dir) {
    var foundIndex = -1;
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i;
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
      } else {
        if (foundIndex !== -1) i -= i - foundIndex;
        foundIndex = -1;
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
    for (i = byteOffset; i >= 0; i--) {
      var found = true;
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false;
          break;
        }
      }
      if (found) return i;
    }
  }

  return -1;
}

Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1;
};

Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};

Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};

function hexWrite(buf, string, offset, length) {
  offset = Number(offset) || 0;
  var remaining = buf.length - offset;
  if (!length) {
    length = remaining;
  } else {
    length = Number(length);
    if (length > remaining) {
      length = remaining;
    }
  }

  // must be an even number of digits
  var strLen = string.length;
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');

  if (length > strLen / 2) {
    length = strLen / 2;
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16);
    if (isNaN(parsed)) return i;
    buf[offset + i] = parsed;
  }
  return i;
}

function utf8Write(buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
}

function asciiWrite(buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length);
}

function latin1Write(buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length);
}

function base64Write(buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length);
}

function ucs2Write(buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
}

Buffer.prototype.write = function write(string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8';
    length = this.length;
    offset = 0;
    // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0;
    if (isFinite(length)) {
      length = length | 0;
      if (encoding === undefined) encoding = 'utf8';
    } else {
      encoding = length;
      length = undefined;
    }
    // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
  }

  var remaining = this.length - offset;
  if (length === undefined || length > remaining) length = remaining;

  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds');
  }

  if (!encoding) encoding = 'utf8';

  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length);

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length);

      case 'ascii':
        return asciiWrite(this, string, offset, length);

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length);

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length);

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length);

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
};

Buffer.prototype.toJSON = function toJSON() {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  };
};

function base64Slice(buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf);
  } else {
    return base64.fromByteArray(buf.slice(start, end));
  }
}

function utf8Slice(buf, start, end) {
  end = Math.min(buf.length, end);
  var res = [];

  var i = start;
  while (i < end) {
    var firstByte = buf[i];
    var codePoint = null;
    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint;

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte;
          }
          break;
        case 2:
          secondByte = buf[i + 1];
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint;
            }
          }
          break;
        case 3:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint;
            }
          }
          break;
        case 4:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          fourthByte = buf[i + 3];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint;
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD;
      bytesPerSequence = 1;
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000;
      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
      codePoint = 0xDC00 | codePoint & 0x3FF;
    }

    res.push(codePoint);
    i += bytesPerSequence;
  }

  return decodeCodePointsArray(res);
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000;

function decodeCodePointsArray(codePoints) {
  var len = codePoints.length;
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = '';
  var i = 0;
  while (i < len) {
    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
  }
  return res;
}

function asciiSlice(buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F);
  }
  return ret;
}

function latin1Slice(buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i]);
  }
  return ret;
}

function hexSlice(buf, start, end) {
  var len = buf.length;

  if (!start || start < 0) start = 0;
  if (!end || end < 0 || end > len) end = len;

  var out = '';
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i]);
  }
  return out;
}

function utf16leSlice(buf, start, end) {
  var bytes = buf.slice(start, end);
  var res = '';
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
  }
  return res;
}

Buffer.prototype.slice = function slice(start, end) {
  var len = this.length;
  start = ~~start;
  end = end === undefined ? len : ~~end;

  if (start < 0) {
    start += len;
    if (start < 0) start = 0;
  } else if (start > len) {
    start = len;
  }

  if (end < 0) {
    end += len;
    if (end < 0) end = 0;
  } else if (end > len) {
    end = len;
  }

  if (end < start) end = start;

  var newBuf;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
  } else {
    var sliceLen = end - start;
    newBuf = new Buffer(sliceLen, undefined);
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start];
    }
  }

  return newBuf;
};

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset(offset, ext, length) {
  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}

Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }

  return val;
};

Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length);
  }

  var val = this[offset + --byteLength];
  var mul = 1;
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul;
  }

  return val;
};

Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  return this[offset];
};

Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] | this[offset + 1] << 8;
};

Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] << 8 | this[offset + 1];
};

Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
};

Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};

Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val;
};

Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var i = byteLength;
  var mul = 1;
  var val = this[offset + --i];
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val;
};

Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  if (!(this[offset] & 0x80)) return this[offset];
  return (0xff - this[offset] + 1) * -1;
};

Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset] | this[offset + 1] << 8;
  return val & 0x8000 ? val | 0xFFFF0000 : val;
};

Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset + 1] | this[offset] << 8;
  return val & 0x8000 ? val | 0xFFFF0000 : val;
};

Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};

Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};

Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, true, 23, 4);
};

Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, false, 23, 4);
};

Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, true, 52, 8);
};

Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, false, 52, 8);
};

function checkInt(buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
  if (offset + ext > buf.length) throw new RangeError('Index out of range');
}

Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var mul = 1;
  var i = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = value / mul & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var i = byteLength - 1;
  var mul = 1;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = value / mul & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  this[offset] = value & 0xff;
  return offset + 1;
};

function objectWriteUInt16(buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2;
};

Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2;
};

function objectWriteUInt32(buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4;
};

Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4;
};

Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = 0;
  var mul = 1;
  var sub = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = byteLength - 1;
  var mul = 1;
  var sub = 0;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = (value / mul >> 0) - sub & 0xFF;
  }

  return offset + byteLength;
};

Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  if (value < 0) value = 0xff + value + 1;
  this[offset] = value & 0xff;
  return offset + 1;
};

Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2;
};

Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2;
};

Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4;
};

Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (value < 0) value = 0xffffffff + value + 1;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4;
};

function checkIEEE754(buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range');
  if (offset < 0) throw new RangeError('Index out of range');
}

function writeFloat(buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4);
  return offset + 4;
}

Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert);
};

Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert);
};

function writeDouble(buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8);
  return offset + 8;
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert);
};

Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert);
};

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy(target, targetStart, start, end) {
  if (!start) start = 0;
  if (!end && end !== 0) end = this.length;
  if (targetStart >= target.length) targetStart = target.length;
  if (!targetStart) targetStart = 0;
  if (end > 0 && end < start) end = start;

  // Copy 0 bytes; we're done
  if (end === start) return 0;
  if (target.length === 0 || this.length === 0) return 0;

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds');
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');
  if (end < 0) throw new RangeError('sourceEnd out of bounds');

  // Are we oob?
  if (end > this.length) end = this.length;
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start;
  }

  var len = end - start;
  var i;

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start];
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start];
    }
  } else {
    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
  }

  return len;
};

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill(val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start;
      start = 0;
      end = this.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = this.length;
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0);
      if (code < 256) {
        val = code;
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string');
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }
  } else if (typeof val === 'number') {
    val = val & 255;
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index');
  }

  if (end <= start) {
    return this;
  }

  start = start >>> 0;
  end = end === undefined ? this.length : end >>> 0;

  if (!val) val = 0;

  var i;
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val;
    }
  } else {
    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
    var len = bytes.length;
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len];
    }
  }

  return this;
};

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

function base64clean(str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '');
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return '';
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '=';
  }
  return str;
}

function stringtrim(str) {
  if (str.trim) return str.trim();
  return str.replace(/^\s+|\s+$/g, '');
}

function toHex(n) {
  if (n < 16) return '0' + n.toString(16);
  return n.toString(16);
}

function utf8ToBytes(string, units) {
  units = units || Infinity;
  var codePoint;
  var length = string.length;
  var leadSurrogate = null;
  var bytes = [];

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i);

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue;
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue;
        }

        // valid lead
        leadSurrogate = codePoint;

        continue;
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        leadSurrogate = codePoint;
        continue;
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
    }

    leadSurrogate = null;

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break;
      bytes.push(codePoint);
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break;
      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break;
      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break;
      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
    } else {
      throw new Error('Invalid code point');
    }
  }

  return bytes;
}

function asciiToBytes(str) {
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
  }
  return byteArray;
}

function utf16leToBytes(str, units) {
  var c, hi, lo;
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break;

    c = str.charCodeAt(i);
    hi = c >> 8;
    lo = c % 256;
    byteArray.push(lo);
    byteArray.push(hi);
  }

  return byteArray;
}

function base64ToBytes(str) {
  return base64.toByteArray(base64clean(str));
}

function blitBuffer(src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if (i + offset >= dst.length || i >= src.length) break;
    dst[i + offset] = src[i];
  }
  return i;
}

function isnan(val) {
  return val !== val; // eslint-disable-line no-self-compare
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function getLens(b64) {
  var len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4');
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=');
  if (validLen === -1) validLen = len;

  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;

  return [validLen, placeHoldersLen];
}

// base64 is 4/3 + up to two characters of the original data
function byteLength(b64) {
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}

function _byteLength(b64, validLen, placeHoldersLen) {
  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}

function toByteArray(b64) {
  var tmp;
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

  var curByte = 0;

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;

  for (var i = 0; i < len; i += 4) {
    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
    arr[curByte++] = tmp >> 16 & 0xFF;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 2) {
    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 1) {
    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
    arr[curByte++] = tmp >> 8 & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  return arr;
}

function tripletToBase64(num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}

function encodeChunk(uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
    output.push(tripletToBase64(tmp));
  }
  return output.join('');
}

function fromByteArray(uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
  var parts = [];
  var maxChunkLength = 16383; // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
  }

  return parts.join('');
}

/***/ }),
/* 300 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i = isLE ? nBytes - 1 : 0;
  var d = isLE ? -1 : 1;
  var s = buffer[offset + i];

  i += d;

  e = s & (1 << -nBits) - 1;
  s >>= -nBits;
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : (s ? -1 : 1) * Infinity;
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c;
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
  var i = isLE ? 0 : nBytes - 1;
  var d = isLE ? 1 : -1;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128;
};

/***/ }),
/* 301 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RMap_vue__ = __webpack_require__(303);


/* istanbul ignore next */
__WEBPACK_IMPORTED_MODULE_0__RMap_vue__["a" /* default */].install = function install(Vue) {
  Vue.component('r-map', __WEBPACK_IMPORTED_MODULE_0__RMap_vue__["a" /* default */]);
};

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__RMap_vue__["a" /* default */]);

/***/ }),
/* 303 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RMap_vue__ = __webpack_require__(132);
/* unused harmony namespace reexport */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2b5ad1da_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RMap_vue__ = __webpack_require__(309);
function injectStyle (ssrContext) {
  __webpack_require__(304)
}
var normalizeComponent = __webpack_require__(0)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_RMap_vue__["a" /* default */],
  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_2b5ad1da_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_RMap_vue__["a" /* default */],
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)

/* harmony default export */ __webpack_exports__["a"] = (Component.exports);


/***/ }),
/* 304 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 305 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UniversalMap; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__providers_ya_map_manager__ = __webpack_require__(306);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_double_gis_map_manager__ = __webpack_require__(307);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_google_map_manager__ = __webpack_require__(308);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }





var providers = {
  yandex: __WEBPACK_IMPORTED_MODULE_0__providers_ya_map_manager__["a" /* YaMapManager */],
  dg: __WEBPACK_IMPORTED_MODULE_1__providers_double_gis_map_manager__["a" /* DoubleGisMapManager */],
  google: __WEBPACK_IMPORTED_MODULE_2__providers_google_map_manager__["a" /* GoogleMapManager */]
};

var UniversalMap = function () {

  /**
   * @param {*} options
   */


  /**
   * @type {string}
   * @private
   */
  function UniversalMap() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, UniversalMap);

    this._map = null;
    this._defaultProvider = 'yandex';
    var _options$provider = options.provider,
        provider = _options$provider === undefined ? this._defaultProvider : _options$provider,
        apiKey = options.apiKey;


    this.setProvider(provider);
    this.setApiKey(apiKey);
  }

  /**
   * @param {string|*} provider
   */


  /**
   * @type {string}
   * @private
   */


  /**
   * @type {*}
   * @private
   */


  _createClass(UniversalMap, [{
    key: 'setProvider',
    value: function setProvider(provider) {
      var providerExists = providers.hasOwnProperty(provider);
      this._provider = providerExists ? provider : this._defaultProvider;
    }

    /**
     * @param {string} apiKey
     */

  }, {
    key: 'setApiKey',
    value: function setApiKey(apiKey) {
      this.manager.setApiKey(apiKey);
    }

    /**
     * @param {string} domId
     * @param {*} options
     */

  }, {
    key: 'createMap',
    value: function createMap(domId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      return this._map = this.manager.createMap(domId, options);
    }

    /**
     * @param {Array<Array<number>>} points
     */

  }, {
    key: 'createPlacemarks',
    value: function createPlacemarks() {
      var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      this.manager.createPlacemarks(this._map, points);
    }

    /**
     * Remove all placemarks on the map
     */

  }, {
    key: 'clearPlacemarks',
    value: function clearPlacemarks() {
      this.manager.clearPlacemarks(this._map);
    }

    /**
     * Updates map within viewport
     */

  }, {
    key: 'fitToViewport',
    value: function fitToViewport() {
      this.manager.fitToViewport(this._map);
    }

    /**
     * @param {string[]} controls
     */

  }, {
    key: 'setControls',
    value: function setControls() {
      var controls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      this.manager.setControls(this._map, controls);
    }

    /**
     * Clears all controls on the map
     */

  }, {
    key: 'clearControls',
    value: function clearControls() {
      this.manager.clearControls(this._map);
    }

    /**
     * @param {number[]} center
     * @param {number} zoom
     */

  }, {
    key: 'setCenterAndZoom',
    value: function setCenterAndZoom(center, zoom) {
      this.manager.setCenterAndZoom(this._map, center, zoom);
    }

    /**
     * @param {number[][]} points
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'updateOptimalCenterAndZoom',
    value: function updateOptimalCenterAndZoom() {
      var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      return this.manager.updateOptimalCenterAndZoom(this._map, points);
    }

    /**
     * @param {Function} cb
     */

  }, {
    key: 'addPointEventListener',
    value: function addPointEventListener() {
      var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {};

      this.manager.addPointEventListener(this._map, cb);
    }

    /**
     */

  }, {
    key: 'removePointEventListener',
    value: function removePointEventListener() {
      this.manager.removePointEventListener(this._map);
    }

    /**
     * @param {string} query
     * @param {*} options
     * @return {Promise<*>}
     */

  }, {
    key: 'searchQuery',
    value: function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this.manager.searchQuery(this._map, query, options));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function searchQuery() {
        return _ref.apply(this, arguments);
      }

      return searchQuery;
    }()

    /**
     * Destroy the map
     */

  }, {
    key: 'destroy',
    value: function destroy() {
      this.manager.destroy(this._map);
    }

    /**
     * @param {Array<number>} point
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'resolveAddressByPoint',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(point) {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                return _context2.abrupt('return', this.manager.resolveAddressByPoint(this._map, point));

              case 1:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function resolveAddressByPoint(_x9) {
        return _ref2.apply(this, arguments);
      }

      return resolveAddressByPoint;
    }()

    /**
     * @return {YaMapManager|DoubleGisMapManager|GoogleMapManager}
     */

  }, {
    key: 'manager',
    get: function get() {
      return providers[this._provider].getManager();
    }

    /**
     * @return {*}
     */

  }, {
    key: 'map',
    get: function get() {
      return this._map;
    }

    /**
     * @return {boolean}
     */

  }, {
    key: 'isMapCreated',
    get: function get() {
      return !!this._map;
    }
  }]);

  return UniversalMap;
}();

/***/ }),
/* 306 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export MAP_SDK */
/* unused harmony export MAP_SDK_PROP */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return YaMapManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map_manager__ = __webpack_require__(32);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var MAP_SDK = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU';
var MAP_SDK_PROP = 'ymaps';

var YaMapManager = function (_MapManager) {
  _inherits(YaMapManager, _MapManager);

  function YaMapManager() {
    _classCallCheck(this, YaMapManager);

    return _possibleConstructorReturn(this, (YaMapManager.__proto__ || Object.getPrototypeOf(YaMapManager)).apply(this, arguments));
  }

  _createClass(YaMapManager, [{
    key: 'load',


    /**
     * @return {Promise<*>}
     */
    value: function load() {
      return this.loadSdk(this._buildSdkUrl());
    }

    /**
     * @return {Promise<any>}
     */

  }, {
    key: 'onSdkReady',
    value: function onSdkReady() {
      var _this2 = this;

      return new Promise(function (resolve) {
        return _this2.sdk.ready(resolve);
      });
    }

    /**
     * @param {string} domId
     * @param {*} options
     */

  }, {
    key: 'createMap',
    value: function createMap(domId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      options = Object.assign({}, options, {
        controls: this.resolveControls(options.controls)
      });

      return new this.sdk.Map(domId, options, options);
    }

    /**
     * @param {*} map
     * @param {Array<Array<number>>} points
     */

  }, {
    key: 'createPlacemarks',
    value: function createPlacemarks(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      var geoCollection = new this.sdk.GeoObjectCollection({}, {
        preset: 'islands#redCircleIcon',
        strokeWidth: 2
      });

      for (var i = 0; i < points.length; ++i) {
        var point = points[i];
        var placemark = this._createCustomPlacemark(point);
        placemark.editor.startEditing();
        geoCollection.add(placemark);
      }

      map.geoObjects.add(geoCollection);
    }

    /**
     * Remove all placemarks on the map
     *
     * @param {*} map
     */

  }, {
    key: 'clearPlacemarks',
    value: function clearPlacemarks(map) {
      map.geoObjects.removeAll();
    }

    /**
     * Updates map within viewport
     *
     * @param {*} map
     */

  }, {
    key: 'fitToViewport',
    value: function fitToViewport(map) {
      setTimeout(function (_) {
        map && map.container.fitToViewport();
      }, 0);
    }

    /**
     * @param {*} map
     * @param {string[]} controls
     */

  }, {
    key: 'setControls',
    value: function setControls(map) {
      var controls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      this.clearControls(map);

      var resolvedControls = this.resolveControls(controls);

      for (var i = 0; i < resolvedControls.length; ++i) {
        map.controls.add(resolvedControls[i]);
      }
    }

    /**
     * Clears all controls on the map
     *
     * @param {*} map
     */

  }, {
    key: 'clearControls',
    value: function clearControls(map) {
      var controls = Object.keys(map.controls._controlsByKey);

      for (var i = 0; i < controls.length; ++i) {
        map.controls.remove(controls[i]);
      }
    }

    /**
     * @param {*} map
     * @param {number[]} center
     * @param {number} zoom
     */

  }, {
    key: 'setCenterAndZoom',
    value: function setCenterAndZoom(map, center, zoom) {
      center = this.toNativePoint(center);

      map.panTo(center, { duration: 200 }).then(function (_) {
        map.setZoom(zoom);
      });
    }

    /**
     * @param {*} map
     * @param {number[][]} points
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'updateOptimalCenterAndZoom',
    value: function updateOptimalCenterAndZoom(map) {
      var _this3 = this;

      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      if (!points.length) {
        return Promise.resolve();
      }

      points = this.toNativePoints(points);

      return this._findOptimalCenterAndZoom(map, points).then(function () {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            center = _ref.center,
            zoom = _ref.zoom;

        _this3.setCenterAndZoom(map, center, zoom);
      });
    }

    /**
     * @param {*} map
     * @param {Function} cb
     */

  }, {
    key: 'addPointEventListener',
    value: function addPointEventListener(map) {
      var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

      var fn = function fn(e) {
        return cb(e.get('coords'));
      };

      map._placementClickEvents = (map._placementClickEvents || []).concat(fn);
      map.events.add('click', fn);

      map.cursors.push('pointer');
    }

    /**
     * @param {*} map
     */

  }, {
    key: 'removePointEventListener',
    value: function removePointEventListener(map) {
      var placementClicks = map._placementClickEvents || [];

      for (var i = 0; i < placementClicks.length; ++i) {
        var clickListener = placementClicks[i];
        map.events.remove('click', clickListener);
      }

      var cursorStack = map.cursors._cursorStack || [];
      var last = cursorStack[cursorStack.length - 1];
      if (last && last._key === 'pointer') {
        last.remove();
      }
    }

    /**
     * @param {*} map
     * @param {string} query
     * @param {number} limit
     * @return {Promise<*>}
     */

  }, {
    key: 'searchQuery',
    value: function () {
      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(map) {
        var _this4 = this;

        var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

        var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
            _ref3$limit = _ref3.limit,
            limit = _ref3$limit === undefined ? 5 : _ref3$limit;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt('return', this.sdk.geocode(query, {
                  results: limit
                }).then(function (res) {
                  var geoObjects = res.geoObjects.toArray();

                  return geoObjects.map(function (geoObject) {
                    return _this4.extractGeoObjectData(geoObject);
                  });
                }));

              case 1:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function searchQuery(_x7) {
        return _ref2.apply(this, arguments);
      }

      return searchQuery;
    }()

    /**
     * Destroys the map
     *
     * @param {*} map
     */

  }, {
    key: 'destroy',
    value: function destroy(map) {
      map.destroy();
    }

    /**
     * @param {*} map
     * @param {Array<number>} point
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'resolveAddressByPoint',
    value: function () {
      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(map, point) {
        var _this5 = this;

        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                point = this.toNativePoint(point);

                return _context2.abrupt('return', this.sdk.geocode(point).then(function (res) {
                  var firstGeoObject = res.geoObjects.get(0);
                  return _this5.extractGeoObjectData(firstGeoObject, point);
                }));

              case 2:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function resolveAddressByPoint(_x10, _x11) {
        return _ref4.apply(this, arguments);
      }

      return resolveAddressByPoint;
    }()

    /**
     * @param {*} geoObject
     * @param {number[]|*} originPoint
     * @return {{point: number[], name: string, adressLine: string, locality: string, debugProperties: *}}
     */

  }, {
    key: 'extractGeoObjectData',
    value: function extractGeoObjectData(geoObject) {
      var originPoint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      var parsedData = geoObject._getParsedXal();
      var locality = (parsedData.localities || [])[0];
      if (!locality) {
        locality = (parsedData.administrativeAreas || [])[0];
      }

      return {
        kind: geoObject.properties.get('metaDataProperty').GeocoderMetaData.kind,
        point: this.toNativePoint(originPoint || geoObject.geometry.getCoordinates()),
        name: geoObject.properties.get('name'),
        adressLine: geoObject.getAddressLine(),
        locality: locality,
        debugProperties: geoObject.properties.getAll()
      };
    }

    /**
     * @return {string}
     */

  }, {
    key: '_createCustomPlacemark',


    /**
     * @param {number[]|{coord: number[], name: string}} point
     * @return {*}
     * @private
     */
    value: function _createCustomPlacemark(point) {
      var coord = this.toNativePoint(point);
      var name = null;

      if (!Array.isArray(point)) {
        name = point.name || 'Отмеченная точка';
      }

      var contentOptions = {};

      if (name) {
        Object.assign(contentOptions, {
          hintContent: name,
          balloonContent: name
        });
      }

      return new this.sdk.Placemark(coord, contentOptions);
    }

    /**
     * @param {*} map
     * @param {number[][]} points
     * @return {PromiseLike<T>}
     */

  }, {
    key: '_findOptimalCenterAndZoom',
    value: function _findOptimalCenterAndZoom(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      var sdk = this.sdk;

      var bounds = null;
      if (points.length > 1) {
        bounds = sdk.util.bounds.fromPoints(points);
      } else {
        return Promise.resolve({
          center: points[0] || this.defaultCenterPoint,
          zoom: 14
        });
      }

      return sdk.util.requireCenterAndZoom(map.getType(), bounds, map.container.getSize());
    }

    /**
     * @returns {string}
     * @private
     */

  }, {
    key: '_buildSdkUrl',
    value: function _buildSdkUrl() {
      var baseUrl = MAP_SDK;
      var apiKey = this.apiKey;

      if (!apiKey) {
        return baseUrl;
      }

      var hasQs = baseUrl.includes('?');
      var apiKeyQs = (hasQs ? '&' : '?') + 'apikey=' + apiKey;

      return baseUrl + apiKeyQs;
    }
  }, {
    key: 'sdkObjectName',
    get: function get() {
      return MAP_SDK_PROP;
    }

    /**
     * @return {*}
     */

  }, {
    key: 'controlsMapping',
    get: function get() {
      return {
        zoom: 'zoomControl',
        fullscreen: 'fullscreenControl'
      };
    }
  }], [{
    key: 'getManager',


    /**
     * @return {YaMapManager}
     */
    value: function getManager() {
      if (this._instance) {
        return this._instance;
      }

      return this._instance = new YaMapManager();
    }

    /**
     * @type {YaMapManager}
     * @private
     */

  }]);

  return YaMapManager;
}(__WEBPACK_IMPORTED_MODULE_0__map_manager__["a" /* MapManager */]);
YaMapManager._instance = null;

/***/ }),
/* 307 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export MAP_SDK */
/* unused harmony export MAP_SDK_PROP */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoubleGisMapManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map_manager__ = __webpack_require__(32);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var MAP_SDK = 'https://maps.api.2gis.ru/2.0/loader.js?pkg=full';
var MAP_SDK_PROP = 'DG';

var DoubleGisMapManager = function (_MapManager) {
  _inherits(DoubleGisMapManager, _MapManager);

  function DoubleGisMapManager() {
    _classCallCheck(this, DoubleGisMapManager);

    return _possibleConstructorReturn(this, (DoubleGisMapManager.__proto__ || Object.getPrototypeOf(DoubleGisMapManager)).apply(this, arguments));
  }

  _createClass(DoubleGisMapManager, [{
    key: 'load',


    /**
     * @return {Promise<*>}
     */
    value: function load() {
      return this.loadSdk(MAP_SDK);
    }

    /**
     * @return {Promise<any>}
     */

  }, {
    key: 'onSdkReady',
    value: function onSdkReady() {
      return this.sdk; // DG is Promise type
    }

    /**
     * @param {string} domId
     * @param {*} options
     */

  }, {
    key: 'createMap',
    value: function createMap(domId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      var map = this.sdk.map(domId, options);

      var _options$controls = options.controls,
          controls = _options$controls === undefined ? [] : _options$controls;


      this.clearControls(map);
      this.setControls(map, controls);

      return map;
    }

    /**
     * @param {*} map
     * @param {Array<Array<number>>} points
     */

  }, {
    key: 'createPlacemarks',
    value: function createPlacemarks(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      /* const placemarkIcon = this.sdk.icon({
        iconUrl: 'my-icon.png',
        iconRetinaUrl: 'my-icon@2x.png',
        iconSize: [38, 95],
        iconAnchor: [22, 94],
        popupAnchor: [-3, -76],
        shadowUrl: 'my-icon-shadow.png',
        shadowRetinaUrl: 'my-icon-shadow@2x.png',
        shadowSize: [68, 95],
        shadowAnchor: [22, 94]
      });*/

      if (map && !map._myMarkers) {
        map._myMarkers = [];
      }

      for (var i = 0; i < points.length; ++i) {
        var point = points[i];
        var placemark = this._createCustomPlacemark(point);
        placemark.addTo(map);

        map._myMarkers.push(placemark);
      }
    }

    /**
     * Remove all placemarks on the map
     *
     * @param {*} map
     */

  }, {
    key: 'clearPlacemarks',
    value: function clearPlacemarks(map) {
      if (!map || !map._myMarkers) {
        return;
      }
      var markers = map._myMarkers;

      for (var i = 0; i < markers.length; ++i) {
        var marker = markers[i];
        marker && marker.remove();
      }

      map._myMarkers = [];
    }

    /**
     * Updates map within viewport
     *
     * @param {*} map
     */

  }, {
    key: 'fitToViewport',
    value: function fitToViewport(map) {
      map && map.invalidateSize(true);
    }

    /**
     * @param {*} map
     * @param {string[]} controls
     */

  }, {
    key: 'setControls',
    value: function setControls(map) {
      var controls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      this.clearControls(map);

      var resolvedControls = this.resolveControls(controls);

      for (var i = 0; i < resolvedControls.length; ++i) {
        var control = map[resolvedControls[i]];
        if (control && !control.map) {
          control.addTo(map);
        }
      }
    }

    /**
     * Clears all controls on the map
     *
     * @param {*} map
     */

  }, {
    key: 'clearControls',
    value: function clearControls(map) {
      Object.values(this.controlsMapping).forEach(function (value) {
        var control = map[value];
        if (control) {
          control.remove();
        }
      });
    }

    /**
     * @param {*} map
     * @param {number[]} center
     * @param {number} zoom
     */

  }, {
    key: 'setCenterAndZoom',
    value: function setCenterAndZoom(map, center, zoom) {
      map.panTo(center);
      map.setZoom(zoom);
    }

    /**
     * @param {*} map
     * @param {number[][]} points
     * @return {PromiseLike<T>}
     */

  }, {
    key: 'updateOptimalCenterAndZoom',
    value: function updateOptimalCenterAndZoom(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      var bounds = this._findGeometryBounds(map, points);

      try {
        map.fitBounds(bounds);
      } catch (e) {}

      return Promise.resolve();
    }

    /**
     * Destroy the map
     *
     * @param {*} map
     */

  }, {
    key: 'destroy',
    value: function destroy(map) {
      map.remove();
    }

    /**
     * @return {string}
     */

  }, {
    key: '_createCustomPlacemark',


    /**
     * @param {number[]|{point: number[], name: string}} point
     * @return {*}
     * @private
     */
    value: function _createCustomPlacemark(point) {
      var coord = null;
      if (Array.isArray(point)) {
        coord = point;
      } else {
        coord = point.point;
      }
      return this.sdk.marker(coord);
    }

    /**
     * @param {*} map
     * @param {number[][]} points
     * @return {PromiseLike<T>}
     * @private
     */

  }, {
    key: '_findGeometryBounds',
    value: function _findGeometryBounds(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      var sdk = this.sdk;

      var group = sdk.featureGroup(map._myMarkers || []);

      return group.getBounds();
    }
  }, {
    key: 'sdkObjectName',
    get: function get() {
      return MAP_SDK_PROP;
    }

    /**
     * @return {*}
     */

  }, {
    key: 'controlsMapping',
    get: function get() {
      return {
        zoom: 'zoomControl',
        fullscreen: 'fullscreenControl'
      };
    }
  }], [{
    key: 'getManager',


    /**
     * @return {DoubleGisMapManager}
     */
    value: function getManager() {
      if (this._instance) {
        return this._instance;
      }

      return this._instance = new DoubleGisMapManager();
    }

    /**
     * @type {DoubleGisMapManager}
     * @private
     */

  }]);

  return DoubleGisMapManager;
}(__WEBPACK_IMPORTED_MODULE_0__map_manager__["a" /* MapManager */]);
DoubleGisMapManager._instance = null;

/***/ }),
/* 308 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export MAP_SDK_KEY */
/* unused harmony export MAP_SDK */
/* unused harmony export MAP_SDK_PROP */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GoogleMapManager; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__map_manager__ = __webpack_require__(32);
var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }



var MAP_SDK_KEY = 'AIzaSyAyK9FgGmO_i0IoxeJwT3bTBHv0oi1fZT0';
var MAP_SDK = 'https://maps.googleapis.com/maps/api/js?key=' + MAP_SDK_KEY;
var MAP_SDK_PROP = 'google';

var GoogleMapManager = function (_MapManager) {
  _inherits(GoogleMapManager, _MapManager);

  function GoogleMapManager() {
    _classCallCheck(this, GoogleMapManager);

    return _possibleConstructorReturn(this, (GoogleMapManager.__proto__ || Object.getPrototypeOf(GoogleMapManager)).apply(this, arguments));
  }

  _createClass(GoogleMapManager, [{
    key: 'load',


    /**
     * @return {Promise<*>}
     */
    value: function load() {
      return this.loadSdk(MAP_SDK);
    }

    /**
     * @return {Promise<any>}
     */

  }, {
    key: 'onSdkReady',
    value: function onSdkReady(name) {
      return Promise.resolve();
    }

    /**
     * @param {string} domId
     * @param {*} options
     */

  }, {
    key: 'createMap',
    value: function createMap(domId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var center = options.center;

      options.center = {
        lat: center[0],
        lng: center[1]
      };

      return new this.sdk.maps.Map(document.getElementById(domId), options);
    }

    /**
     * @param {*} map
     * @param {Array<Array<number>>} points
     */

  }, {
    key: 'createPlacemarks',
    value: function createPlacemarks(map) {
      var points = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      for (var i = 0; i < points.length; ++i) {
        var point = points[i];
        this._createCustomPlacemark(map, point);
      }
    }

    /**
     * @return {string}
     */

  }, {
    key: '_createCustomPlacemark',


    /**
     * @param {*} map
     * @param {number[]|{coord: number[], name: string}} point
     * @return {*}
     * @private
     */
    value: function _createCustomPlacemark(map, point) {
      var coord = null;
      if (Array.isArray(point)) {
        coord = point;
      } else {
        coord = point.point;
      }
      var position = { lat: coord[0], lng: coord[1] };
      return new this.sdk.maps.Marker({ position: position, map: map });
    }
  }, {
    key: 'sdkObjectName',
    get: function get() {
      return MAP_SDK_PROP;
    }
  }], [{
    key: 'getManager',


    /**
     * @return {GoogleMapManager}
     */
    value: function getManager() {
      if (this._instance) {
        return this._instance;
      }

      return this._instance = new GoogleMapManager();
    }

    /**
     * @type {GoogleMapManager}
     * @private
     */

  }]);

  return GoogleMapManager;
}(__WEBPACK_IMPORTED_MODULE_0__map_manager__["a" /* MapManager */]);
GoogleMapManager._instance = null;

/***/ }),
/* 309 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('r-smart-render',{class:_vm.computedClasses,attrs:{"onlyBrowser":"","elementWidth":_vm.computedWidth,"elementHeight":_vm.computedHeight,"visibilityObserver":_vm.visibilityObserver},on:{"render":_vm.onRender}},[_c('div',{directives:[{name:"resize",rawName:"v-resize",value:(_vm.onResize),expression:"onResize"}],staticClass:"r-map__map",style:(_vm.computedStyles),attrs:{"id":_vm.domIdentifier}})])}
var staticRenderFns = []
var esExports = { render: render, staticRenderFns: staticRenderFns }
/* harmony default export */ __webpack_exports__["a"] = (esExports);

/***/ })
/******/ ]);
});
//# sourceMappingURL=rabotify.js.map